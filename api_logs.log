2023-12-20 13:06:28,698 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: जहां बेहतर Rakkad संसाधित कर रहा है एकत्र किया गया है।
2023-12-20 13:06:32,713 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: #ah nah nah nahin gaya a rahe ho ఎక్కడ బ్యాటింగ్ చట్టం ఉంది.
2023-12-20 13:06:33,170 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: #ah nah nah nahin gaya a rahe ho कहाँ है बल्लेबाजी कानून।
2023-12-20 13:06:33,327 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: #ah nah nah nahin gaya a rahe ho எங்கே பேட்டிங் சட்டம்?
2023-12-20 13:06:33,580 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: #आह ना ना ना ना ना gaya a rahe ho, कुठे आहे बॅटिंग कायदा?
2023-12-20 13:06:45,691 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture – 26 Solution of Loading
2023-12-20 13:06:47,494 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture  26 Solution of Loading.
2023-12-20 13:06:47,641 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture  26 Solution of Loading.
2023-12-26 10:57:25,469 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture – 03 விரிவுரை - 02 Lecture –
2023-12-26 10:57:27,941 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture,  03, Lecture, - 02, Lecture.
2023-12-26 10:57:28,058 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture  03, Lecture - 02, Lecture.
2023-12-26 10:57:28,182 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture  03, Lecture - 02, Lecture.
2023-12-27 09:44:29,075 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture – 14 விரிவுரை -
2023-12-27 09:44:32,035 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture  14 व्या व्याख्यान. -
2023-12-27 09:44:32,046 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture  14 ఉపన్యాసం? -
2023-12-27 12:59:35,910 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: मौके से डंप डाटा भी उठाया गया है जिसकी जांच की जा रही है। करीब पांच हजार मोबाइल मंगलवार की उस दौरान वहां एक्टिव मिले हैं। डंप डाटा से भी सुराग ढूंढने की कोशिश जारी है। 2012 और 2021 में पिछली दोनों घटना को भी बहुत ही सफाई से अंजाम दिया गया था। उस दौरान भी जांच संबंधी पूरी कवायद की गई थी, लेकिन आज तक उक्त दोनों मामले में कोई सुराग नहीं मिल सका है। वहीं, इजरायली नागरिकों को रेस्तरां, होटल, पब में जाने से बचने की भी हिदायत दी गई है। इसके अलावा नागरिकों को यात्रा के दौरान लाइव तस्वीरें और लेकोशन को शेयर न करने की भी सलाह दी गई है। इससे पहले साल 2021 में नई दिल्ली के चाणक्यपुरी में मौजूद इजरायली दूतावास के बाहर एक विस्फोट हुआ था जिसमें कारें क्षतिग्रस्त हो गईं, लेकिन कोई हताहत नहीं हुआ। मंगलवार को इजराइल दूतावास के पीछे हुई घटना को लेकर दिल्ली पुलिस ने सीसीटीवी फुटेज की जांच के बाद दो संदिग्धों को गिरफ्तार किया है। सीसीटीवी फुटेज खंगाल कर इस बाती की जानकारी जुटा रहे हैं कि दोनों संदिग्ध वहां कैसे पहुंचे और उन्होंने कौन सा रास्ता अपनाया। इजरायली दूतावास ने इस विस्फोट को हम एक आतंकी गतिविधि मानकर चल रहे हैं। डेढ़ साल के तनिष ने अभी-अभी चलना शुरू किया है, लेकिन उसे बाउलेग और नॉक नी की समस्या है। 4 वर्षीय नाईशा की कलाइयों और टखनों में सूजन और दर्द रहता है। सात साल का कबीर थकान और मूड स्विंग की परेशानी का सामना कर रहा है। लेकिन क्या आप जानते हैं कि अलग-अलग समस्या से जूझ रहे इन तीनों बच्चों में एक ही पोषक तत्व की कमी थी और वो है विटामिन डी। हम सभी जानते हैं कि विटामिन डी को सनसाइन विटामिन कहा जाता है, लेकिन इसके पीछे क्या प्रमुख कारण हैं? हमारी त्वचा में D3 रिसेप्टर होते हैं। जब ये रिसेप्टर धूप में आते हैं तो हमारी किडनी और लिवर द्वारा विटामिन डी सक्रिय हो जाते हैं। लेकिन हमारी शहरी जीवनशैली में हम अपना अधिकतर समय एयर कंडीशनर कमरों व गाड़ियों में ही बिताते हैं। ऐसे में हमारा शरीर सूर्य के सम्पर्क में नहीं आ पाता। जिसके कारण वर्तमान समय में ज्यादातर लोग विटामिन डी की कमी से जूझ रहे हैं।
2023-12-28 10:17:19,790 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: <music/> नमस्कार लोकसभा चाचणीत स्वागत आहे, तुम्ही लोकसभा चाचणीत आहात.
2023-12-28 10:17:20,310 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: <music/> హలో లోక్సభ పరీక్షలకు స్వాగతం మీరు లోక్సభ పరీక్షలు చేస్తున్నారు.
2023-12-28 10:17:20,327 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: <music/> வணக்கம் மக்களவை சோதனைக்கு வரவேற்கிறோம் நீங்கள் மக்களவை சோதனை செய்கிறீர்கள்.
2023-12-28 15:07:58,371 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:14:23,528 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:14:24,416 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:15:30,221 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:15:31,218 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:17:25,280 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 193, in synthesize
    global fastspeech2_models
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 244, in synthesize
UnboundLocalError: local variable 'text' referenced before assignment
2023-12-28 15:17:43,180 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 193, in synthesize
    global fastspeech2_models
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 244, in synthesize
UnboundLocalError: local variable 'text' referenced before assignment
2023-12-28 15:18:06,371 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:18:06,387 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:19:21,941 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:19:21,945 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: இதைப் பின்பற்றுங்கள். இது லோக் சபா திட்ட சோதனை சோதனை 3 சோதனை. t. p. s க்கு சோதனை. இது சரியாக வேலை செய்கிறதா என்று பாருங்கள். 1 2 3
2023-12-28 15:48:37,115 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: லோக் சபா திட்டத்திற்கான சோதனைகள் சோதனை ஐந்து நீண்ட கால தாமதமாக tts #ah அது சரியாக நம்புகிறேன்?
2023-12-28 15:48:37,868 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: लोकसभा परियोजना के लिए परीक्षण- परीक्षण पांच के दौरान लंबे समय से देरी #ah आशा है कि यह ठीक से के लिए
2023-12-28 15:54:28,171 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 193, in synthesize
    global fastspeech2_models
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 244, in synthesize
UnboundLocalError: local variable 'text' referenced before assignment
2023-12-28 15:54:28,496 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 193, in synthesize
    global fastspeech2_models
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 244, in synthesize
UnboundLocalError: local variable 'text' referenced before assignment
2023-12-29 00:50:24,480 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 193, in synthesize
    global fastspeech2_models
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 244, in synthesize
UnboundLocalError: local variable 'text' referenced before assignment
2023-12-29 00:50:35,923 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 193, in synthesize
    global fastspeech2_models
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 244, in synthesize
UnboundLocalError: local variable 'text' referenced before assignment
2023-12-29 00:50:47,379 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 193, in synthesize
    global fastspeech2_models
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 244, in synthesize
UnboundLocalError: local variable 'text' referenced before assignment
2023-12-29 09:06:02,473 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 193, in synthesize
    global fastspeech2_models
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 244, in synthesize
UnboundLocalError: local variable 'text' referenced before assignment
2024-01-02 11:37:14,443 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: लोकसभा परियोजना परीक्षा तीन परीक्षा उनके कामकाजी ठीक के लिए #ah यहाँ है।
2024-01-02 11:59:16,461 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: हम इस परीक्षण को Scaves Agarwal के लिए कर रहे हैं और उम्मीद है कि यह सही हो जाएगा।
2024-01-02 12:13:38,733 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: # అబ్బాయి ఈ ఒక tirachin మూలలో ఉంది.
2024-01-02 12:13:38,843 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: # अरे दोस्तों यह एक tirachin कोने है।
2024-01-02 12:13:39,003 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: # ஆஹா. இது ஒரு tirachin மூலையில் உள்ளது.
2024-01-02 12:32:41,262 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: எனவே, கேசவ் அகர்வாலிற்கு நான் இப்பொழுது இந்த 2 Software ஐ காண்பிக்கிறேன்.
2024-01-03 09:51:27,245 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture – 16 Introduction to Phase
2024-01-03 09:51:27,864 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture 16 Introduction to Phase.
2024-01-03 09:51:29,372 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: Lecture  16 Introduction to Phase।
2024-01-03 09:51:55,060 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: விரிவுரை - 03 ஜனவரி 3 2, 22, 22, 22, 22, 22, 24, 24, 24,
2024-01-03 14:12:15,277 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: how are you?
2024-01-03 14:15:28,204 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: पहलगाम और अनंतनाग में तापमान satva माइनस
2024-01-03 19:38:56,851 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: पहलगाम और अनंतनाग में तापमान satva माइनस
2024-01-03 20:20:46,895 - ERROR - synthesize - Line 244 - Exception occurred: 'english'. Input text: हम इस परीक्षण को keshav Agrwal के लिए कर रहे हैं और उम्मीद है कि यह सही हो जाएगा।
2024-01-03 20:41:38,915 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ। ", 'ਕੱਲ੍ਹ ਮੈਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਬਾਰੇ ਗੱਲ ਕੀਤੀ, ਅਤੇ। ']
2024-01-03 20:42:18,007 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ। ", 'ਕੱਲ੍ਹ ਮੈਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਬਾਰੇ ਗੱਲ ਕੀਤੀ, ਅਤੇ।']
2024-01-03 20:42:41,994 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ। ", 'ਕੱਲ੍ਹ ਮੈਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਬਾਰੇ ਗੱਲ ਕੀਤੀ, ਅਤੇ।']
2024-01-03 20:49:04,936 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 20:50:02,088 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 20:55:38,400 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-03 20:55:38,401 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-03 20:55:38,401 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 20:55:44,645 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 20:55:44,671 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 20:56:16,905 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 20:56:18,724 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 20:56:25,009 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 20:56:25,034 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 20:56:59,281 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 20:57:01,078 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 20:57:05,909 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 20:57:07,346 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 20:57:07,372 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 20:57:24,501 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 20:57:26,346 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 20:57:32,593 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 20:57:32,620 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 20:58:54,210 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 20:58:55,950 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 20:59:02,187 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 20:59:02,215 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:02:18,035 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:02:18] "[35m[1mPOST /vtt_to_speech HTTP/1.1[0m" 500 -
2024-01-03 21:02:30,872 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-03 21:02:30,872 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-03 21:02:30,873 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:02:37,558 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:02:37,589 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:03:01,769 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:03:03,692 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:03:09,981 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:03:10,008 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:03:20,096 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:03:21,867 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:03:28,290 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:03:28,317 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:04:34,799 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:04:36,145 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:04:42,373 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:04:42,404 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:05:46,911 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:05:48,462 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:05:54,727 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:05:54,756 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:06:12,899 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:06:14,701 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:06:20,945 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:06:20,972 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:07:13,348 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:07:14,734 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:07:21,017 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:07:21,044 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:08:14,221 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:08:14] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:09:05,998 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-03 21:09:05,998 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-03 21:09:05,998 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:09:12,168 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:09:12,195 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:09:45,271 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:09:45] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:10:59,115 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:11:01,423 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:11:07,686 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:11:07,716 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:11:25,726 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:11:25] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:12:10,369 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:12:12,696 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:12:18,942 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:12:18,970 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:12:27,747 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:12:27] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:13:32,527 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:13:34,851 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:13:41,065 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:13:41,093 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:13:47,486 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:13:47] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:14:30,189 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:14:32,565 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:14:38,865 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:14:38,898 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:14:42,939 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:14:44,727 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:14:50,937 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:14:50,966 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:15:01,551 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:15:01] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:15:58,228 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:16:00,567 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:16:06,807 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:16:06,837 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:16:14,066 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:16:14] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:17:17,564 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:17:19,957 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:17:26,182 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:17:26,211 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:17:35,854 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:17:35] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:18:03,322 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:18:05,650 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:18:11,966 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:18:11,997 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:18:32,147 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:18:33,996 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:18:40,312 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:18:40,346 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:18:46,855 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:18:46] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:19:29,491 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:19:31,817 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:19:38,091 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:19:38,122 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:21:43,986 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:21:45,773 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:21:51,976 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:21:52,005 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:23:33,449 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-03 21:23:33,449 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-03 21:23:33,449 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:23:39,725 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:23:39,749 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:25:28,537 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:25:29,939 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:25:36,194 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:25:36,220 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:25:47,307 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:25:49,093 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:25:55,370 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:25:55,395 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:29:49,048 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:29:50,472 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:29:56,720 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:29:56,749 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:33:43,330 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:33:44,764 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:33:51,022 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:33:51,051 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:33:56,100 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:33:57,930 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:34:04,209 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:34:04,247 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:35:25,853 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:35:27,459 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:35:33,757 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:35:33,786 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:36:20,208 - ERROR - extract_text_from_vtt - Line 171 - Exception occurred: type of argument "text" must be one of (str, torch.Tensor, numpy.ndarray); got list instead. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ।"]
2024-01-03 21:36:20,209 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:36:20] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:38:53,355 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:38:55,257 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:39:01,512 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:39:01,543 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:39:12,935 - ERROR - extract_text_from_vtt - Line 164 - Exception occurred: local variable 'preprocesssed_txt' referenced before assignment. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ।"]
2024-01-03 21:39:12,936 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:39:12] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:39:49,898 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:39:51,684 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:39:57,955 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:39:57,988 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:40:08,545 - ERROR - extract_text_from_vtt - Line 164 - Exception occurred: local variable 'preprocesssed_txt' referenced before assignment. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ।"]
2024-01-03 21:40:08,547 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:40:08] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:40:32,238 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:40:34,026 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:40:40,277 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:40:40,307 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:40:48,416 - ERROR - extract_text_from_vtt - Line 164 - Exception occurred: local variable 'preprocesssed_txt' referenced before assignment. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ।"]
2024-01-03 21:40:48,417 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:40:48] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:41:20,596 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:41:22,396 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:41:28,698 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:41:28,731 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:41:40,827 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:41:42,649 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:41:48,883 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:41:48,920 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:41:55,949 - ERROR - extract_text_from_vtt - Line 164 - Exception occurred: type of argument "text" must be one of (str, torch.Tensor, numpy.ndarray); got list instead. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ।"]
2024-01-03 21:41:55,950 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:41:55] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:44:54,272 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:44:56,273 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:45:02,656 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:45:02,692 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:45:15,794 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:45:17,624 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:45:23,937 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:45:23,972 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:45:48,158 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:45:49,965 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:45:56,238 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:45:56,274 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:46:36,572 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:46:38,392 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:46:44,696 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:46:44,729 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:46:58,842 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:47:00,691 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:47:06,997 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:47:07,031 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:47:26,564 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:47:26] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:48:17,020 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:48:19,574 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:48:25,833 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:48:25,869 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:48:34,519 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:48:34] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:48:59,981 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:49:02,384 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:49:08,702 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:49:08,738 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:49:15,764 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:49:15] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:49:54,319 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:49:56,734 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:50:03,023 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:50:03,059 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:50:08,107 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:50:09,893 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:50:16,194 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:50:16,230 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:50:22,865 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:50:22] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:51:44,782 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:51:47,102 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:51:53,347 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:51:53,383 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:52:18,947 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:52:18] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:52:25,063 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:52:27,467 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:52:33,761 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:52:33,798 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:52:41,527 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:52:41] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:54:32,638 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:54:35,068 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:54:41,332 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:54:41,370 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:55:34,748 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:55:36,580 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:55:42,842 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:55:42,878 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:55:47,926 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 21:55:49,753 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:55:56,704 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:55:56,739 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:56:50,107 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 21:56:52,005 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:56:58,272 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:56:58,309 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:57:20,470 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:57:22,278 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:57:28,715 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:57:28,750 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:57:35,689 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:57:35] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:57:56,531 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:57:56] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 21:58:42,449 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 21:58:44,888 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 21:58:51,195 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 21:58:51,233 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 21:58:58,565 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 21:58:58] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:01:37,877 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:01:40,337 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:01:46,661 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:01:46,698 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:01:50,743 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:01:52,546 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:01:58,803 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:01:58,839 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:02:06,903 - ERROR - extract_text_from_vtt - Line 189 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ। ", 'ਕੱਲ੍ਹ ਮੈਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਬਾਰੇ ਗੱਲ ਕੀਤੀ, ਅਤੇ। ']
2024-01-03 22:02:06,904 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:02:06] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:02:33,092 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:02:34,910 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:02:41,246 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:02:41,283 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:04:15,947 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:04:17,769 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:04:24,054 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:04:24,090 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:04:59,360 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:05:01,164 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:05:07,533 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:05:07,570 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:05:28,608 - ERROR - extract_text_from_vtt - Line 189 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ। ", 'ਕੱਲ੍ਹ ਮੈਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਬਾਰੇ ਗੱਲ ਕੀਤੀ, ਅਤੇ। ']
2024-01-03 22:05:28,610 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:05:28] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:06:17,052 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:06:18,877 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:06:25,147 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:06:25,183 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:06:31,211 - ERROR - extract_text_from_vtt - Line 189 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ। ", 'ਕੱਲ੍ਹ ਮੈਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਬਾਰੇ ਗੱਲ ਕੀਤੀ, ਅਤੇ। ']
2024-01-03 22:06:31,212 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:06:31] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:07:58,830 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:08:00,673 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:08:06,940 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:08:06,978 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:10:43,093 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:10:44,439 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:10:50,709 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:10:50,750 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:11:00,834 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:11:02,670 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:11:08,968 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:11:09,007 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:12:33,618 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:12:34,971 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:12:41,240 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:12:41,282 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:12:58,217 - ERROR - extract_text_from_vtt - Line 189 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ', "ਅਸੀਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਦੇ ਵਿਸ਼ੇ 'ਤੇ ਅੱਗੇ ਵਧਾਂਗੇ। ", 'ਕੱਲ੍ਹ ਮੈਂ ਗੈਰ-ਪੈਰਾਮੀਟ੍ਰਿਕ ਟੈਸਟ ਬਾਰੇ ਗੱਲ ਕੀਤੀ, ਅਤੇ। ']
2024-01-03 22:12:58,219 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:12:58] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:13:42,716 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:13:44,542 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:13:51,285 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:13:51,323 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:14:29,485 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:14:29] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:15:17,964 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:15:20,471 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:15:26,790 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:15:26,828 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:15:29,863 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:15:31,714 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:15:38,013 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:15:38,049 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:15:52,156 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:15:53,997 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:16:00,320 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:16:00,359 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:18:31,377 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:18:33,236 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:18:39,604 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:18:39,642 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:18:49,383 - ERROR - extract_text_from_vtt - Line 186 - Exception occurred: 'english'. Input text: ['ਉਦਾਹਰਨ ਲਈ, x ਧੁਰਾ ਵਰਗੇ।  ', 'ਸੁਤੰਤਰ ਨਮੂਨੇ, ਫਿਰ ਉੱਥੇ Kriskal ਮੁੱਲ ਟੈਸਟ ਕਹਿੰਦੇ ਹਨ, ਕੁਝ ਹੈ.  ', 'ਇਸ ਲਈ ਇਹ ਬਾਲਗਾਂ ਨੂੰ ਦਿੱਤਾ ਗਿਆ ਸੀ ਅਤੇ #um।  ']
2024-01-03 22:18:49,385 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:18:49] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:19:17,925 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:19:19,781 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:19:26,167 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:19:26,206 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:19:32,678 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:19:32] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:20:32,410 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:20:34,770 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:20:41,065 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:20:41,103 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:20:41,122 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['ਇਸ ਲਈ ਇਹ ਬਾਲਗਾਂ ਨੂੰ ਦਿੱਤਾ ਗਿਆ ਸੀ ਅਤੇ #um।  ']
2024-01-03 22:20:41,123 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:20:41] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:20:51,194 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:20:53,021 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:20:59,341 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:20:59,379 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:20:59,397 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['ਇਸ ਲਈ ਇਹ ਬਾਲਗਾਂ ਨੂੰ ਦਿੱਤਾ ਗਿਆ ਸੀ ਅਤੇ।  ']
2024-01-03 22:20:59,398 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:20:59] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 22:41:42,276 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-03 22:41:42,276 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-03 22:41:42,277 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:41:48,514 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:41:48,562 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:41:51,599 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:41:53,591 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:42:03,565 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-03 22:42:03,565 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-03 22:42:03,566 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:42:09,852 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:42:09,885 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:42:18,446 - ERROR - synthesize - Line 248 - Exception occurred: 'english'. Input text: पहलगाम और अनंतनाग में Keshav agrawal तापमान माइनस
2024-01-03 22:42:18,448 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:42:18] "POST / HTTP/1.1" 200 -
2024-01-03 22:42:59,244 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:43:01,031 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:43:07,275 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:43:07,305 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:43:07,480 - ERROR - synthesize - Line 248 - Exception occurred: [Errno 2] No such file or directory: 'vocoder/None/aryan/hifigan/config.json'. Input text: पहलगाम और अनंतनाग में तापमान माइनस
2024-01-03 22:43:07,481 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:43:07] "POST / HTTP/1.1" 200 -
2024-01-03 22:44:18,989 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:44:20,788 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:44:27,102 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:44:27,135 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:44:56,857 - ERROR - synthesize - Line 248 - Exception occurred: [Errno 2] No such file or directory: 'vocoder/None/aryan/hifigan/config.json'. Input text: पहलगाम और अनंतनाग में तापमान माइनस
2024-01-03 22:44:56,859 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:44:56] "POST / HTTP/1.1" 200 -
2024-01-03 22:46:33,012 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:46:34,840 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:46:41,145 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:46:41,176 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:46:48,259 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:46:48] "POST / HTTP/1.1" 200 -
2024-01-03 22:47:00,646 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:47:03,031 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:47:09,267 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:47:09,299 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:47:09,637 - ERROR - synthesize - Line 250 - Exception occurred: 'english'. Input text: पहलगाम और अनंतनाग में Utkarsh तापमान माइनस
2024-01-03 22:47:09,639 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:47:09] "POST / HTTP/1.1" 200 -
2024-01-03 22:48:21,852 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:48:23,697 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:48:29,968 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:48:30,000 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:48:30,335 - ERROR - synthesize - Line 250 - Exception occurred: 'english'. Input text: पहलगाम और अनंतनाग में Utkarsh तापमान माइनस
2024-01-03 22:48:30,336 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:48:30] "POST / HTTP/1.1" 200 -
2024-01-03 22:48:49,162 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:48:50,969 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:48:57,264 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:48:57,298 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:49:04,824 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:49:04] "POST / HTTP/1.1" 200 -
2024-01-03 22:49:20,203 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:49:22,589 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:49:28,953 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:49:28,988 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:49:36,469 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:49:36] "POST / HTTP/1.1" 200 -
2024-01-03 22:51:04,186 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-03 22:51:06,633 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:51:12,941 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:51:12,977 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:51:29,457 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:51:29] "POST / HTTP/1.1" 200 -
2024-01-03 22:51:39,839 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:51:42,144 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:51:48,444 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:51:48,478 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:51:57,932 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:51:57] "POST / HTTP/1.1" 200 -
2024-01-03 22:52:32,459 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:52:34,857 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:52:41,076 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:52:41,112 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:53:19,384 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:53:21,195 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:53:27,735 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:53:27,771 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:53:37,066 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:53:37] "POST / HTTP/1.1" 200 -
2024-01-03 22:53:47,451 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:53:49,821 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:53:56,240 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:53:56,282 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:54:07,395 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:54:07] "POST / HTTP/1.1" 200 -
2024-01-03 22:56:44,782 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 22:56:47,247 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:56:53,548 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:56:53,588 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:59:38,704 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 22:59:40,556 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 22:59:47,536 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 22:59:47,578 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 22:59:47,778 - ERROR - synthesize - Line 250 - Exception occurred: max() arg is an empty sequence. Input text: ..
2024-01-03 22:59:47,779 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 22:59:47] "POST / HTTP/1.1" 200 -
2024-01-03 23:04:53,669 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:04:55,610 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:05:01,857 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:05:01,894 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:05:02,088 - ERROR - synthesize - Line 251 - Exception occurred: max() arg is an empty sequence. Input text: ..
2024-01-03 23:05:02,088 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:05:02] "POST / HTTP/1.1" 200 -
2024-01-03 23:11:00,343 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:11:02,222 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:11:08,534 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:11:08,570 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:14:13,818 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:14:15,690 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:14:21,984 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:14:22,021 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:14:46,202 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:14:48,014 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:14:54,359 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:14:54,397 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:14:54,412 - ERROR - synthesize - Line 257 - Exception occurred: local variable 'input_type' referenced before assignment. Input text: ..
2024-01-03 23:14:54,413 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:14:54] "POST / HTTP/1.1" 200 -
2024-01-03 23:15:57,849 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:15:59,659 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:16:05,970 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:16:06,006 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:16:18,100 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:16:19,943 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:16:26,277 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:16:26,313 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:16:26,328 - ERROR - synthesize - Line 207 - Unsupported input type ... Input text should have some text or be in string format. Input text: ..
2024-01-03 23:16:26,329 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:16:26] "POST / HTTP/1.1" 200 -
2024-01-03 23:17:32,788 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:17:34,618 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:17:40,943 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:17:40,980 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:17:47,792 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:17:47] "POST / HTTP/1.1" 200 -
2024-01-03 23:18:00,179 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:18:02,615 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:18:08,904 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:18:08,942 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:18:16,241 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:18:16] "POST / HTTP/1.1" 200 -
2024-01-03 23:19:58,018 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:20:00,503 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:20:06,809 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:20:06,846 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:20:09,882 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:20:11,713 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:20:18,038 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:20:18,075 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:20:27,151 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:20:28,951 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:20:33,515 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: [' ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:20:35,270 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:20:35,328 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:21:05,583 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:21:06,505 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: [' ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:21:07,731 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:21:14,071 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:21:14,116 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:21:20,172 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:21:21,821 - ERROR - extract_text_from_vtt - Line 181 - Exception occurred: sequence item 0: expected str instance, list found. Input text: [' ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:21:22,008 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:21:28,375 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:21:28,414 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:22:06,691 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:22:08,491 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:22:14,814 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:22:14,852 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:22:14,870 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:22:14,872 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:22:14] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:22:47,090 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:22:48,896 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:22:55,200 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:22:55,239 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:22:55,256 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' मौके से डंप डाटा भी उठाया गया है जिसकी जांच की जा रही है। ']
2024-01-03 23:22:55,257 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:22:55] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:23:09,360 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:23:11,191 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:23:17,481 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:23:17,517 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:23:18,890 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' मौके से डंप डाटा भी उठाया गया है जिसकी जांच की जा रही है। ']
2024-01-03 23:23:18,891 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:23:18] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:23:45,729 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:23:47,563 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:23:53,909 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:23:53,945 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:23:54,139 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' मौके से डंप डाटा भी उठाया गया है जिसकी जांच की जा रही है। ']
2024-01-03 23:23:54,140 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:23:54] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:24:06,055 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:24:07,896 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:24:14,241 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:24:14,278 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:24:18,322 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:24:20,136 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:24:26,424 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:24:26,462 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:24:26,659 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' मौके से डंप डाटा भी उठाया गया है जिसकी जांच की जा रही है। ']
2024-01-03 23:24:26,660 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:24:26] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:24:45,617 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:24:47,394 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:24:53,659 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:24:53,698 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:24:53,895 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:24:53,896 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:24:53] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:25:45,068 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:25:46,896 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:25:53,157 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:25:53,196 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:25:53,214 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:25:53,215 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:25:53] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:27:45,987 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:27:47,839 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:27:54,182 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:27:54,219 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:27:54,237 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:27:54,237 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:27:54] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:29:00,686 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:29:02,527 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:29:08,834 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:29:08,872 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:29:08,889 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: [' ਹੈਲੋ ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:29:08,890 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:29:08] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:29:22,987 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:29:24,784 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:29:31,163 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:29:31,199 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:29:39,268 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:29:41,083 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:29:47,362 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:29:47,398 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:29:47,413 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: ['ਹੈਲੋ ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:29:47,414 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:29:47] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:30:10,573 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:30:12,401 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:30:18,727 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:30:18,764 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:30:18,780 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: list index out of range. Input text: ['ਹੈਲੋ ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-03 23:30:18,781 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:30:18] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-03 23:30:56,041 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:30:57,861 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:31:04,193 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:31:04,232 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:31:08,272 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:31:10,108 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:31:16,386 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:31:16,423 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:31:21,470 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:31:23,255 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:31:29,567 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:31:29,603 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:32:01,831 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:32:03,666 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:32:09,985 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:32:10,023 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:32:10,041 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:32:10] "[35m[1mPOST / HTTP/1.1[0m" 500 -
2024-01-03 23:33:00,390 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:33:02,206 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:33:08,502 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:33:08,540 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:33:16,739 - INFO - _log - Line 224 - 127.0.0.1 - - [03/Jan/2024 23:33:16] "POST / HTTP/1.1" 200 -
2024-01-03 23:37:15,616 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:37:18,151 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:37:24,489 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:37:24,530 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:37:47,698 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:37:49,521 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:37:55,825 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:37:55,862 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:39:11,387 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:39:13,239 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:39:19,565 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:39:19,603 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:39:38,746 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:39:40,602 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:39:46,898 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:39:46,937 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:39:48,963 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-03 23:39:50,811 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:39:57,131 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:39:57,168 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-03 23:40:11,278 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-03 23:40:13,097 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-03 23:40:19,406 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-03 23:40:19,445 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 11:32:46,625 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 11:32:48,521 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 11:32:54,802 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 11:32:54,840 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 11:32:54,932 - ERROR - synthesize - Line 261 - Exception occurred: [Errno 2] No such file or directory: 'vocoder/None/aryan/hifigan/config.json'. Input text: .....पहलगाम और अनंतनाग में Keshav तापमान माइनस
2024-01-04 11:32:54,933 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 11:32:54] "POST / HTTP/1.1" 200 -
2024-01-04 11:33:24,133 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-04 11:33:25,957 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 11:33:32,320 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 11:33:32,361 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 11:33:39,588 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 11:33:39] "POST / HTTP/1.1" 200 -
2024-01-04 11:35:15,337 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-04 11:35:17,817 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 11:35:24,226 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 11:35:24,265 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 11:51:42,015 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 11:51:43,895 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 11:51:50,227 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 11:51:50,268 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 11:51:50,283 - ERROR - synthesize - Line 213 - Unsupported input type कर्नाटक के बाद महाराष्ट्र में भगवान राम के नाम पर राजनीतिक विवाद खड़ा हो गया है। शरद पवार वाली एनसीपी के नेता डॉ. जितेंद्र आव्हाड द्वारा भगवान राम को मांसाहारी बताए जाने पर गुस्सा भड़क गया है।. Input text should have some text or be in string format. Input text: कर्नाटक के बाद महाराष्ट्र में भगवान राम के नाम पर राजनीतिक विवाद खड़ा हो गया है। शरद पवार वाली एनसीपी के नेता डॉ. जितेंद्र आव्हाड द्वारा भगवान राम को मांसाहारी बताए जाने पर गुस्सा भड़क गया है।
2024-01-04 11:51:50,284 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 11:51:50] "POST / HTTP/1.1" 200 -
2024-01-04 11:52:13,444 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-04 11:52:15,280 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 11:52:22,132 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 11:52:22,168 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 11:52:24,197 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-04 11:52:26,069 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 11:52:32,432 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 11:52:32,473 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 11:52:39,579 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 11:52:39] "POST / HTTP/1.1" 200 -
2024-01-04 12:35:44,622 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-04 12:35:47,242 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:35:53,554 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:35:53,592 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:36:23,811 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:36:25,668 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:36:32,010 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:36:32,051 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:36:51,194 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:36:53,033 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:36:59,328 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:36:59,369 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:37:02,404 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:37:04,240 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:37:10,509 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:37:10,549 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:37:16,270 - ERROR - extract_text_from_vtt - Line 189 - Exception occurred: list index out of range. Input text: ['ਹੈਲੋ ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ। ']
2024-01-04 12:37:16,271 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 12:37:16] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-04 12:37:47,815 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:37:49,645 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:37:55,998 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:37:56,039 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:38:06,123 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:38:08,002 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:38:14,328 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:38:14,370 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:38:14,389 - ERROR - extract_text_from_vtt - Line 189 - Exception occurred: list index out of range. Input text: ['ਹੈਲੋ, ਜੀਵ-ਵਿਗਿਆਨ ਅਤੇ ਪ੍ਰਯੋਗਾਂ ਦੇ ਡਿਜ਼ਾਈਨ ਦੇ ਕੋਰਸ ਵਿੱਚ ਤੁਹਾਡਾ ਸੁਆਗਤ ਹੈ।']
2024-01-04 12:38:14,390 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 12:38:14] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-04 12:38:59,687 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:39:01,516 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:39:07,867 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:39:07,908 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:39:14,489 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 12:39:14] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-04 12:39:45,005 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:39:47,433 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:39:53,790 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:39:53,836 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:40:00,436 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 12:40:00] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-04 12:40:41,004 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:40:43,447 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:40:49,750 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:40:49,800 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:40:56,213 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 12:40:56] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-04 12:41:07,667 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-04 12:41:10,073 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:41:16,427 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:41:16,469 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:41:23,580 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 12:41:23] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-04 12:41:49,042 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:41:51,418 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:41:57,734 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:41:57,777 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:42:04,649 - INFO - _log - Line 224 - 127.0.0.1 - - [04/Jan/2024 12:42:04] "POST /vtt_to_speech HTTP/1.1" 200 -
2024-01-04 12:50:04,278 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-04 12:50:06,692 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:50:12,969 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:50:13,012 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:50:48,267 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-04 12:50:50,130 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-04 12:50:56,505 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-04 12:50:56,549 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-04 12:51:46,213 - ERROR - synthesize - Line 244 - Exception occurred: [Errno 2] No such file or directory: 'bodo/male/model/config.yaml'. Input text: हॅलो
2024-01-04 12:58:03,972 - ERROR - synthesize - Line 256 - Exception occurred: [Errno 2] No such file or directory: 'bodo/male/model/config.yaml'. Input text: हॅलो
2024-01-04 13:00:35,116 - ERROR - synthesize - Line 256 - Exception occurred: list index out of range. Input text: मौके से डंप Utkarsh sडाटा भी उठाया गया है जिसकी जांच की जा रही है। करीब पांच हजार मोबाइल मंगलवार की उस दौरान वहां एक्टिव मिले हैं। डंप डाटा से भी सुराग ढूंढने की कोशिश जारी है। 2012 और 2021 में पिछली दोनों घटना को भी बहुत ही सफाई से अंजाम दिया गया था। उस दौरान भी जांच संबंधी पूरी कवायद की गई थी, लेकिन आज तक उक्त दोनों मामले में कोई सुराग नहीं मिल सका है। वहीं, इजरायली नागरिकों को रेस्तरां, होटल, पब में जाने से बचने की भी हिदायत दी गई है। इसके अलावा नागरिकों को यात्रा के दौरान लाइव तस्वीरें और लेकोशन को शेयर न करने की भी सलाह दी गई है। इससे पहले साल 2021 में नई दिल्ली के चाणक्यपुरी में मौजूद इजरायली दूतावास के बाहर एक विस्फोट हुआ था जिसमें कारें क्षतिग्रस्त हो गईं, लेकिन कोई हताहत नहीं हुआ। मंगलवार को इजराइल दूतावास के पीछे हुई घटना को लेकर दिल्ली पुलिस ने सीसीटीवी फुटेज की जांच के बाद दो संदिग्धों को गिरफ्तार किया है। सीसीटीवी फुटेज खंगाल कर इस बाती की जानकारी जुटा रहे हैं कि दोनों संदिग्ध वहां कैसे पहुंचे और उन्होंने कौन सा रास्ता अपनाया। इजरायली दूतावास ने इस विस्फोट को हम एक आतंकी गतिविधि मानकर चल रहे हैं। डेढ़ साल के तनिष ने अभी-अभी चलना शुरू किया है, लेकिन उसे बाउलेग और नॉक नी की समस्या है। 4 वर्षीय नाईशा की कलाइयों और टखनों में सूजन और दर्द रहता है। सात साल का कबीर थकान और मूड स्विंग की परेशानी का सामना कर रहा है। लेकिन क्या आप जानते हैं कि अलग-अलग समस्या से जूझ रहे इन तीनों बच्चों में एक ही पोषक तत्व की कमी थी और वो है विटामिन डी। हम सभी जानते हैं कि विटामिन डी को सनसाइन विटामिन कहा जाता है, लेकिन इसके पीछे क्या प्रमुख कारण हैं? हमारी त्वचा में रिसेप्टर होते हैं। जब ये रिसेप्टर धूप में आते हैं तो हमारी किडनी और लिवर द्वारा विटामिन डी सक्रिय हो जाते हैं। लेकिन हमारी शहरी जीवनशैली में हम अपना अधिकतर समय एयर कंडीशनर कमरों व गाड़ियों में ही बिताते हैं। ऐसे में हमारा शरीर सूर्य के सम्पर्क में नहीं आ पाता। जिसके कारण वर्तमान समय में ज्यादातर लोग विटामिन डी की कमी से जूझ रहे हैं।
2024-01-08 16:58:12,602 - ERROR - log_exception - Line 1742 - Exception on / [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 201, in synthesize
    json_data = request.get_json()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 256, in synthesize
    logging.error(f"Exception occurred: {err}. Input text: {text}")
UnboundLocalError: local variable 'text' referenced before assignment
2024-01-08 19:20:22,967 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-08 19:20:57,051 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-08 19:21:36,088 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-08 19:40:13,759 - ERROR - extract_text_from_vtt - Line 187 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 11:25:08,058 - ERROR - extract_text_from_vtt - Line 187 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 11:27:33,099 - ERROR - extract_text_from_vtt - Line 190 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 11:40:08,661 - ERROR - extract_text_from_vtt - Line 190 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 11:49:41,362 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 11:53:27,122 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 11:55:10,098 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 12:00:11,477 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 12:00:44,595 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 12:07:53,852 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 12:13:37,746 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 12:15:35,454 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 12:46:53,047 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: zero-dimensional arrays cannot be concatenated. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'வரை', 'u மற்றும் v. வரை. ']
2024-01-09 12:49:03,471 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'வரை', 'u மற்றும் v. வரை. ']
2024-01-09 12:52:39,706 - ERROR - extract_text_from_vtt - Line 191 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'வரை.', 'u மற்றும் v. வரை. ']
2024-01-09 12:56:59,267 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'வரை.', 'u மற்றும் v. வரை. ']
2024-01-09 12:58:17,308 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'வரை.', 'u மற்றும் v. வரை. ']
2024-01-09 13:02:16,308 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'வரை.', 'u மற்றும் v. வரை. ']
2024-01-09 13:07:37,808 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 13:09:20,732 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-09 13:09:20,733 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-09 13:09:20,734 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 13:09:32,551 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 13:09:33,254 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 13:09:33,281 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 13:09:50,585 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-09 13:10:28,337 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 13:11:08,171 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 13:11:20,809 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 13:11:20,838 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 13:11:31,406 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 13:11:55,404 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-09 13:12:04,926 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 13:12:17,443 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 13:12:17,469 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 13:12:18,521 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-09 13:12:24,339 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 13:12:36,967 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 13:12:36,996 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 13:13:02,433 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-09 13:13:07,552 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 13:13:07,561 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 13:13:20,316 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 13:13:20,344 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 13:13:58,981 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-09 13:14:06,785 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 13:14:07,534 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 13:14:09,795 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 13:14:19,500 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 13:14:19,529 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 15:26:20,003 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api_debug copy.py', reloading
2024-01-09 16:25:07,735 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 16:27:34,471 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 17:05:10,603 - ERROR - extract_text_from_vtt - Line 193 - Exception occurred: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 17:36:32,364 - ERROR - extract_text_from_vtt - Line 195 - Exception occurred: Object of type BytesIO is not JSON serializable. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 17:38:38,828 - ERROR - extract_text_from_vtt - Line 196 - Exception occurred: Object of type BytesIO is not JSON serializable. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 21:56:18,275 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-09 21:56:18,275 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-09 21:56:18,275 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 21:56:24,473 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 21:56:24,499 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 21:56:52,709 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-09 21:56:54,089 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 21:56:54,490 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 21:57:00,766 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 21:57:00,797 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 21:57:23,973 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-09 21:57:25,757 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 21:57:31,945 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 21:57:31,971 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 21:57:37,018 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-09 21:57:38,806 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 21:57:39,386 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 21:57:45,086 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 21:57:45,113 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 21:59:30,145 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-09 21:59:30,146 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-09 21:59:30,147 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 21:59:42,727 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 21:59:42,758 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-09 21:59:47,547 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 22:02:35,924 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: list index out of range. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. ']
2024-01-09 22:04:32,384 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-09 22:04:32,384 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-09 22:04:32,384 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-09 22:04:38,612 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-09 22:04:38,639 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 11:16:35,038 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api_debug3.py', reloading
2024-01-11 11:16:36,863 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 11:16:43,122 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 11:16:43,147 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 11:31:48,402 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api_debug3.py', reloading
2024-01-11 11:31:50,248 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 11:31:56,487 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 11:31:56,517 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 11:35:07,831 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api_debug3.py', reloading
2024-01-11 11:35:09,646 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 11:35:15,948 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 11:35:15,977 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 15:49:37,777 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-11 15:49:39,699 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 15:49:45,994 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 15:49:46,026 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 15:51:25,735 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-11 15:51:27,546 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 15:51:33,846 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 15:51:33,878 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 15:52:12,726 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-11 15:52:12,726 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-11 15:52:12,726 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 15:52:18,973 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 15:52:19,000 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 15:55:51,481 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-11 15:55:53,302 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 15:55:59,555 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 15:55:59,585 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 15:56:17,728 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-11 15:56:19,521 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 15:56:25,807 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 15:56:25,836 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 15:57:32,311 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-11 15:57:34,148 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 15:57:40,382 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 15:57:40,409 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-11 15:59:34,197 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-11 15:59:35,997 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-11 15:59:42,234 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-11 15:59:42,263 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-12 16:28:03,688 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-12 16:28:05,552 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-12 16:28:11,805 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-12 16:28:11,834 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-12 16:57:25,736 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-12 16:57:25,736 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-12 16:57:25,736 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-12 16:57:32,020 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-12 16:57:32,049 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-12 16:57:58,246 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-12 16:58:00,079 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-12 16:58:06,327 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-12 16:58:06,356 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-13 19:00:24,224 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-13 19:00:26,099 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-14 13:30:56,582 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-14 13:30:56,582 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-14 13:30:56,582 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-14 13:31:02,801 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-14 13:31:02,826 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-14 13:31:41,767 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-14 13:31:41,767 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-14 13:31:41,767 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-14 13:31:48,040 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-14 13:31:48,068 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-16 12:09:41,777 - ERROR - synthesize - Line 256 - Exception occurred: max() arg is an empty sequence. Input text: : :
2024-01-16 12:09:42,733 - ERROR - synthesize - Line 256 - Exception occurred: max() arg is an empty sequence. Input text: :
2024-01-16 12:09:42,881 - ERROR - synthesize - Line 256 - Exception occurred: max() arg is an empty sequence. Input text: :
2024-01-16 12:09:42,944 - ERROR - synthesize - Line 256 - Exception occurred: max() arg is an empty sequence. Input text: :
2024-01-19 10:37:38,984 - ERROR - synthesize - Line 256 - Exception occurred: list index out of range. Input text: हाँ सर. <बबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबबब
2024-01-22 13:11:13,729 - ERROR - synthesize - Line 256 - Exception occurred: CUDA out of memory. Tried to allocate 2.91 GiB (GPU 1; 23.69 GiB total capacity; 6.54 GiB already allocated; 1.50 GiB free; 6.77 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:07.000
t உங்கள் வாழ்க்கை கடினமாக உள்ளது என்று நீங்கள் நினைத்தால் மற்றும் நீங்கள் அதை விட்டு, ஏனெனில் நீங்கள் உங்கள் வாழ்க்கை நான் தொலைவில் இல்லை என்று நினைத்தால். 

00:00:07.000 --> 00:00:12.800
மீண்டும் சிந்தியுங்கள், ஏனென்றால் நீங்கள் இவ்வாறு சிந்திக்கும்போது நீங்கள் அநியாயமாக இருக்கிறீர்கள். 

00:00:12.800 --> 00:00:16.400
நீங்களே வாழ்ந்து கொள்ளுங்கள். 

00:00:17.200 --> 00:00:21.600
நீங்களே தவிர, நீங்களே நேர்மையாக இருங்கள். 

00:00:21.900 --> 00:00:28.000
நீங்களே நல்லவர்களாக இருங்கள், நான் மீண்டும் சொல்கிறேன், நீங்களே நல்லவர்களாக இருங்கள், அப்போதுதான் நீங்கள் மற்றவர்களுடன் நல்லவர்களாக இருக்க முடியும். 

00:00:28.000 --> 00:00:33.400
நேரம் பிரச்சினைகள் மிகப்பெரியவை அல்ல, நாம் மிகச் சிறியவர்கள். 

00:00:34.100 --> 00:00:37.900
நாம் அவர்களை சமாளிக்க முடியாது என்பதால், சில சம்பவங்கள் உள்ளன. 

00:00:38.000 --> 00:00:40.100
அது உங்கள் வாழ்க்கையில் நடந்தது. 

00:00:40.400 --> 00:00:45.600
அந்த சம்பவங்கள் மிகவும் வலுவானவை, அவை உங்கள் டி. என். யை மாற்றுகின்றன. 

00:00:45.600 --> 00:00:50.100
அந்த சம்பவங்கள் அல்லது விபத்துக்கள் மிகவும் வலுவானவை. 

00:00:50.100 --> 00:00:52.300
அவர்கள் உங்களை உடல் ரீதியாக உடைக்க. 

00:00:52.300 --> 00:00:55.800
அவை உங்கள் உடலை உருவாக்குகின்றன, ஆனால் அவை உங்கள் ஆத்மாவை மாற்றும். 

00:00:55.800 --> 00:00:59.600
அந்த சம்பவங்கள் உங்களை உடைக்கின்றன. 

00:00:59.600 --> 00:01:01.200
- டிஃபோர்மியர். 

00:01:01.200 --> 00:01:05.900
ஆனால் அவர்கள் உன்னை சிறந்த பதிப்பாக மாற்றினர். நீ ஒருபோதும் கைவிட மாட்டாய். 

00:01:05.900 --> 00:01:08.600
நீங்களே நேசிக்கவும், அந்த அன்பை பரப்பவும். 

00:01:08.600 --> 00:01:17.200
ஆனால் அது உங்களை வலுப்படுத்தும், எனவே நீங்கள் உங்களை ஏற்றுக்கொள்ளும் போது. 

00:01:18.400 --> 00:01:21.400
நீங்கள் மீண்டும் அதை தொடங்குகிறது. 
2024-01-22 14:28:26,526 - ERROR - synthesize - Line 256 - Exception occurred: CUDA out of memory. Tried to allocate 2.91 GiB (GPU 1; 23.69 GiB total capacity; 3.66 GiB already allocated; 1.61 GiB free; 6.67 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:07.000
t உங்கள் வாழ்க்கை கடினமாக உள்ளது என்று நீங்கள் நினைத்தால் மற்றும் நீங்கள் அதை விட்டு, ஏனெனில் நீங்கள் உங்கள் வாழ்க்கை நான் தொலைவில் இல்லை என்று நினைத்தால். 

00:00:07.000 --> 00:00:12.800
மீண்டும் சிந்தியுங்கள், ஏனென்றால் நீங்கள் இவ்வாறு சிந்திக்கும்போது நீங்கள் அநியாயமாக இருக்கிறீர்கள். 

00:00:12.800 --> 00:00:16.400
நீங்களே வாழ்ந்து கொள்ளுங்கள். 

00:00:17.200 --> 00:00:21.600
நீங்களே தவிர, நீங்களே நேர்மையாக இருங்கள். 

00:00:21.900 --> 00:00:28.000
நீங்களே நல்லவர்களாக இருங்கள், நான் மீண்டும் சொல்கிறேன், நீங்களே நல்லவர்களாக இருங்கள், அப்போதுதான் நீங்கள் மற்றவர்களுடன் நல்லவர்களாக இருக்க முடியும். 

00:00:28.000 --> 00:00:33.400
நேரம் பிரச்சினைகள் மிகப்பெரியவை அல்ல, நாம் மிகச் சிறியவர்கள். 

00:00:34.100 --> 00:00:37.900
நாம் அவர்களை சமாளிக்க முடியாது என்பதால், சில சம்பவங்கள் உள்ளன. 

00:00:38.000 --> 00:00:40.100
அது உங்கள் வாழ்க்கையில் நடந்தது. 

00:00:40.400 --> 00:00:45.600
அந்த சம்பவங்கள் மிகவும் வலுவானவை, அவை உங்கள் டி. என். யை மாற்றுகின்றன. 

00:00:45.600 --> 00:00:50.100
அந்த சம்பவங்கள் அல்லது விபத்துக்கள் மிகவும் வலுவானவை. 

00:00:50.100 --> 00:00:52.300
அவர்கள் உங்களை உடல் ரீதியாக உடைக்க. 

00:00:52.300 --> 00:00:55.800
அவை உங்கள் உடலை உருவாக்குகின்றன, ஆனால் அவை உங்கள் ஆத்மாவை மாற்றும். 

00:00:55.800 --> 00:00:59.600
அந்த சம்பவங்கள் உங்களை உடைக்கின்றன. 

00:00:59.600 --> 00:01:01.200
- டிஃபோர்மியர். 

00:01:01.200 --> 00:01:05.900
ஆனால் அவர்கள் உன்னை சிறந்த பதிப்பாக மாற்றினர். நீ ஒருபோதும் கைவிட மாட்டாய். 

00:01:05.900 --> 00:01:08.600
நீங்களே நேசிக்கவும், அந்த அன்பை பரப்பவும். 

00:01:08.600 --> 00:01:17.200
ஆனால் அது உங்களை வலுப்படுத்தும், எனவே நீங்கள் உங்களை ஏற்றுக்கொள்ளும் போது. 

00:01:18.400 --> 00:01:21.400
நீங்கள் மீண்டும் அதை தொடங்குகிறது. 
2024-01-24 21:29:44,456 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:30:25,030 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    ..', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:30:44,180 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    ..', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:33:33,497 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    நாம்', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:35:16,736 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    நாம்', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:36:10,659 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    நாம்', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:36:35,078 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    நாம்', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:37:50,747 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    நாம்', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:38:06,792 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    நாம்', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:39:30,771 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['    அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '    ..', '    u மற்றும் v. வரை. \n    '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:42:43,130 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['  और यहाँ है दूसरा utkarsh कैप्शन।', ' यह तीसरा कैप्शन है। '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:42:59,439 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['  और यहाँ है दूसरा utkarsh कैप्शन।', ' यह तीसरा कैप्शन है। '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:46:25,746 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['  और यहाँ है दूसरा utkarsh कैप्शन।', ' यह तीसरा कैप्शन है। '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:49:08,347 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['  और यहाँ है दूसरा utkarsh कैप्शन।', ' यह तीसरा कैप्शन है। '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:49:29,341 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['  और यहाँ है दूसरा utkarsh कैप्शन।', ' यह तीसरा कैप्शन है। '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-24 21:56:45,141 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-24 21:56:45,141 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-24 21:56:45,141 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-24 21:56:47,590 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-24 21:56:47,610 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-24 21:57:03,905 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'அதனால்தான்', 'u மற்றும் v. வரை. ']
2024-01-24 21:57:52,087 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-24 21:57:52,691 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-24 21:57:54,068 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'அதனால்தான்', 'u மற்றும் v. வரை. ']
2024-01-24 21:57:55,159 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-24 21:57:55,178 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-24 22:00:25,303 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-24 22:00:25,935 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-24 22:00:28,386 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-24 22:00:28,403 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-24 22:00:40,505 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-24 22:00:41,142 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-24 22:00:43,609 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-24 22:00:43,627 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-24 22:00:55,727 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-24 22:00:56,340 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-24 22:00:56,780 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-24 22:00:58,794 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-24 22:00:58,815 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-24 22:01:31,863 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-24 22:02:03,034 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-24 22:02:03,034 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-24 22:02:03,036 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-24 22:02:08,199 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-24 22:02:08,220 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-24 22:02:24,218 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-24 22:02:43,042 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-24 22:02:43,043 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-24 22:02:54,950 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-24 22:05:20,267 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-24 22:05:20,268 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-24 22:06:19,617 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-24 22:08:09,518 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-24 22:13:03,325 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-24 22:13:03,326 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-24 22:13:10,742 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-25 14:26:56,304 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_22_01_2024.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-25 14:27:29,985 - ERROR - extract_text_from_vtt - Line 208 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_22_01_2024.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-25 14:34:35,225 - ERROR - extract_text_from_vtt - Line 211 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_22_01_2024.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-25 14:35:25,870 - ERROR - extract_text_from_vtt - Line 211 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_22_01_2024.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-25 14:37:35,251 - ERROR - extract_text_from_vtt - Line 211 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_22_01_2024.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-25 14:38:39,982 - ERROR - extract_text_from_vtt - Line 211 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_22_01_2024.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-25 14:40:21,726 - ERROR - extract_text_from_vtt - Line 211 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'அதனால்தான்', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_22_01_2024.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-25 14:45:34,870 - ERROR - extract_text_from_vtt - Line 211 - Exception occurred: text_synthesis() takes 7 positional arguments but 8 were given. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'அதனால்தான்', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_22_01_2024.py, Line 798 Error TypeError : text_synthesis() takes 7 positional arguments but 8 were given
2024-01-25 14:48:36,009 - ERROR - extract_text_from_vtt - Line 211 - Exception occurred: Unable to find a valid cuDNN algorithm to run convolution. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'அதனால்தான்', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/nn/modules/conv.py, Line 304 Error RuntimeError : Unable to find a valid cuDNN algorithm to run convolution
2024-01-25 14:54:47,052 - ERROR - extract_text_from_vtt - Line 211 - Exception occurred: Unable to find a valid cuDNN algorithm to run convolution. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', 'அதனால்தான்', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/nn/modules/conv.py, Line 304 Error RuntimeError : Unable to find a valid cuDNN algorithm to run convolution
2024-01-25 15:02:46,185 - ERROR - extract_text_from_vtt - Line 212 - Exception occurred: max() arg is an empty sequence. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 313 Error ValueError : max() arg is an empty sequence
2024-01-25 15:06:24,005 - ERROR - extract_text_from_vtt - Line 212 - Exception occurred: max() arg is an empty sequence. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 313 Error ValueError : max() arg is an empty sequence
2024-01-25 15:07:36,058 - ERROR - extract_text_from_vtt - Line 212 - Exception occurred: max() arg is an empty sequence. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 313 Error ValueError : max() arg is an empty sequence
2024-01-25 15:08:16,993 - ERROR - extract_text_from_vtt - Line 212 - Exception occurred: max() arg is an empty sequence. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 313 Error ValueError : max() arg is an empty sequence
2024-01-25 15:14:26,061 - ERROR - extract_text_from_vtt - Line 212 - Exception occurred: max() arg is an empty sequence. Input text: ['அதனால்தான் நாம் ஒரு மில்லியனுக்கும் அதிகமான முனைகளை உருவகப்படுத்த முடியும். ', '..', 'u மற்றும் v. வரை. '] || TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py, Line 313 Error ValueError : max() arg is an empty sequence
2024-01-26 16:39:50,558 - ERROR - synthesize - Line 256 - Exception occurred: list index out of range. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
மேலும் திட்டமிடல் தொடர்பான பிரச்சினைகளை ஆராய GCD-யின் தற்போதைய உதாரணத்துடன் தொடரலாம். 

00:00:10.300 --> 00:00:29.640
GCD இன் அடிப்படை வரையறைக்கு நாங்கள் தொடங்கி, முதலில் M இன் அனைத்து காரணிகளையும் கணக்கிட்டு, ஒரு பட்டியலில் சேமிக்க வேண்டும், N இன் அனைத்து காரணிகளையும் கணக்கிட்டு, மற்றொரு பட்டியலில் சேமிக்க வேண்டும், இந்த இரண்டு பட்டியல்களிலிருந்து பொதுவான காரணிகளின் பட்டியலை பிரித்தெடுக்கவும், இந்த பொதுவான காரணிகளின் பட்டியலில் மிகப்பெரிய ஒன்றை அறிக்கை செய்யவும். 

00:00:29.680 --> 00:00:53.580
எமது முதல் எளிமைப்படுத்தல் நாம் உண்மையில் 1 முதல் குறைந்தபட்ச M மற்றும் N வரை ஒரு பாஸ் செய்ய முடியும் என்று கவனித்தது மற்றும் முதலில் தனித்தனியாக M மற்றும் N காரணிகள் கணக்கிடாமல் பொதுவான காரணிகள் பட்டியலை நேரடியாக கணக்கிட முடியும். பின்னர் நாம் பொதுவான காரணிகளின் பட்டியலை கூட தேவையில்லை என்று கவனித்தோம், ஏனெனில் நமது ஆர்வம் மிகப்பெரிய பொதுவான காரணி அல்லது மிகப்பெரிய பொதுவான வகுப்பான் மட்டுமே. 

00:00:53.580 --> 00:01:03.040
எனவே நாம் இதுவரை பார்த்த மிகப்பெரிய பொதுவான காரணிகளை ஒரே பெயரில் கண்காணித்து அதை இறுதியில் தெரிவிக்கலாம். 

00:01:03.040 --> 00:01:11.320
எங்கள் இறுதி எளிமைப்படுத்தல், நாம் மிகப்பெரிய பொதுவான காரணி பற்றி ஆர்வமாக இருந்தால், ஆரம்பத்தில் அல்ல, இறுதியில் தொடங்குவோம் என்பதைக் குறிப்பிடுவது. 

00:01:11.320 --> 00:01:20.140
எனவே 1 முதல் M மற்றும் N குறைந்தபட்ச வரை வேலை செய்யாமல், குறைந்தபட்ச M மற்றும் N முதல் 1 வரை வேலை செய்யாமல், 

00:01:20.140 --> 00:01:25.200
நாம் ஒரு பொதுவான காரணி கண்டுபிடிக்க, உடனேயே, நாம் அதை அறிக்கை மற்றும் வெளியேற. 

00:01:25.440 --> 00:01:29.760
1 என்பது பொதுவான காரணி என்று எப்போதும் நினைவில் கொள்ளுங்கள். 

00:01:29.760 --> 00:01:41.320
எனவே நாம் குறைந்தபட்ச M மற்றும் N இலிருந்து தொடங்கி பின்வாங்கினால், வேறு எந்த பொதுவான காரணிகளையும் காணவில்லை என்றால், நாம் 1 ஐ அழுத்தும்போது சரியாக வெளியேறுவோம் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:01:41.320 --> 00:02:07.180
எனவே நாம் கவனித்த விஷயம் என்னவென்றால், இந்த வெவ்வேறு பதிப்புகள் முந்தைய பதிப்புகளை விட எளிமையானவை என்றாலும், அவை அனைத்தும் கணக்கீட்டு அடிப்படையில் ஒரே செயல்திறனைக் கொண்டுள்ளன, அதாவது அவை முன்னோக்கி அல்லது பின்புறமாக வேலை, செய்தாலும், நாம் மிகப்பெரிய பொதுவான காரணிகளைக் கண்டுபிடிப்பதற்கு முன் 1 மற்றும் குறைந்தபட்ச M மற்றும் N இடையிலான அனைத்து எண்களையும் இயங்க கட்டாயப்படுத்துகின்றன. 

00:02:07.220 --> 00:02:23.540
எனவே, பண்டைய கிரேக்கர்களின் காலத்தில், நவீன காலமொழிகளில் முதல் வழிமுறை என்னவென்றால், அதை யூகிலிட் கண்டுபிடித்தார், அது இந்த பிரச்சனைக்கு GCD. 

00:02:23.740 --> 00:03:20.940
நாம் ஒரு பிளவு D என்று வைத்துக்கொள்வோம், இது M மற்றும் N இரண்டையும் பிளவுபடுத்துகிறது. எனவே இது ஒரு பொதுவான வகுப்பான் மற்றும் நாம் பெரிய போன்ற D தேடும். M என்பது N ஐ விட பெரியது என்று வாதத்திற்காக நாம் கருதுவோம் எனவே, D M மற்றும் N இரண்டையும் பிரிக்கினால், நாம் M ஐ A முறை D மற்றும் N ஐ B முறை D என எழுதலாம். சில மதிப்புகளுக்கு A மற்றும் B எனவே M என்பது D இன் பலமாகும், எனவே N எனவே நாம் இடது பக்கத்தை, சமன்பாடுகளை கழித்தால், இடது பக்கமானது M. - N. ஆகும் எனவே நாம் M. எடுத்து N. M. இருந்து குறைக்க எனவே, நாம் AD. இருந்து BD குறைக்க எனவே M. - N. சமம் AD. - BD. ஆனால் D. என்பது பொதுவான சொல். என்பதால், இதன் பொருள் M. - N. என்பது A - B. முறை D. எனவே இங்குதான். நாம் M. N. ஐ விட பெரியது என்று வைத்துக்கொள்வோம் எனவே A - B. ஒரு நேர்மறை எண் 

00:03:20.940 --> 00:04:05.589
ஆனால் M - N என்பது D இன் பலமாகும். அதாவது, D, M மற்றும் N இரண்டையும் பிரிக்கினால், அது N - N ஐப் பிரிக்கவும். D என்பது M மற்றும் N இன் மிகப்பெரிய வகுப்பான் என்பதால், D என்பது மிகப்பெரிய வகுப்பான் என்பதையும் வெளிப்படுத்துகிறது, இது N மற்றும் N - N க்கு பொதுவானது. வேறு வார்த்தைகளில் கூறுவதானால், M மற்றும் N இன் GCD இரண்டு சிறிய எண்களின் GCD, அதாவது N, மற்றும் இரண்டு, M மற்றும் N, M - N இன் வேறுபாடு போன்றது எனவே நாம் இந்த பயன்படுத்த முடியும் கணிசமாக எளிதாக்க GCD கண்டுபிடிக்கும் செயல்முறை எனவே இங்கே யூக்லிட்டின் அல்காரிதம் முதல் பதிப்பு 

00:04:05.589 --> 00:04:20.673
எனவே, M, N இன் GCD மதிப்பைக் கருத்தில் கொள்ளுங்கள், M N ஐ விட பெரியது என்று வைத்துக்கொள்வோம். எனவே, N ஏற்கனவே M இன் பிளவு என்றால், நாம் முடித்துவிட்டு N ஐ திருப்பித் தருகிறோம். இல்லையெனில், நாம் சிக்கலை புதியதாக மாற்றுகிறோம். 

00:04:20.713 --> 00:04:33.740
M மற்றும் N இன் GCD ஐ கணக்கிடுவதற்குப் பதிலாக, N மற்றும் M, - N இன் GCD ஐ கணக்கிட்டு அந்த மதிப்பைத் திருப்பிக் கொடுப்போம். 

00:04:33.780 --> 00:04:37.039
எனவே இங்கே இந்த யோசனையின் பைதான் செயல்படுத்தல் உள்ளது. 

00:04:37.039 --> 00:04:46.620
இந்த புதிய அம்சங்கள் சில இங்கே அறிமுகப்படுத்தப்பட்டுள்ளன. முதலில், இந்த சிறப்பு அறிக்கை, 

00:04:48.380 --> 00:04:55.380
Python இல், இந்த வகையான அறிக்கை ஒரு கருத்து என்று அழைக்கப்படுகிறது. 

00:04:57.780 --> 00:05:04.137
எனவே ஒரு கருத்து என்பது ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு நிகழ்ச்சியைப் படிக்கும் ஒருவருக்கு என்ன நடக்கிறது என்பதை விளக்குவதற்காக ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு அறிக்கையை வைக்கிறீர்கள். 

00:05:04.137 --> 00:05:08.015
ஆனால், அதை நிரலை இயக்கும் கணினி புறக்கணிக்கிறது. 

00:05:08.015 --> 00:05:15.220
எனவே இந்த அறிக்கை நாம் M. N. ஐ விட பெரியது அல்லது சமம் என்று கருதுகிறோம் என்று கூறுகிறது. 

00:05:16.260 --> 00:05:20.424
இந்த திட்டம் தொடரும் போது, இதுவே கருத்தாகும். 

00:05:20.424 --> 00:05:25.349
நிச்சயமாக, GCD ஐ அழைக்கும் நபருக்கு இதை உணர முடியாது. 

00:05:25.349 --> 00:05:29.413
எனவே அவர்கள் அதை M. N. ஐ விட சிறியதாகக் கொண்டு அழைக்கலாம். எனவே அதை சரிசெய்வோம். 

00:05:29.413 --> 00:05:34.100
எனவே இது பைதான்க்கு சொந்தமான ஒரு சிறப்பு வகை பணி. 

00:05:34.140 --> 00:05:37.003
மற்ற நிரலாக்க மொழிகளில் இது இல்லை. 

00:05:37.003 --> 00:05:44.257
எனவே நாம் செய்ய விரும்புவது, M மற்றும் N மதிப்புகளை எடுத்து அவற்றை பரிமாறிக்கொள்ள வேண்டும். 

00:05:44.257 --> 00:05:56.528
எனவே நாம் M இன் புதிய மதிப்பை N இன் பழைய மதிப்பாகவும், N இன் புதிய மதிப்பை M இன் பழைய மதிப்பாகவும் மாற்ற வேண்டும், எனவே M மற்றும் N தவறான வரிசையில் இருந்தால், அவற்றை மாற்றியமைப்போம். 

00:05:56.728 --> 00:06:02.963
எனவே இந்த பைதான் அறிக்கை என்ன செய்கிறது என்பது ஒரு ஜோடி மதிப்புகளை எடுத்து அது ஒரு சமகால ஒதுக்கீட்டை செய்கிறது. 

00:06:02.963 --> 00:06:19.588
எனவே, N இன் மதிப்பு M இன் மதிப்புக்குள் செல்கிறது மற்றும் M இன் மதிப்பு N இன் மதிப்புக்குள் செல்கிறது. இப்போது அது ஒரே நேரத்தில் செய்யப்படுகிறது முக்கியம். ஏனெனில் நீங்கள் அதை செய்ய என்றால், நீங்கள் முதலில் N மதிப்பு M நகலெடுக்க என்றால், பின்னர் பழைய மதிப்பு M இழக்கப்படுகிறது. 

00:06:19.588 --> 00:06:25.834
எனவே நீங்கள் பழைய மதிப்பை M இன் புதிய மதிப்பில் நகலெடுக்க முடியாது, ஏனெனில் நீங்கள் அதை இழந்துவிட்டீர்கள். 

00:06:25.834 --> 00:06:35.400
நீங்கள் இரண்டு கப் தண்ணீரை வைத்துள்ளீர்கள், அவற்றின் உள்ளடக்கத்தை பரிமாறிக்கொள்ள விரும்புகிறீர்கள். இப்போது நீங்கள் இடம் உருவாக்க வேண்டும். 

00:06:36.960 --> 00:06:39.832
அதை விட்டுவிடுவதற்கு முன் இதை அதில் ஊற்ற முடியாது. 

00:06:39.832 --> 00:06:42.571
அதை நீ விட்டால், அதை அதில் ஊற்ற முடியாது. 

00:06:42.571 --> 00:06:43.899
எனவே நீங்கள் ஒரு மூன்றாவது கப் பொதுவாக வேண்டும். 

00:06:43.899 --> 00:06:46.411
எனவே நீங்கள் முதலில் இதை இங்கு மாற்ற வேண்டும் மற்றும் அதை பாதுகாப்பாக வைக்க வேண்டும். 

00:06:46.411 --> 00:06:49.703
பின்னர் நீங்கள் அதை அங்கு மாற்ற வேண்டும் மற்றும் பின்னர் நீங்கள் அதை மீண்டும் நகலெடுக்க வேண்டும். 

00:06:49.703 --> 00:06:54.140
எனவே, பெரும்பாலான நிரலாக்க மொழிகள் இரண்டு மதிப்புகளை பரிமாறிக்கொள்ளும் வழியைக் காட்டுகின்றன. 

00:06:54.140 --> 00:06:59.354
ஆனால் பைதான் ஒரு அழகான அம்சத்தைக் கொண்டுள்ளது, இதன் மூலம் நீங்கள் ஒரு ஜோடி மதிப்புகளை எடுத்து அவற்றை ஒரே நேரத்தில் புதுப்பிக்க முடியும். 

00:06:59.394 --> 00:07:08.634
குறிப்பாக, இந்த ஒரே நேரத்தில் புதுப்பித்தல், இந்த கூடுதல் தற்காலிக இடத்தை ஒரு மதிப்பைப் பிரிப்பதற்கு கவலைப்படாமல் மதிப்புகளை பரிமாறிக்கொள்ள அனுமதிக்கிறது. 

00:07:08.634 --> 00:07:16.565
எப்படியிருந்தாலும், இந்த முதல் பகுதி நாம் கருதிக் கொண்டிருக்கும் இந்த நிபந்தனை பூர்த்தி செய்யப்படுவதை உறுதி செய்வதே ஆகும். 

00:07:16.565 --> 00:07:19.620
இப்போது நாம் அல்போரிதம் மையம் வந்து. 

00:07:19.620 --> 00:07:33.480
எனவே N M ஐப் பிரிக்கினால், அது M இன் மீதமுள்ள பகுதி N ஐப் பிரிக்கினால் 0 ஆகும், பின்னர் N ஐ GCD என்று கண்டுபிடித்தோம், பின்னர் N ஐ திருப்பித் தருகிறோம். 

00:07:34.120 --> 00:07:35.440
கடைசி ஸ்லைடு. 

00:07:35.440 --> 00:07:47.280
இப்போது நாம் N இன் GCD மற்றும் வேறுபாடு M. - N ஐ கணக்கிடப் போகிறோம். எனவே நாம் N மற்றும் N - N இன் GCD ஐ கணக்கிட விரும்புகிறோம். எனவே நாம் கணக்கிட 

00:07:48.640 --> 00:07:52.820
M. - N. என வேறுபாடு. இதை நாம் பயன்படுத்தலாம். 

00:07:52.820 --> 00:08:02.240
ஆனால் M என்றால் 97 எனவும், N என்றால் 2 எனவும் சொல்லலாம், வித்தியாசம் 95 ஆக இருக்கும். 

00:08:03.400 --> 00:08:08.922
N ஐ விட பெரியது. நாம் இந்த செயல்பாட்டை பெரிய எண் விட பெரிய முதல் எண் கொண்ட ஒரு செயல்பாட்டை அழைக்க விரும்புகிறோம். 

00:08:08.922 --> 00:08:12.780
எனவே, நமது செயல்பாடு இதை கவனித்துக்கொள்ளும் என்றாலும், இதை நாம் உறுதி செய்வோம். 

00:08:12.780 --> 00:08:23.109
நாம் செய்ய விரும்புவது, நாம் N மற்றும் M - N உடன் GCD ஐ அழைக்க வேண்டும், அதற்கு பதிலாக, நாம் N இன் அதிகபட்ச மதிப்பு மற்றும் வித்தியாசம் முதல் வாதம் மற்றும் N இன் குறைந்தபட்ச மதிப்பு மற்றும் வித்தியாசம் கொண்ட GCD ஐ அழைப்போம். 

00:08:23.109 --> 00:08:28.180
எனவே, இரண்டு மதிப்புகளில் பெரியது முதலில், மற்றும் சிறியது முதலில் செல்லும் என்பதை உறுதிப்படுத்தும். 

00:08:28.220 --> 00:08:33.781
இந்த GCD எதுவாக இருந்தாலும், இந்த செயல்பாடு என்னவாக இருக்கும் என்பதை புதிய GCD திரும்பப் பெறுகிறது. 

00:08:33.781 --> 00:08:42.460
எனவே இது நாம் பின்னர் பார்ப்போம் என்பதற்கு ஒரு எடுத்துக்காட்டு, இது மிகவும் இயற்கையானது, இது மீளுருவாக்கம் என்று அழைக்கப்படுகிறது. 

00:08:43.060 --> 00:08:52.878
அதாவது, நாம் ஒரு சிறிய பிரச்சினையை தீர்த்து, அந்த பதிலைப் பயன்படுத்தி, இந்த வழக்கில் நேரடியாக, நமது தற்போதைய பிரச்சினையின் பதிலைப் புகாரளிக்கப் போகிறோம். 

00:08:52.878 --> 00:09:06.496
எனவே நாம் M மற்றும் N இன் GCD ஐ தீர்க்க விரும்புகிறோம். ஆனால் M மற்றும் N இன் GCD, அதற்கு பதிலாக நாம் N மற்றும் M - N இன் GCD ஐ தீர்க்கிறோம். 

00:09:06.536 --> 00:09:11.881
எனவே நாம் சிறிய மதிப்புகளுடன் செயல்பாட்டை அழைத்து பின்னர் அதை திரும்ப. 

00:09:11.881 --> 00:09:16.233
இப்போது நீங்கள் ஒரு மறுபரிசீலனை அழைப்பு செய்ய இந்த போன்ற, அது ஒரு நேரம் சுழற்சி போன்றது. 

00:09:16.233 --> 00:09:17.996
அது மீண்டும் செயல்பாட்டை அழைக்கும். 

00:09:17.996 --> 00:09:20.474
அது ஒரு சிறிய செயல்பாட்டைக் கொண்டு வரும். 

00:09:20.474 --> 00:09:31.390
நீங்கள் இந்த வரிசையில் GCD தொடர்ந்து GCD அழைக்கும் போது, வேறு மதிப்புகள் ஒரு முடிவற்ற முன்னேற்றம் ஒரு நிறுத்த புள்ளி இல்லாமல் பெற முடியாது என்று உறுதி செய்ய வேண்டும். 

00:09:31.430 --> 00:09:40.300
எனவே, முறையாக, நாம் உறுதி செய்ய வேண்டும் என்ன இந்த உத்தரவாதம் கண்டுபிடிக்க ஒரு N பிளவு N. எனவே இங்கே GCD. 

00:09:41.980 --> 00:09:43.853
உண்மையில் தன்னை அழைத்து இல்லாமல் வெளியே செல்கிறது. 

00:09:43.853 --> 00:09:47.262
எனவே, நாம் இறுதியில் இந்த நிலைக்கு வருவதை உறுதி செய்ய வேண்டும். 

00:09:47.262 --> 00:09:54.071
இப்போது நீங்கள் இங்கே பார்த்தால் என்ன நடக்கிறது என்பது GCD க்கு அனுப்பப்படும் மதிப்புகள் சிறியதாகவும் சிறியதாகவும் மாறி வருகின்றன. 

00:09:54.071 --> 00:09:56.222
இப்போது நாம் M. - N. க்கு என்ன பெற முடியும்? 

00:09:56.222 --> 00:09:57.717
அது என்ன மதிப்பு? 

00:09:57.717 --> 00:09:58.960
அது பூஜ்ஜியமாக இருக்க முடியுமா? 

00:09:58.960 --> 00:10:10.508
M, - N என்றால் N. M என்றால் N. M என்றால் N. M என்றால் N. M என்பது N. 

00:10:10.508 --> 00:10:11.843
எனவே அது பூஜ்ஜியமாக இருக்க முடியாது. 

00:10:11.843 --> 00:10:13.542
எனவே அது குறைந்தது ஒரு இருக்க வேண்டும். 

00:10:13.542 --> 00:10:17.478
எனவே நாம் இந்த செயல்பாடு M. - N என்று அழைக்கும் போது குறைந்தது ஒன்று. 

00:10:17.478 --> 00:10:21.589
மறுபுறம், ஒவ்வொரு முறையும் நாம் சிறிய மதிப்புகளை அடைகிறோம். 

00:10:21.589 --> 00:10:25.443
எனவே நாம் சில மதிப்புடன் தொடங்குகிறோம் மற்றும் M. -N. தொடர்ந்து குறைகிறது. 

00:10:25.443 --> 00:10:27.990
அது உண்மையில் ஒரு அடையும் போது என்ன நடக்கும்? 

00:10:27.990 --> 00:10:31.700
அது ஒரு எண் வரை சென்றால், மற்ற எண்களை நாம் பிரிக்கலாம். 

00:10:31.700 --> 00:10:37.330
எனவே M சதவீதம் N அல்லது M N ஆல் பிரிக்கப்பட்டால், மீதமுள்ளவை 1 ஆக இருக்கும், அது 0 ஆக இருக்கும். 

00:10:37.330 --> 00:10:39.420
எனவே அது உங்கள் பூஜ்ஜியத்தை திருப்பித் தருகிறது. 

00:10:39.420 --> 00:10:52.180
வேறு வார்த்தைகளில் கூறுவதானால், இந்த செயல்பாடு, நாம் செயல்பாட்டை அழைக்கும் எண்ணிக்கையை குறைக்க தொடர்ந்து இருப்பதால், இறுதியில் GCD முடிவடையும் ஒரு அழைப்பை உருவாக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:10:55.020 --> 00:10:57.199
எனவே இது மிகவும் முக்கியமானது, பின்னர் இதைப் பற்றி பேசுவோம். 

00:10:57.199 --> 00:11:06.389
ஆனால் நீங்கள் இந்த வகை செயல்பாட்டை எழுதும்போது, நீங்கள் எங்கிருந்து தொடங்குகிறீர்களோ, அங்கு ஒரு முடிவான எண்ணிக்கையிலான படிகளில் அடையப்படும் ஒரு அடிப்படை வழக்கு இருப்பதை உறுதி செய்ய வேண்டும். 

00:11:06.429 --> 00:11:19.826
எனவே இது யூகிளிட்டின் அல்காரிதம், முதல் பதிப்பு, அங்கு நாம் M மற்றும் N இன் GCD, N மற்றும் M கழித்து N இன் GCD மாற்ற முடியும் என்று கவனிக்கிறோம். இந்த குறிப்பிட்ட நடைமுறைப்படுத்தலில் நாம் பார்த்தது இரண்டு விஷயங்கள். 

00:11:19.826 --> 00:11:21.304
ஒன்று, மூன்று விஷயங்கள். 

00:11:21.304 --> 00:11:23.872
ஒரு கருத்தை நமது குறியீட்டில் எவ்வாறு வைக்க வேண்டும் என்பதை நாம் பார்த்திருக்கிறோம். 

00:11:23.872 --> 00:11:30.042
பைதான் இரண்டு மாறிகளை ஒரே நேரத்தில் புதுப்பிக்கும் வகையில் செயல்படுகிறது என்பதை நாம் கண்டிருக்கிறோம். 

00:11:30.042 --> 00:11:39.833
எனவே M கோமா N M கோமா N க்கு சமம். மேலும் தற்போதைய செயல்பாட்டை கணக்கிட அதே செயல்பாட்டை புதிய வாதங்களுடன் பயன்படுத்தலாம் என்பதை நாம் கண்டோம். 

00:11:39.833 --> 00:11:49.263
எனவே M மற்றும் N இன் GCD ஐ கணக்கிட, நான் வேறு சில மதிப்புகளின் GCD ஐ கணக்கிட வேண்டும் என்று சொல்ல எந்த பிரச்சனையும் இல்லை, மற்றும் அந்த பதிலை என் பதிலை திரும்ப பயன்படுத்த. 

00:11:49.263 --> 00:11:57.757
எனவே இந்த அல்காரிதம் ஒரு வித்தியாசமான பதிப்பைப் பார்ப்போம், அங்கு நாம் ஒரு சைட் சுழற்சியால் மீள் அழைப்பை மாற்றுகிறோம். 

00:11:57.757 --> 00:12:06.175
எனவே நாம் எமது நிலையான வழிமுறைகளின் கடைசி பதிப்பில் M புள்ளி N முதல் 1 வரை குறைந்தது இருந்து பின் எண்ணும் போது பார்த்தோம். 

00:12:06.575 --> 00:12:10.650
எனவே நான் 0 க்கு மேல் இருக்கிறேனா என்று தொடர்ந்து சரிபார்த்து, தொடர்ந்து குறைந்து கொண்டோம். 

00:12:10.650 --> 00:12:13.281
சரி, இங்கே நாம் ஒரு சில நேரம் பயன்படுத்தி மீள்வினை செய்கிறோம். 

00:12:13.281 --> 00:12:20.168
முதலில் நான் கவனிக்க வேண்டியது, நான் ஒரு வரி, இறுதியில் ஒரு தனி வரிசையில் இருந்த இந்த கருத்தை நகர்த்தியுள்ளேன். 

00:12:20.168 --> 00:12:27.340
எனவே பைதான் என்ன சொல்கிறது என்றால், ஒரு ஹாஷ் இருந்தால், மற்ற வரிகளை புறக்கணிக்க முடியும். 

00:12:27.340 --> 00:12:31.307
எனவே இந்த வரி படித்து, அது ஒரு செல்லுபடியாகும் நிபந்தனை மற்றும் பின்னர் அது ஒரு ஹாஷ் பார்க்கிறது. 

00:12:31.307 --> 00:12:35.720
எனவே, இந்த அறிக்கை Python நிரலில் செயல்படும் போது ஒரு பகுதியாக இல்லை. 

00:12:35.720 --> 00:12:39.203
ஒரு கருத்து தனி வரிசையில் இருக்கலாம் அல்லது ஒரு வரிசையின் முடிவாக இருக்கலாம். 

00:12:39.203 --> 00:12:46.758
நிச்சயமாக, நீங்கள் Python செயல்படுத்த வேண்டும் என்று எதையும் இந்த பிறகு வைக்க முடியாது என்பதை நினைவில் கொள்ள வேண்டும், ஏனெனில் அது ஒரு ஹாஷிங் பார்க்க ஒருமுறை, மற்ற வரி புறக்கணிக்கப்படும். 

00:12:46.758 --> 00:12:48.340
எனவே அது ஒரு வரி முடிவாக இருக்க முடியாது. 

00:12:48.340 --> 00:12:49.823
மீதமுள்ள வரிசையை புறக்கணிக்கப் போகிறோம். 

00:12:49.823 --> 00:12:51.205
எனவே அது ஒரு வரிசையின் நடுவில் இருக்க முடியாது. 

00:12:51.205 --> 00:12:53.340
ஒரு வரிசையின் நடுவில் ஒரு கருத்தை வைக்க முடியாது. 

00:12:53.340 --> 00:12:57.200
ஆனால் நீங்கள் அதை ஒரு தனி வரிசையில் வைக்கலாம், அல்லது நீங்கள் அதை ஒரு வரி இறுதியில் வைக்கலாம். 

00:12:57.200 --> 00:12:59.816
எப்படியோ, இது எங்கள் கருத்து, முன்பு போல. 

00:12:59.816 --> 00:13:04.441
எனவே, இதுவரை நான் கருத்துகளை மாற்றியமைத்ததைத் தவிர வேறு எந்த மாற்றமும் இல்லை. 

00:13:04.441 --> 00:13:09.316
இப்போது நாம் ஒரு கணக்கீட்டைச் செய்ய வேண்டிய கட்டத்தில் இருக்கிறோம். 

00:13:09.316 --> 00:13:17.987
எனவே, இந்த கட்டத்தில், N M ஐப் பிரிக்கும் N ஐ நாம் கண்டால், நாம் முடித்து N ஐ நேரடியாக திருப்பிக் கொடுக்கலாம். எனவே, நமது மறுபரிசீலனைக் குறியீடு இதைச் செய்யும். 

00:13:17.987 --> 00:13:21.340
நாம் இதுபோன்ற Nஐ கண்டுபிடிக்கவில்லை என்றால், நாம் சில வேலைகளைச் செய்ய வேண்டும். 

00:13:21.340 --> 00:13:26.806
எனவே M பிரிக்கப்பட்ட N உண்மையில் ஒரு மீதமுள்ள உற்பத்தி செய்கிறதா என்பதை சரிபார்க்க வேண்டும். 

00:13:26.806 --> 00:13:31.482
எனவே இந்த அடையாளம் இந்த உச்சரிப்பு அடையாளத்துடன் எழுதப்பட்டுள்ளது. 

00:13:31.482 --> 00:13:35.038
எனவே இது கணித சமம் அல்ல. 

00:13:35.038 --> 00:13:40.187
இந்த இரட்டை சமம் என்பது சமத்துவத்தின் கணித அடையாளமாக நாம் பயன்படுத்தியதாக நினைவில் கொள்ளுங்கள். 

00:13:40.187 --> 00:13:43.010
எனவே இது சமமாக இல்லை என்பதற்கான அடையாளம். 

00:13:43.010 --> 00:13:49.700
எஞ்சியிருக்கும் வரை, எஞ்சியிருக்கும் எண் M பிரிக்கப்பட்டால் N என்பது 0 ஆகாது, நாம் முன்பு செய்ததைச் செய்வோம். 

00:13:49.700 --> 00:13:59.173
நாம் வித்தியாசத்தை கணக்கிட்டு M ஐ இரண்டு மதிப்புகளில் அதிகபட்சமாகவும், N ஐ இரண்டு மதிப்புகளில் சிறியதாகவும் மாற்றுவோம். 

00:13:59.173 --> 00:14:11.340
எனவே நாம் ஒரு ஜோடி M, N அதன் GCD நாம் M. N விட பெரியது என்று வைத்து கண்டுபிடிக்க முயற்சி. ஒவ்வொரு அடியிலும், நாம் N மற்றும் வித்தியாசத்தின் பெரிய M மற்றும் N மற்றும் வித்தியாசத்தின் சிறிய N மற்றும் சிறிய N மூலம் மாற்ற. 

00:14:11.340 --> 00:14:14.071
எனவே, இந்த மறுபரிசீலனை குறியீட்டில் நாம் செய்வது இதுதான். 

00:14:14.071 --> 00:14:16.803
நாம் சொல்லும் போதே நாம் கணக்கிடும் என்று GCD என்று. 

00:14:16.803 --> 00:14:41.828
எனவே இந்த போது சுழற்சியில், நாம் M, N இன் கணக்கீட்டை M, N இன் GCD உடன் மாற்ற வேண்டும் என்று சொல்கிறோம், N இன் அதிகபட்ச N வேறுபாடு மற்றும் குறைந்தபட்ச N இன் கணக்கீட்டை N உண்மையில் N ஐப் பிரிக்கும் நிலை வரும் வரை இதைச் செய்யத் தொடங்குவோம். நாம் சொன்னது போலவே, மறுபரிசீலனை வழக்கில், ஒரு எல்லை வழக்கு இருக்கும், இதில் மிக மோசமான வழக்கில் N 1 ஆக மாறும், 1 எல்லாவற்றையும் பிரிக்கும். 

00:14:41.828 --> 00:14:44.362
அதேபோல், இங்கே வித்தியாசம் தொடர்ந்து குறைந்து கொண்டே இருக்கும். 

00:14:44.362 --> 00:14:48.363
வித்தியாசம் பூஜ்ஜியமாக இருக்க முடியாது, ஏனெனில் வித்தியாசம் பூஜ்ஜியமாக இருந்தால், அது பிரிக்கப்படும். 

00:14:48.363 --> 00:14:52.710
எனவே வித்தியாசம் அதிகபட்சம் 1 ஆக குறைந்து 1 ஆக இருக்கும் போது முடிந்துவிடும். 

00:14:52.710 --> 00:14:57.408
எனவே இது நாம் முன்பு எழுதிய அதே மறுபரிசீலனை செயல்பாட்டின் ஒரு சமகால பதிப்பு. 

00:14:57.408 --> 00:15:06.785
எனவே, அது உதவுகிறது என்றால், நீங்கள் இந்த பக்கங்களுடன் பார்க்கலாம் மற்றும் மறுபரிசீலனை செய்யும் பொருள் என்ன செய்கிறது மற்றும் இடைநிலை என்ன செய்கிறது என்பதை புரிந்து கொள்ள முயற்சி செய்யலாம் மற்றும் அவர்கள் அடிப்படையில் அதே விஷயத்தை செய்கிறார்கள் என்பதை பார்க்கலாம். 

00:15:06.785 --> 00:15:19.744
இந்த மறுபடியும் முடிவடையும் என்ற கருத்து, நாம் முன்பு கூறியது போலவே உள்ளது. நீங்கள் ஒரு பிட் எழுதும்போது, நீங்கள் ஒரு பிட் தவறான பிட் நிலைக்கு முன்னேறுவதை உறுதி செய்ய வேண்டும். 

00:15:19.744 --> 00:15:36.340
எனவே நீங்கள் கவனமாக இல்லாவிட்டால் மற்றும் நீங்கள் அதை நிறுத்த உத்தரவாதம் வாதங்கள் மூலம் பயன்படுத்தி இல்லை என்றால், மீண்டும் மீண்டும் எப்போதும் நீடிக்கும் போலவே, நீங்கள் முன்னேற்றம் செய்யவில்லை என்றால் இடைவெளி நிலை இறுதியில் தவறாக மாறும் உறுதி செய்ய. 

00:15:41.340 --> 00:15:43.054
எனவே நாம் இதை விட சிறப்பாக செய்ய முடியும். 

00:15:43.054 --> 00:15:46.787
எனவே, ஒரு கை மரணதண்டனை செய்வதன் மூலம் ஒரு பிரச்சினையை பார்க்கலாம். 

00:15:46.787 --> 00:15:52.537
எனவே நாம் 101 மற்றும் 2 இன் GCD போன்ற எண்களுடன் தொடங்குவோம் என்று வைத்துக்கொள்வோம். 

00:15:52.537 --> 00:16:00.944
பின்னர் நமது அல்காரிதம், இது இப்போது வித்தியாசத்தின் gcd ஆகவும் n ஆகவும் மாற வேண்டும் என்று கூறுகிறது. 

00:16:00.944 --> 00:16:04.966
வித்தியாசம் 99 ஆகும், எனவே நமக்கு 99 மற்றும் 2 இருக்கும். 

00:16:04.966 --> 00:16:09.167
பின்னர் இது 97 மற்றும் 2 மற்றும் பலவற்றின் GCD ஆக மாறும். 

00:16:09.167 --> 00:16:18.661
எனவே நாம் 50 படிகள் தொடர்ந்து செய்ய வேண்டும். பின்னர் இறுதியில் நாம் 5 மற்றும் 2 மற்றும் பின்னர் 3 மற்றும் 2 ஆகியவற்றின் GCD ஆக வரும். 

00:16:18.661 --> 00:16:24.081
இப்போது நாம் வித்தியாசத்தை கணக்கிடுகிறோம், நாம் 2 மற்றும் 1 க்ஜிடி கிடைக்கும். 

00:16:24.081 --> 00:16:26.856
எனவே இப்போது வித்தியாசம் குறைவாகிவிடும். 

00:16:26.856 --> 00:16:30.482
இந்த நேரத்தில் நாம் பதிலை 1 என்று தெரிவிப்போம். 

00:16:30.482 --> 00:16:35.090
எனவே, 101 மற்றும் 2 இன் GCD செய்ய சுமார் 50 படிகள் ஆகும். 

00:16:35.090 --> 00:16:42.506
எனவே, இந்த புத்திசாலித்தனமான அணுகுமுறையை விமர்சிப்பது, எண்களே நேரத்தை ஒத்ததாக எடுக்கும். 

00:16:42.506 --> 00:16:47.898
நாம் m மற்றும் n எண்களை சேர்த்தால், நாம் m மற்றும் n இன் குறைந்தபட்சத்திற்கு சமமான பொதுவான படிகளின் எண்ணிக்கையை எடுப்போம். 

00:16:47.898 --> 00:16:52.592
இப்போது நாம் குறைந்தபட்சத்தை விட பெரிய படிகளை எடுத்து வருகிறோம், ஏனெனில் குறைந்தபட்சமானது 2 ஆகும். 

00:16:52.592 --> 00:16:59.603
நாம் கணக்கிடும் காரணிகள் என்றால், 2 என்ற ஒரே காரணி 2 என்று நாம் கூறலாம், அது 101 என்ற காரணி அல்ல, நாம் ஆரம்பத்தில் நிறுத்தப்பட்டிருப்போம். 

00:16:59.603 --> 00:17:04.901
எனவே இது சில சந்தர்ப்பங்களில் நமது முந்தைய வழிமுறைகளை விட மோசமாக நடக்கிறது. 

00:17:04.901 --> 00:17:07.931
எனவே, இங்கே ஒரு சிறந்த கவனிப்பு உள்ளது. 

00:17:07.931 --> 00:17:10.870
எனவே n. m. ஐப் பிரிக்கவில்லை என்று வைத்துக்கொள்வோம். 

00:17:10.870 --> 00:17:17.735
வேறு வார்த்தைகளில் கூறுவதானால், m. ஐ. n. ஆல் பிரிக்கினால், எனக்கு ஒரு விகிதமும் மீதமுள்ள விகிதமும் கிடைக்கும். 

00:17:17.735 --> 00:17:22.885
எனவே நான் n என எழுத முடியும். q x, n, + r அங்கு q என்பது குவாசகம் மற்றும் r என்பது மீதமுள்ள. 

00:17:22.885 --> 00:17:26.006
நீங்கள் உயர்நிலைக் கணிதத்தில் இருந்து இந்த சொற்களை நினைவில் வைத்திருக்கலாம். 

00:17:26.006 --> 00:17:32.188
எனவே n. m. q முறைக்கு சென்று, மீதமுள்ள r ஐ விட்டு விடுகிறது, r. n. ஐ விட சிறியதாக இருப்பதை உறுதி செய்கிறோம். 

00:17:32.188 --> 00:17:35.451
இல்லையெனில் அது ஒரு முறை செல்லும், அது q + 1 ஆக இருக்கும். 

00:17:35.451 --> 00:17:37.673
எனவே எஞ்சியுள்ள எண் r. n. ஐ விட சிறியதாக உள்ளது. 

00:17:37.673 --> 00:17:45.095
உதாரணமாக 7 எனில் 3ல் பிரிக்க விரும்பினால், இது 2 x 3 + 1 ஆகும். 

00:17:45.095 --> 00:17:47.731
எனவே இது எனது குவாசிண்டாகும், இது எனது மீதமுள்ளதாக இருக்கும். 

00:17:47.731 --> 00:17:53.090
முக்கியமானது என்னவென்றால், மீதமுள்ளவை நான் பகிர்ந்து கொள்ளும் அளவை விட எப்போதும் சிறியவை. 

00:17:53.090 --> 00:17:59.845
இப்போது நாம் முன் போல் நாம் m மற்றும் n இருவரும் ஒரு பொதுவான வகுப்பாளர் என்று வைத்துக்கொள்வோம். 

00:17:59.845 --> 00:18:10.756
வேறு வார்த்தைகளில் கூறுவதானால், முன்பு நாம் m தன்னை ஒரு முறை d மற்றும் n என b முறை d என எழுதலாம். சில எண்களுக்கு a மற்றும் b ஏனெனில் m என்பது d இன் பலமாகும், எனவே n ஆகும். 

00:18:10.756 --> 00:18:22.803
எனவே இதை மேலே உள்ள சமன்பாட்டில் இணைத்தால், m என்பது a x d என்பது q x n ஆகும். b x d plus r. 

00:18:22.803 --> 00:18:27.598
எனவே d இடது மற்றும் d வலது ஒரு பகுதியை பிரிக்கின்றன. 

00:18:27.598 --> 00:18:32.148
எனவே d க்கு r ஐப் பிரிக்க வேண்டும் என்று நீங்கள் எளிதாக உங்களை நம்பலாம். 

00:18:32.148 --> 00:18:47.862
எனவே, இதைப் பற்றி யோசிக்க ஒரு வழி, நீங்கள் விரும்பினால், நான் இந்த எண் m ஐக் கொண்டுள்ளேன், அதை n இன் அலகுகளாக பிரிக்க முடியும், பின்னர் இங்கே ஒரு சிறிய பிட் உள்ளது. 

00:18:47.862 --> 00:18:54.081
மற்றபடி, d, d எல்லாவற்றையும் சமமாகப் பிரிக்கிறது. 

00:18:54.081 --> 00:18:57.565
எனவே இது இந்த தொகுதிகளை ஒவ்வொன்றையும் பிரிக்கின்றது. 

00:18:57.565 --> 00:19:00.473
அது முழு விஷயத்தையும் பிளவுபடுத்துகிறது. 

00:19:00.473 --> 00:19:08.316
ஆனால் இப்போது நான் d உடன் தொடரினால், அது இந்த எல்லையில் நிறுத்தப் போகிறது, ஏனென்றால் d n ஐப் பிரிக்கவும். 

00:19:08.316 --> 00:19:12.045
எனவே d என்பது இந்த கடைசி பிட் ஆகும். 

00:19:12.045 --> 00:19:17.857
எனவே, நாம் எளிதாக r என்பது d இன் பெருக்காக இருக்க வேண்டும் என்று வாதிடலாம். 

00:19:17.857 --> 00:19:20.753
எனவே d க்கு r க்கும் பிளவு வேண்டும். 

00:19:20.753 --> 00:19:28.179
எனவே d m மற்றும் d n ஐப் பிரித்தால், d மீதமுள்ள m. ஐ. n ஆல் பிரிக்க வேண்டும். 

00:19:28.179 --> 00:19:33.959
நாம் முன்பு பார்த்தபடி, வித்தியாசத்தை, எனவே கடைசியாக நாம் சொல்லியிருந்தோம். நாம் பார்க்க வேண்டும் வித்தியாசம் m பிரிக்கப்பட்ட n. 

00:19:33.959 --> 00:19:42.361
இப்போது நாம் சொல்கிறோம், மீதமுள்ள m, ஐ, n மற்றும் d க்கு பிரிக்க வேண்டும், அது n மற்றும் இந்த மீதமுள்ள GCD ஆக இருக்கும். 

00:19:42.361 --> 00:19:52.351
எனவே இது ஒரு மேம்படுத்தப்பட்ட மற்றும் நீங்கள் முன்மொழிய முடியும் என்று அல்கோரிதம் உண்மையான பதிப்பு ஆகும், வித்தியாசம் ஒன்று, ஆனால் மீதமுள்ள ஒன்று. 

00:19:52.351 --> 00:19:56.885
m மற்றும் n இன் GCD ஐ. m. n ஐ விட பெரியது என்று கருதிக் கொள்ளுங்கள். 

00:19:56.885 --> 00:19:59.135
இப்போது n. m. ஐப் பிரித்தால், நாம் முடித்துவிட்டோம். 

00:19:59.135 --> 00:20:00.673
நாம் n ஐ திருப்பிக் கொடுக்கிறோம். 

00:20:00.673 --> 00:20:03.340
இது முன்னதாக இருந்தது போலவே உள்ளது. 

00:20:03.340 --> 00:20:06.673
இல்லையெனில், R தான் மீதமுள்ளதாக இருக்கட்டும். 

00:20:06.673 --> 00:20:17.911
n என்ற மதிப்பை n என்ற எண்ணில் பிரிக்கினால் மீதமுள்ளதைப் பெற்று, n மற்றும் r என்ற GCD ஐ திருப்பித் தருகிறோம். 

00:20:17.911 --> 00:20:20.362
எனவே இந்த நிலை குறித்து நாம் கவலைப்பட வேண்டியதில்லை. 

00:20:20.362 --> 00:20:25.909
நாம் வித்தியாசத்திற்காக செய்ததைப் போல அதிகபட்ச மற்றும் குறைந்தபட்சத்தை எடுக்க வேண்டியதில்லை. ஏனென்றால் மீதமுள்ளது n க்கும் குறைவாக இருக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:20:25.909 --> 00:20:28.956
இல்லையெனில் n இன்னும் ஒரு முறை செல்லும். 

00:20:28.956 --> 00:20:39.202
எனவே, முன்னதாக, நாம் ஒரு மிக எளிய மறுபரிசீலனை செயல்படுத்த வேண்டும், மேலும் இது மிகவும் எளிமையானது, ஏனெனில் நாம் இந்த அதிகபட்ச குறைந்தபட்ச வணிக செய்ய வேண்டியதில்லை. 

00:20:39.202 --> 00:20:46.340
எனவே, முந்தைய முறை போல, நாம் முதலில் m மற்றும் n ஐ திருப்புகிறோம், அவை சரியான வரிசையில் இல்லை என்றால். 

00:20:46.340 --> 00:20:52.680
பின்னர் n m ஐப் பிரிக்கினால், மீதமுள்ள m. n ஐப் பிரிக்கினால், நாம் n ஐத் திருப்பிக் கொடுத்து முடிக்கிறோம். 

00:20:52.680 --> 00:20:56.294
இல்லையெனில், n மற்றும் மீதமுள்ளவற்றின் GCD ஐ திருப்பித் தருகிறோம். 

00:20:56.294 --> 00:20:58.067
எனவே இதுவே மீதமுள்ளவை. 

00:20:58.067 --> 00:21:01.057
மீதமுள்ள எண் எப்போதும் n க்குக் குறைவாக இருப்பதை நினைவில் கொள்ளுங்கள். 

00:21:01.057 --> 00:21:07.060
எனவே நாம் அதை திருப்பி, அதிகபட்சமாக எடுத்துக்கொள்ள கவலைப்பட வேண்டியதில்லை. 

00:21:07.060 --> 00:21:17.452
முந்தைய வழக்கு போல, நாம் இந்த முழு விஷயத்தையும் செய்ய முடியும் ஒரு y பயன்படுத்தி அதை செய்ய பதிலாக ஒரு மறுபரிசீலனை விஷயம். 

00:21:17.452 --> 00:21:21.506
எனவே நாம் முதலில் m மற்றும் n ஐ மாற்றுகிறோம், அவை தவறான வரிசையில் இருந்தால். 

00:21:21.506 --> 00:21:29.340
பின்னர் மீதமுள்ள எண் 0 ஆக இல்லாத வரை, நாம் m ஐ இரண்டு எண்களில் சிறிய எண் மூலம் மாற்றுவோம். n ஐ மீதமுள்ள எண் மூலம் மாற்றுவோம். 

00:21:29.340 --> 00:21:34.249
இப்போது நாம் இந்த மீதமுள்ள அல்லது 0 செல்லும் என்று உத்தரவாதம் ஆனால் அது 0 செல்லும் என்றால் அது பிளவு என்று பொருள். 

00:21:34.249 --> 00:21:39.564
அல்லது அது 0 ஆக இல்லையென்றால், எஞ்சிய எண் தொடர்ந்து குறைந்து கொண்டே இருக்கும், ஏனென்றால் அது நாம் தொடங்கிய எண்ணை விட எப்போதும் சிறியதாக இருக்கும். 

00:21:39.564 --> 00:21:42.928
அது தொடர்ந்து குறைந்து 1 ஆக இருக்கும். அடுத்த கட்டத்தில் அது பிளவுபடும். 

00:21:42.928 --> 00:21:45.218
இறுதியாக, நாம் குறைந்தது 1 திரும்ப வேண்டும். 

00:21:45.218 --> 00:21:58.565
நாம் பார்த்த உதாரணத்திற்கு திரும்பிச் சென்றால், GCD 101.2 ஐ பார்த்தால், வித்தியாசத்தை பயன்படுத்தி அதை செய்தால், நாம் சுமார் 50 படிகளை எடுத்தோம் என்று சொன்னோம். 

00:21:58.565 --> 00:22:03.409
இப்போது நாம் மீதமுள்ளதைச் செய்தால், r என்பது 1 ஆகும் என்பதை நான் நேரடியாகக் கண்டுபிடிப்பேன். 

00:22:03.409 --> 00:22:06.753
நான் 101 ஐ 2 ஆகப் பிரித்தால், அது 50 முறை மீதமுள்ள 1 ஆகப் போகிறது. 

00:22:06.753 --> 00:22:10.329
எனவே ஒரு படி, நான் GCD 2, இன் 1 மற்றும் நான் 1 கிடைக்கும். 

00:22:10.329 --> 00:22:19.952
எனவே, நீங்கள் காட்ட முடியும் என்னவென்றால், மீதமுள்ள இந்த பதிப்பு உண்மையில் எண்களின் எண்ணிக்கையுடன் விகிதமான நேரத்தை எடுக்கும். 

00:22:19.952 --> 00:22:24.788
எனவே நான் ஒரு 100 இலக்க எண்ணைக் கூறினால், அது சுமார் 100 படிகள் எடுக்கும். 

00:22:24.788 --> 00:22:33.047
உதாரணமாக, ஒரு பில்லியன் எண் இருந்தால், ஒரு பில்லியன் 10 முதல் 9 வரை இருக்கும், அது 10 இலக்கங்கள் இருக்கும். 

00:22:33.047 --> 00:22:40.731
நான் ஒரு முட்டாள்தனமான வழிமுறையை செய்தால், அது ஒரு பில்லியன் படிகளின் எண்ணிக்கையை ஒரு பில்லியன் படிகள் என்ற எண்ணிக்கையுடன் ஒரு நிலையான முறை எடுக்கும். 

00:22:40.731 --> 00:22:50.340
ஆனால் இந்த அல்காரிதம், 10 முதல் 9 வரை 10 இலக்கங்கள் இருப்பதால், அது 10 படிகள் மட்டுமே எடுக்கும் என்று கூறுவதால், 

00:22:50.340 --> 00:22:53.911
எனவே இந்த பதிப்பில் செயல்திறன் கணிசமாக மேம்படுத்தப்பட்டுள்ளது. 

00:22:53.911 --> 00:22:57.638
எனவே இந்த பாடத்தை நாம் செய்யும் போது இதைப் பற்றி பேசலாம். 

00:22:57.638 --> 00:23:00.921
எனவே இந்த பாடத்திட்டம் நிரலாக்க, தரவு அமைப்பு மற்றும் வழிமுறைகள் பற்றி. 

00:23:00.921 --> 00:23:11.457
எனவே, ஒரு திட்டத்தில் ஒரு குறிப்பிட்ட யோசனையை விரிவுபடுத்துவதற்கான சிறந்த வழி என்னவென்று நிரலாக்கப் பகுதியில் பேசப்படுகிறது, அது சரியானது மற்றும் படிக்கவும் பராமரிக்கவும் எளிதானது என்பதை உறுதிப்படுத்த எளிதான வழி. 

00:23:11.457 --> 00:23:13.212
எனவே, இதுவே நிரலாக்கப் பகுதி. 

00:23:13.212 --> 00:23:17.951
எப்படி எழுதுகிறீர்கள், உங்கள் கருத்துக்களை மிக தெளிவாக வெளிப்படுத்துகிறீர்கள்? 

00:23:17.951 --> 00:23:23.293
ஆனால் யோசனை தெளிவாக இருக்க வேண்டும், அதுதான் தரவு அமைப்புகளும் வழிமுறைகளும் வருகின்றன. 

00:23:23.293 --> 00:23:30.340
எனவே நீங்கள் அழகான நாவல் எழுதலாம், ஆனால் உங்களுக்கு எந்த யோசனைகளும் இருக்காது அல்லது உங்களுக்கு மிகவும் பிரகாசமான யோசனைகள் இருக்கலாம், ஆனால் நீங்கள் உங்களைத் தொல்லை தராமல் வெளிப்படுத்தலாம். 

00:23:30.340 --> 00:23:31.928
அவற்றில் எதுவுமே உகந்தவை அல்ல. 

00:23:31.928 --> 00:23:34.692
இது வேறு எந்த மொழியிலும் எழுதுவது போல. 

00:23:34.692 --> 00:23:41.098
எனவே நீங்கள் வெளிப்படுத்தும் சிறந்த யோசனைகள் இருக்கலாம், ஆனால் அவற்றை நீங்கள் பேசும் நபருக்கு தெரிவிக்க முடியாவிட்டால், யோசனைகள் அவற்றின் தாக்கத்தை இழக்கின்றன. 

00:23:41.098 --> 00:23:44.340
எனவே உங்களுக்கு யோசனைகள் தேவை, அவற்றை வெளிப்படுத்த ஒரு மொழி தேவை. 

00:23:44.340 --> 00:23:50.340
எனவே நிரலாக்கமானது இந்த யோசனைகளை வெளிப்படுத்துவதுதான், ஆனால் யோசனைகள் தங்களை அல்காரிதம்களிலிருந்தும் தரவு அமைப்புகளிலிருந்தும் வருகின்றன.

2024-01-26 16:40:52,642 - ERROR - synthesize - Line 256 - Exception occurred: list index out of range. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
மேலும் திட்டமிடல் தொடர்பான பிரச்சினைகளை ஆராய GCD-யின் தற்போதைய உதாரணத்துடன் தொடரலாம். 

00:00:10.300 --> 00:00:29.640
GCD இன் அடிப்படை வரையறைக்கு நாங்கள் தொடங்கி, முதலில் M இன் அனைத்து காரணிகளையும் கணக்கிட்டு, ஒரு பட்டியலில் சேமிக்க வேண்டும், N இன் அனைத்து காரணிகளையும் கணக்கிட்டு, மற்றொரு பட்டியலில் சேமிக்க வேண்டும், இந்த இரண்டு பட்டியல்களிலிருந்து பொதுவான காரணிகளின் பட்டியலை பிரித்தெடுக்கவும், இந்த பொதுவான காரணிகளின் பட்டியலில் மிகப்பெரிய ஒன்றை அறிக்கை செய்யவும். 

00:00:29.680 --> 00:00:53.580
எமது முதல் எளிமைப்படுத்தல் நாம் உண்மையில் 1 முதல் குறைந்தபட்ச M மற்றும் N வரை ஒரு பாஸ் செய்ய முடியும் என்று கவனித்தது மற்றும் முதலில் தனித்தனியாக M மற்றும் N காரணிகள் கணக்கிடாமல் பொதுவான காரணிகள் பட்டியலை நேரடியாக கணக்கிட முடியும். பின்னர் நாம் பொதுவான காரணிகளின் பட்டியலை கூட தேவையில்லை என்று கவனித்தோம், ஏனெனில் நமது ஆர்வம் மிகப்பெரிய பொதுவான காரணி அல்லது மிகப்பெரிய பொதுவான வகுப்பான் மட்டுமே. 

00:00:53.580 --> 00:01:03.040
எனவே நாம் இதுவரை பார்த்த மிகப்பெரிய பொதுவான காரணிகளை ஒரே பெயரில் கண்காணித்து அதை இறுதியில் தெரிவிக்கலாம். 

00:01:03.040 --> 00:01:11.320
எங்கள் இறுதி எளிமைப்படுத்தல், நாம் மிகப்பெரிய பொதுவான காரணி பற்றி ஆர்வமாக இருந்தால், ஆரம்பத்தில் அல்ல, இறுதியில் தொடங்குவோம் என்பதைக் குறிப்பிடுவது. 

00:01:11.320 --> 00:01:20.140
எனவே 1 முதல் M மற்றும் N குறைந்தபட்ச வரை வேலை செய்யாமல், குறைந்தபட்ச M மற்றும் N முதல் 1 வரை வேலை செய்யாமல், 

00:01:20.140 --> 00:01:25.200
நாம் ஒரு பொதுவான காரணி கண்டுபிடிக்க, உடனேயே, நாம் அதை அறிக்கை மற்றும் வெளியேற. 

00:01:25.440 --> 00:01:29.760
1 என்பது பொதுவான காரணி என்று எப்போதும் நினைவில் கொள்ளுங்கள். 

00:01:29.760 --> 00:01:41.320
எனவே நாம் குறைந்தபட்ச M மற்றும் N இலிருந்து தொடங்கி பின்வாங்கினால், வேறு எந்த பொதுவான காரணிகளையும் காணவில்லை என்றால், நாம் 1 ஐ அழுத்தும்போது சரியாக வெளியேறுவோம் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:01:41.320 --> 00:02:07.180
எனவே நாம் கவனித்த விஷயம் என்னவென்றால், இந்த வெவ்வேறு பதிப்புகள் முந்தைய பதிப்புகளை விட எளிமையானவை என்றாலும், அவை அனைத்தும் கணக்கீட்டு அடிப்படையில் ஒரே செயல்திறனைக் கொண்டுள்ளன, அதாவது அவை முன்னோக்கி அல்லது பின்புறமாக வேலை, செய்தாலும், நாம் மிகப்பெரிய பொதுவான காரணிகளைக் கண்டுபிடிப்பதற்கு முன் 1 மற்றும் குறைந்தபட்ச M மற்றும் N இடையிலான அனைத்து எண்களையும் இயங்க கட்டாயப்படுத்துகின்றன. 

00:02:07.220 --> 00:02:23.540
எனவே, பண்டைய கிரேக்கர்களின் காலத்தில், நவீன காலமொழிகளில் முதல் வழிமுறை என்னவென்றால், அதை யூகிலிட் கண்டுபிடித்தார், அது இந்த பிரச்சனைக்கு GCD. 

00:02:23.740 --> 00:03:20.940
நாம் ஒரு பிளவு D என்று வைத்துக்கொள்வோம், இது M மற்றும் N இரண்டையும் பிளவுபடுத்துகிறது. எனவே இது ஒரு பொதுவான வகுப்பான் மற்றும் நாம் பெரிய போன்ற D தேடும். M என்பது N ஐ விட பெரியது என்று வாதத்திற்காக நாம் கருதுவோம் எனவே, D M மற்றும் N இரண்டையும் பிரிக்கினால், நாம் M ஐ A முறை D மற்றும் N ஐ B முறை D என எழுதலாம். சில மதிப்புகளுக்கு A மற்றும் B எனவே M என்பது D இன் பலமாகும், எனவே N எனவே நாம் இடது பக்கத்தை, சமன்பாடுகளை கழித்தால், இடது பக்கமானது M. - N. ஆகும் எனவே நாம் M. எடுத்து N. M. இருந்து குறைக்க எனவே, நாம் AD. இருந்து BD குறைக்க எனவே M. - N. சமம் AD. - BD. ஆனால் D. என்பது பொதுவான சொல். என்பதால், இதன் பொருள் M. - N. என்பது A - B. முறை D. எனவே இங்குதான். நாம் M. N. ஐ விட பெரியது என்று வைத்துக்கொள்வோம் எனவே A - B. ஒரு நேர்மறை எண் 

00:03:20.940 --> 00:04:05.589
ஆனால் M - N என்பது D இன் பலமாகும். அதாவது, D, M மற்றும் N இரண்டையும் பிரிக்கினால், அது N - N ஐப் பிரிக்கவும். D என்பது M மற்றும் N இன் மிகப்பெரிய வகுப்பான் என்பதால், D என்பது மிகப்பெரிய வகுப்பான் என்பதையும் வெளிப்படுத்துகிறது, இது N மற்றும் N - N க்கு பொதுவானது. வேறு வார்த்தைகளில் கூறுவதானால், M மற்றும் N இன் GCD இரண்டு சிறிய எண்களின் GCD, அதாவது N, மற்றும் இரண்டு, M மற்றும் N, M - N இன் வேறுபாடு போன்றது எனவே நாம் இந்த பயன்படுத்த முடியும் கணிசமாக எளிதாக்க GCD கண்டுபிடிக்கும் செயல்முறை எனவே இங்கே யூக்லிட்டின் அல்காரிதம் முதல் பதிப்பு 

00:04:05.589 --> 00:04:20.673
எனவே, M, N இன் GCD மதிப்பைக் கருத்தில் கொள்ளுங்கள், M N ஐ விட பெரியது என்று வைத்துக்கொள்வோம். எனவே, N ஏற்கனவே M இன் பிளவு என்றால், நாம் முடித்துவிட்டு N ஐ திருப்பித் தருகிறோம். இல்லையெனில், நாம் சிக்கலை புதியதாக மாற்றுகிறோம். 

00:04:20.713 --> 00:04:33.740
M மற்றும் N இன் GCD ஐ கணக்கிடுவதற்குப் பதிலாக, N மற்றும் M, - N இன் GCD ஐ கணக்கிட்டு அந்த மதிப்பைத் திருப்பிக் கொடுப்போம். 

00:04:33.780 --> 00:04:37.039
எனவே இங்கே இந்த யோசனையின் பைதான் செயல்படுத்தல் உள்ளது. 

00:04:37.039 --> 00:04:46.620
இந்த புதிய அம்சங்கள் சில இங்கே அறிமுகப்படுத்தப்பட்டுள்ளன. முதலில், இந்த சிறப்பு அறிக்கை, 

00:04:48.380 --> 00:04:55.380
Python இல், இந்த வகையான அறிக்கை ஒரு கருத்து என்று அழைக்கப்படுகிறது. 

00:04:57.780 --> 00:05:04.137
எனவே ஒரு கருத்து என்பது ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு நிகழ்ச்சியைப் படிக்கும் ஒருவருக்கு என்ன நடக்கிறது என்பதை விளக்குவதற்காக ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு அறிக்கையை வைக்கிறீர்கள். 

00:05:04.137 --> 00:05:08.015
ஆனால், அதை நிரலை இயக்கும் கணினி புறக்கணிக்கிறது. 

00:05:08.015 --> 00:05:15.220
எனவே இந்த அறிக்கை நாம் M. N. ஐ விட பெரியது அல்லது சமம் என்று கருதுகிறோம் என்று கூறுகிறது. 

00:05:16.260 --> 00:05:20.424
இந்த திட்டம் தொடரும் போது, இதுவே கருத்தாகும். 

00:05:20.424 --> 00:05:25.349
நிச்சயமாக, GCD ஐ அழைக்கும் நபருக்கு இதை உணர முடியாது. 

00:05:25.349 --> 00:05:29.413
எனவே அவர்கள் அதை M. N. ஐ விட சிறியதாகக் கொண்டு அழைக்கலாம். எனவே அதை சரிசெய்வோம். 

00:05:29.413 --> 00:05:34.100
எனவே இது பைதான்க்கு சொந்தமான ஒரு சிறப்பு வகை பணி. 

00:05:34.140 --> 00:05:37.003
மற்ற நிரலாக்க மொழிகளில் இது இல்லை. 

00:05:37.003 --> 00:05:44.257
எனவே நாம் செய்ய விரும்புவது, M மற்றும் N மதிப்புகளை எடுத்து அவற்றை பரிமாறிக்கொள்ள வேண்டும். 

00:05:44.257 --> 00:05:56.528
எனவே நாம் M இன் புதிய மதிப்பை N இன் பழைய மதிப்பாகவும், N இன் புதிய மதிப்பை M இன் பழைய மதிப்பாகவும் மாற்ற வேண்டும், எனவே M மற்றும் N தவறான வரிசையில் இருந்தால், அவற்றை மாற்றியமைப்போம். 

00:05:56.728 --> 00:06:02.963
எனவே இந்த பைதான் அறிக்கை என்ன செய்கிறது என்பது ஒரு ஜோடி மதிப்புகளை எடுத்து அது ஒரு சமகால ஒதுக்கீட்டை செய்கிறது. 

00:06:02.963 --> 00:06:19.588
எனவே, N இன் மதிப்பு M இன் மதிப்புக்குள் செல்கிறது மற்றும் M இன் மதிப்பு N இன் மதிப்புக்குள் செல்கிறது. இப்போது அது ஒரே நேரத்தில் செய்யப்படுகிறது முக்கியம். ஏனெனில் நீங்கள் அதை செய்ய என்றால், நீங்கள் முதலில் N மதிப்பு M நகலெடுக்க என்றால், பின்னர் பழைய மதிப்பு M இழக்கப்படுகிறது. 

00:06:19.588 --> 00:06:25.834
எனவே நீங்கள் பழைய மதிப்பை M இன் புதிய மதிப்பில் நகலெடுக்க முடியாது, ஏனெனில் நீங்கள் அதை இழந்துவிட்டீர்கள். 

00:06:25.834 --> 00:06:35.400
நீங்கள் இரண்டு கப் தண்ணீரை வைத்துள்ளீர்கள், அவற்றின் உள்ளடக்கத்தை பரிமாறிக்கொள்ள விரும்புகிறீர்கள். இப்போது நீங்கள் இடம் உருவாக்க வேண்டும். 

00:06:36.960 --> 00:06:39.832
அதை விட்டுவிடுவதற்கு முன் இதை அதில் ஊற்ற முடியாது. 

00:06:39.832 --> 00:06:42.571
அதை நீ விட்டால், அதை அதில் ஊற்ற முடியாது. 

00:06:42.571 --> 00:06:43.899
எனவே நீங்கள் ஒரு மூன்றாவது கப் பொதுவாக வேண்டும். 

00:06:43.899 --> 00:06:46.411
எனவே நீங்கள் முதலில் இதை இங்கு மாற்ற வேண்டும் மற்றும் அதை பாதுகாப்பாக வைக்க வேண்டும். 

00:06:46.411 --> 00:06:49.703
பின்னர் நீங்கள் அதை அங்கு மாற்ற வேண்டும் மற்றும் பின்னர் நீங்கள் அதை மீண்டும் நகலெடுக்க வேண்டும். 

00:06:49.703 --> 00:06:54.140
எனவே, பெரும்பாலான நிரலாக்க மொழிகள் இரண்டு மதிப்புகளை பரிமாறிக்கொள்ளும் வழியைக் காட்டுகின்றன. 

00:06:54.140 --> 00:06:59.354
ஆனால் பைதான் ஒரு அழகான அம்சத்தைக் கொண்டுள்ளது, இதன் மூலம் நீங்கள் ஒரு ஜோடி மதிப்புகளை எடுத்து அவற்றை ஒரே நேரத்தில் புதுப்பிக்க முடியும். 

00:06:59.394 --> 00:07:08.634
குறிப்பாக, இந்த ஒரே நேரத்தில் புதுப்பித்தல், இந்த கூடுதல் தற்காலிக இடத்தை ஒரு மதிப்பைப் பிரிப்பதற்கு கவலைப்படாமல் மதிப்புகளை பரிமாறிக்கொள்ள அனுமதிக்கிறது. 

00:07:08.634 --> 00:07:16.565
எப்படியிருந்தாலும், இந்த முதல் பகுதி நாம் கருதிக் கொண்டிருக்கும் இந்த நிபந்தனை பூர்த்தி செய்யப்படுவதை உறுதி செய்வதே ஆகும். 

00:07:16.565 --> 00:07:19.620
இப்போது நாம் அல்போரிதம் மையம் வந்து. 

00:07:19.620 --> 00:07:33.480
எனவே N M ஐப் பிரிக்கினால், அது M இன் மீதமுள்ள பகுதி N ஐப் பிரிக்கினால் 0 ஆகும், பின்னர் N ஐ GCD என்று கண்டுபிடித்தோம், பின்னர் N ஐ திருப்பித் தருகிறோம். 

00:07:34.120 --> 00:07:35.440
கடைசி ஸ்லைடு. 

00:07:35.440 --> 00:07:47.280
இப்போது நாம் N இன் GCD மற்றும் வேறுபாடு M. - N ஐ கணக்கிடப் போகிறோம். எனவே நாம் N மற்றும் N - N இன் GCD ஐ கணக்கிட விரும்புகிறோம். எனவே நாம் கணக்கிட 

00:07:48.640 --> 00:07:52.820
M. - N. என வேறுபாடு. இதை நாம் பயன்படுத்தலாம். 

00:07:52.820 --> 00:08:02.240
ஆனால் M என்றால் 97 எனவும், N என்றால் 2 எனவும் சொல்லலாம், வித்தியாசம் 95 ஆக இருக்கும். 

00:08:03.400 --> 00:08:08.922
N ஐ விட பெரியது. நாம் இந்த செயல்பாட்டை பெரிய எண் விட பெரிய முதல் எண் கொண்ட ஒரு செயல்பாட்டை அழைக்க விரும்புகிறோம். 

00:08:08.922 --> 00:08:12.780
எனவே, நமது செயல்பாடு இதை கவனித்துக்கொள்ளும் என்றாலும், இதை நாம் உறுதி செய்வோம். 

00:08:12.780 --> 00:08:23.109
நாம் செய்ய விரும்புவது, நாம் N மற்றும் M - N உடன் GCD ஐ அழைக்க வேண்டும், அதற்கு பதிலாக, நாம் N இன் அதிகபட்ச மதிப்பு மற்றும் வித்தியாசம் முதல் வாதம் மற்றும் N இன் குறைந்தபட்ச மதிப்பு மற்றும் வித்தியாசம் கொண்ட GCD ஐ அழைப்போம். 

00:08:23.109 --> 00:08:28.180
எனவே, இரண்டு மதிப்புகளில் பெரியது முதலில், மற்றும் சிறியது முதலில் செல்லும் என்பதை உறுதிப்படுத்தும். 

00:08:28.220 --> 00:08:33.781
இந்த GCD எதுவாக இருந்தாலும், இந்த செயல்பாடு என்னவாக இருக்கும் என்பதை புதிய GCD திரும்பப் பெறுகிறது. 

00:08:33.781 --> 00:08:42.460
எனவே இது நாம் பின்னர் பார்ப்போம் என்பதற்கு ஒரு எடுத்துக்காட்டு, இது மிகவும் இயற்கையானது, இது மீளுருவாக்கம் என்று அழைக்கப்படுகிறது. 

00:08:43.060 --> 00:08:52.878
அதாவது, நாம் ஒரு சிறிய பிரச்சினையை தீர்த்து, அந்த பதிலைப் பயன்படுத்தி, இந்த வழக்கில் நேரடியாக, நமது தற்போதைய பிரச்சினையின் பதிலைப் புகாரளிக்கப் போகிறோம். 

00:08:52.878 --> 00:09:06.496
எனவே நாம் M மற்றும் N இன் GCD ஐ தீர்க்க விரும்புகிறோம். ஆனால் M மற்றும் N இன் GCD, அதற்கு பதிலாக நாம் N மற்றும் M - N இன் GCD ஐ தீர்க்கிறோம். 

00:09:06.536 --> 00:09:11.881
எனவே நாம் சிறிய மதிப்புகளுடன் செயல்பாட்டை அழைத்து பின்னர் அதை திரும்ப. 

00:09:11.881 --> 00:09:16.233
இப்போது நீங்கள் ஒரு மறுபரிசீலனை அழைப்பு செய்ய இந்த போன்ற, அது ஒரு நேரம் சுழற்சி போன்றது. 

00:09:16.233 --> 00:09:17.996
அது மீண்டும் செயல்பாட்டை அழைக்கும். 

00:09:17.996 --> 00:09:20.474
அது ஒரு சிறிய செயல்பாட்டைக் கொண்டு வரும். 

00:09:20.474 --> 00:09:31.390
நீங்கள் இந்த வரிசையில் GCD தொடர்ந்து GCD அழைக்கும் போது, வேறு மதிப்புகள் ஒரு முடிவற்ற முன்னேற்றம் ஒரு நிறுத்த புள்ளி இல்லாமல் பெற முடியாது என்று உறுதி செய்ய வேண்டும். 

00:09:31.430 --> 00:09:40.300
எனவே, முறையாக, நாம் உறுதி செய்ய வேண்டும் என்ன இந்த உத்தரவாதம் கண்டுபிடிக்க ஒரு N பிளவு N. எனவே இங்கே GCD. 

00:09:41.980 --> 00:09:43.853
உண்மையில் தன்னை அழைத்து இல்லாமல் வெளியே செல்கிறது. 

00:09:43.853 --> 00:09:47.262
எனவே, நாம் இறுதியில் இந்த நிலைக்கு வருவதை உறுதி செய்ய வேண்டும். 

00:09:47.262 --> 00:09:54.071
இப்போது நீங்கள் இங்கே பார்த்தால் என்ன நடக்கிறது என்பது GCD க்கு அனுப்பப்படும் மதிப்புகள் சிறியதாகவும் சிறியதாகவும் மாறி வருகின்றன. 

00:09:54.071 --> 00:09:56.222
இப்போது நாம் M. - N. க்கு என்ன பெற முடியும்? 

00:09:56.222 --> 00:09:57.717
அது என்ன மதிப்பு? 

00:09:57.717 --> 00:09:58.960
அது பூஜ்ஜியமாக இருக்க முடியுமா? 

00:09:58.960 --> 00:10:10.508
M, - N என்றால் N. M என்றால் N. M என்றால் N. M என்றால் N. M என்பது N. 

00:10:10.508 --> 00:10:11.843
எனவே அது பூஜ்ஜியமாக இருக்க முடியாது. 

00:10:11.843 --> 00:10:13.542
எனவே அது குறைந்தது ஒரு இருக்க வேண்டும். 

00:10:13.542 --> 00:10:17.478
எனவே நாம் இந்த செயல்பாடு M. - N என்று அழைக்கும் போது குறைந்தது ஒன்று. 

00:10:17.478 --> 00:10:21.589
மறுபுறம், ஒவ்வொரு முறையும் நாம் சிறிய மதிப்புகளை அடைகிறோம். 

00:10:21.589 --> 00:10:25.443
எனவே நாம் சில மதிப்புடன் தொடங்குகிறோம் மற்றும் M. -N. தொடர்ந்து குறைகிறது. 

00:10:25.443 --> 00:10:27.990
அது உண்மையில் ஒரு அடையும் போது என்ன நடக்கும்? 

00:10:27.990 --> 00:10:31.700
அது ஒரு எண் வரை சென்றால், மற்ற எண்களை நாம் பிரிக்கலாம். 

00:10:31.700 --> 00:10:37.330
எனவே M சதவீதம் N அல்லது M N ஆல் பிரிக்கப்பட்டால், மீதமுள்ளவை 1 ஆக இருக்கும், அது 0 ஆக இருக்கும். 

00:10:37.330 --> 00:10:39.420
எனவே அது உங்கள் பூஜ்ஜியத்தை திருப்பித் தருகிறது. 

00:10:39.420 --> 00:10:52.180
வேறு வார்த்தைகளில் கூறுவதானால், இந்த செயல்பாடு, நாம் செயல்பாட்டை அழைக்கும் எண்ணிக்கையை குறைக்க தொடர்ந்து இருப்பதால், இறுதியில் GCD முடிவடையும் ஒரு அழைப்பை உருவாக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:10:55.020 --> 00:10:57.199
எனவே இது மிகவும் முக்கியமானது, பின்னர் இதைப் பற்றி பேசுவோம். 

00:10:57.199 --> 00:11:06.389
ஆனால் நீங்கள் இந்த வகை செயல்பாட்டை எழுதும்போது, நீங்கள் எங்கிருந்து தொடங்குகிறீர்களோ, அங்கு ஒரு முடிவான எண்ணிக்கையிலான படிகளில் அடையப்படும் ஒரு அடிப்படை வழக்கு இருப்பதை உறுதி செய்ய வேண்டும். 

00:11:06.429 --> 00:11:19.826
எனவே இது யூகிளிட்டின் அல்காரிதம், முதல் பதிப்பு, அங்கு நாம் M மற்றும் N இன் GCD, N மற்றும் M கழித்து N இன் GCD மாற்ற முடியும் என்று கவனிக்கிறோம். இந்த குறிப்பிட்ட நடைமுறைப்படுத்தலில் நாம் பார்த்தது இரண்டு விஷயங்கள். 

00:11:19.826 --> 00:11:21.304
ஒன்று, மூன்று விஷயங்கள். 

00:11:21.304 --> 00:11:23.872
ஒரு கருத்தை நமது குறியீட்டில் எவ்வாறு வைக்க வேண்டும் என்பதை நாம் பார்த்திருக்கிறோம். 

00:11:23.872 --> 00:11:30.042
பைதான் இரண்டு மாறிகளை ஒரே நேரத்தில் புதுப்பிக்கும் வகையில் செயல்படுகிறது என்பதை நாம் கண்டிருக்கிறோம். 

00:11:30.042 --> 00:11:39.833
எனவே M கோமா N M கோமா N க்கு சமம். மேலும் தற்போதைய செயல்பாட்டை கணக்கிட அதே செயல்பாட்டை புதிய வாதங்களுடன் பயன்படுத்தலாம் என்பதை நாம் கண்டோம். 

00:11:39.833 --> 00:11:49.263
எனவே M மற்றும் N இன் GCD ஐ கணக்கிட, நான் வேறு சில மதிப்புகளின் GCD ஐ கணக்கிட வேண்டும் என்று சொல்ல எந்த பிரச்சனையும் இல்லை, மற்றும் அந்த பதிலை என் பதிலை திரும்ப பயன்படுத்த. 

00:11:49.263 --> 00:11:57.757
எனவே இந்த அல்காரிதம் ஒரு வித்தியாசமான பதிப்பைப் பார்ப்போம், அங்கு நாம் ஒரு சைட் சுழற்சியால் மீள் அழைப்பை மாற்றுகிறோம். 

00:11:57.757 --> 00:12:06.175
எனவே நாம் எமது நிலையான வழிமுறைகளின் கடைசி பதிப்பில் M புள்ளி N முதல் 1 வரை குறைந்தது இருந்து பின் எண்ணும் போது பார்த்தோம். 

00:12:06.575 --> 00:12:10.650
எனவே நான் 0 க்கு மேல் இருக்கிறேனா என்று தொடர்ந்து சரிபார்த்து, தொடர்ந்து குறைந்து கொண்டோம். 

00:12:10.650 --> 00:12:13.281
சரி, இங்கே நாம் ஒரு சில நேரம் பயன்படுத்தி மீள்வினை செய்கிறோம். 

00:12:13.281 --> 00:12:20.168
முதலில் நான் கவனிக்க வேண்டியது, நான் ஒரு வரி, இறுதியில் ஒரு தனி வரிசையில் இருந்த இந்த கருத்தை நகர்த்தியுள்ளேன். 

00:12:20.168 --> 00:12:27.340
எனவே பைதான் என்ன சொல்கிறது என்றால், ஒரு ஹாஷ் இருந்தால், மற்ற வரிகளை புறக்கணிக்க முடியும். 

00:12:27.340 --> 00:12:31.307
எனவே இந்த வரி படித்து, அது ஒரு செல்லுபடியாகும் நிபந்தனை மற்றும் பின்னர் அது ஒரு ஹாஷ் பார்க்கிறது. 

00:12:31.307 --> 00:12:35.720
எனவே, இந்த அறிக்கை Python நிரலில் செயல்படும் போது ஒரு பகுதியாக இல்லை. 

00:12:35.720 --> 00:12:39.203
ஒரு கருத்து தனி வரிசையில் இருக்கலாம் அல்லது ஒரு வரிசையின் முடிவாக இருக்கலாம். 

00:12:39.203 --> 00:12:46.758
நிச்சயமாக, நீங்கள் Python செயல்படுத்த வேண்டும் என்று எதையும் இந்த பிறகு வைக்க முடியாது என்பதை நினைவில் கொள்ள வேண்டும், ஏனெனில் அது ஒரு ஹாஷிங் பார்க்க ஒருமுறை, மற்ற வரி புறக்கணிக்கப்படும். 

00:12:46.758 --> 00:12:48.340
எனவே அது ஒரு வரி முடிவாக இருக்க முடியாது. 

00:12:48.340 --> 00:12:49.823
மீதமுள்ள வரிசையை புறக்கணிக்கப் போகிறோம். 

00:12:49.823 --> 00:12:51.205
எனவே அது ஒரு வரிசையின் நடுவில் இருக்க முடியாது. 

00:12:51.205 --> 00:12:53.340
ஒரு வரிசையின் நடுவில் ஒரு கருத்தை வைக்க முடியாது. 

00:12:53.340 --> 00:12:57.200
ஆனால் நீங்கள் அதை ஒரு தனி வரிசையில் வைக்கலாம், அல்லது நீங்கள் அதை ஒரு வரி இறுதியில் வைக்கலாம். 

00:12:57.200 --> 00:12:59.816
எப்படியோ, இது எங்கள் கருத்து, முன்பு போல. 

00:12:59.816 --> 00:13:04.441
எனவே, இதுவரை நான் கருத்துகளை மாற்றியமைத்ததைத் தவிர வேறு எந்த மாற்றமும் இல்லை. 

00:13:04.441 --> 00:13:09.316
இப்போது நாம் ஒரு கணக்கீட்டைச் செய்ய வேண்டிய கட்டத்தில் இருக்கிறோம். 

00:13:09.316 --> 00:13:17.987
எனவே, இந்த கட்டத்தில், N M ஐப் பிரிக்கும் N ஐ நாம் கண்டால், நாம் முடித்து N ஐ நேரடியாக திருப்பிக் கொடுக்கலாம். எனவே, நமது மறுபரிசீலனைக் குறியீடு இதைச் செய்யும். 

00:13:17.987 --> 00:13:21.340
நாம் இதுபோன்ற Nஐ கண்டுபிடிக்கவில்லை என்றால், நாம் சில வேலைகளைச் செய்ய வேண்டும். 

00:13:21.340 --> 00:13:26.806
எனவே M பிரிக்கப்பட்ட N உண்மையில் ஒரு மீதமுள்ள உற்பத்தி செய்கிறதா என்பதை சரிபார்க்க வேண்டும். 

00:13:26.806 --> 00:13:31.482
எனவே இந்த அடையாளம் இந்த உச்சரிப்பு அடையாளத்துடன் எழுதப்பட்டுள்ளது. 

00:13:31.482 --> 00:13:35.038
எனவே இது கணித சமம் அல்ல. 

00:13:35.038 --> 00:13:40.187
இந்த இரட்டை சமம் என்பது சமத்துவத்தின் கணித அடையாளமாக நாம் பயன்படுத்தியதாக நினைவில் கொள்ளுங்கள். 

00:13:40.187 --> 00:13:43.010
எனவே இது சமமாக இல்லை என்பதற்கான அடையாளம். 

00:13:43.010 --> 00:13:49.700
எஞ்சியிருக்கும் வரை, எஞ்சியிருக்கும் எண் M பிரிக்கப்பட்டால் N என்பது 0 ஆகாது, நாம் முன்பு செய்ததைச் செய்வோம். 

00:13:49.700 --> 00:13:59.173
நாம் வித்தியாசத்தை கணக்கிட்டு M ஐ இரண்டு மதிப்புகளில் அதிகபட்சமாகவும், N ஐ இரண்டு மதிப்புகளில் சிறியதாகவும் மாற்றுவோம். 

00:13:59.173 --> 00:14:11.340
எனவே நாம் ஒரு ஜோடி M, N அதன் GCD நாம் M. N விட பெரியது என்று வைத்து கண்டுபிடிக்க முயற்சி. ஒவ்வொரு அடியிலும், நாம் N மற்றும் வித்தியாசத்தின் பெரிய M மற்றும் N மற்றும் வித்தியாசத்தின் சிறிய N மற்றும் சிறிய N மூலம் மாற்ற. 

00:14:11.340 --> 00:14:14.071
எனவே, இந்த மறுபரிசீலனை குறியீட்டில் நாம் செய்வது இதுதான். 

00:14:14.071 --> 00:14:16.803
நாம் சொல்லும் போதே நாம் கணக்கிடும் என்று GCD என்று. 

00:14:16.803 --> 00:14:41.828
எனவே இந்த போது சுழற்சியில், நாம் M, N இன் கணக்கீட்டை M, N இன் GCD உடன் மாற்ற வேண்டும் என்று சொல்கிறோம், N இன் அதிகபட்ச N வேறுபாடு மற்றும் குறைந்தபட்ச N இன் கணக்கீட்டை N உண்மையில் N ஐப் பிரிக்கும் நிலை வரும் வரை இதைச் செய்யத் தொடங்குவோம். நாம் சொன்னது போலவே, மறுபரிசீலனை வழக்கில், ஒரு எல்லை வழக்கு இருக்கும், இதில் மிக மோசமான வழக்கில் N 1 ஆக மாறும், 1 எல்லாவற்றையும் பிரிக்கும். 

00:14:41.828 --> 00:14:44.362
அதேபோல், இங்கே வித்தியாசம் தொடர்ந்து குறைந்து கொண்டே இருக்கும். 

00:14:44.362 --> 00:14:48.363
வித்தியாசம் பூஜ்ஜியமாக இருக்க முடியாது, ஏனெனில் வித்தியாசம் பூஜ்ஜியமாக இருந்தால், அது பிரிக்கப்படும். 

00:14:48.363 --> 00:14:52.710
எனவே வித்தியாசம் அதிகபட்சம் 1 ஆக குறைந்து 1 ஆக இருக்கும் போது முடிந்துவிடும். 

00:14:52.710 --> 00:14:57.408
எனவே இது நாம் முன்பு எழுதிய அதே மறுபரிசீலனை செயல்பாட்டின் ஒரு சமகால பதிப்பு. 

00:14:57.408 --> 00:15:06.785
எனவே, அது உதவுகிறது என்றால், நீங்கள் இந்த பக்கங்களுடன் பார்க்கலாம் மற்றும் மறுபரிசீலனை செய்யும் பொருள் என்ன செய்கிறது மற்றும் இடைநிலை என்ன செய்கிறது என்பதை புரிந்து கொள்ள முயற்சி செய்யலாம் மற்றும் அவர்கள் அடிப்படையில் அதே விஷயத்தை செய்கிறார்கள் என்பதை பார்க்கலாம். 

00:15:06.785 --> 00:15:19.744
இந்த மறுபடியும் முடிவடையும் என்ற கருத்து, நாம் முன்பு கூறியது போலவே உள்ளது. நீங்கள் ஒரு பிட் எழுதும்போது, நீங்கள் ஒரு பிட் தவறான பிட் நிலைக்கு முன்னேறுவதை உறுதி செய்ய வேண்டும். 

00:15:19.744 --> 00:15:36.340
எனவே நீங்கள் கவனமாக இல்லாவிட்டால் மற்றும் நீங்கள் அதை நிறுத்த உத்தரவாதம் வாதங்கள் மூலம் பயன்படுத்தி இல்லை என்றால், மீண்டும் மீண்டும் எப்போதும் நீடிக்கும் போலவே, நீங்கள் முன்னேற்றம் செய்யவில்லை என்றால் இடைவெளி நிலை இறுதியில் தவறாக மாறும் உறுதி செய்ய. 

00:15:41.340 --> 00:15:43.054
எனவே நாம் இதை விட சிறப்பாக செய்ய முடியும். 

00:15:43.054 --> 00:15:46.787
எனவே, ஒரு கை மரணதண்டனை செய்வதன் மூலம் ஒரு பிரச்சினையை பார்க்கலாம். 

00:15:46.787 --> 00:15:52.537
எனவே நாம் 101 மற்றும் 2 இன் GCD போன்ற எண்களுடன் தொடங்குவோம் என்று வைத்துக்கொள்வோம். 

00:15:52.537 --> 00:16:00.944
பின்னர் நமது அல்காரிதம், இது இப்போது வித்தியாசத்தின் gcd ஆகவும் n ஆகவும் மாற வேண்டும் என்று கூறுகிறது. 

00:16:00.944 --> 00:16:04.966
வித்தியாசம் 99 ஆகும், எனவே நமக்கு 99 மற்றும் 2 இருக்கும். 

00:16:04.966 --> 00:16:09.167
பின்னர் இது 97 மற்றும் 2 மற்றும் பலவற்றின் GCD ஆக மாறும். 

00:16:09.167 --> 00:16:18.661
எனவே நாம் 50 படிகள் தொடர்ந்து செய்ய வேண்டும். பின்னர் இறுதியில் நாம் 5 மற்றும் 2 மற்றும் பின்னர் 3 மற்றும் 2 ஆகியவற்றின் GCD ஆக வரும். 

00:16:18.661 --> 00:16:24.081
இப்போது நாம் வித்தியாசத்தை கணக்கிடுகிறோம், நாம் 2 மற்றும் 1 க்ஜிடி கிடைக்கும். 

00:16:24.081 --> 00:16:26.856
எனவே இப்போது வித்தியாசம் குறைவாகிவிடும். 

00:16:26.856 --> 00:16:30.482
இந்த நேரத்தில் நாம் பதிலை 1 என்று தெரிவிப்போம். 

00:16:30.482 --> 00:16:35.090
எனவே, 101 மற்றும் 2 இன் GCD செய்ய சுமார் 50 படிகள் ஆகும். 

00:16:35.090 --> 00:16:42.506
எனவே, இந்த புத்திசாலித்தனமான அணுகுமுறையை விமர்சிப்பது, எண்களே நேரத்தை ஒத்ததாக எடுக்கும். 

00:16:42.506 --> 00:16:47.898
நாம் m மற்றும் n எண்களை சேர்த்தால், நாம் m மற்றும் n இன் குறைந்தபட்சத்திற்கு சமமான பொதுவான படிகளின் எண்ணிக்கையை எடுப்போம். 

00:16:47.898 --> 00:16:52.592
இப்போது நாம் குறைந்தபட்சத்தை விட பெரிய படிகளை எடுத்து வருகிறோம், ஏனெனில் குறைந்தபட்சமானது 2 ஆகும். 

00:16:52.592 --> 00:16:59.603
நாம் கணக்கிடும் காரணிகள் என்றால், 2 என்ற ஒரே காரணி 2 என்று நாம் கூறலாம், அது 101 என்ற காரணி அல்ல, நாம் ஆரம்பத்தில் நிறுத்தப்பட்டிருப்போம். 

00:16:59.603 --> 00:17:04.901
எனவே இது சில சந்தர்ப்பங்களில் நமது முந்தைய வழிமுறைகளை விட மோசமாக நடக்கிறது. 

00:17:04.901 --> 00:17:07.931
எனவே, இங்கே ஒரு சிறந்த கவனிப்பு உள்ளது. 

00:17:07.931 --> 00:17:10.870
எனவே n. m. ஐப் பிரிக்கவில்லை என்று வைத்துக்கொள்வோம். 

00:17:10.870 --> 00:17:17.735
வேறு வார்த்தைகளில் கூறுவதானால், m. ஐ. n. ஆல் பிரிக்கினால், எனக்கு ஒரு விகிதமும் மீதமுள்ள விகிதமும் கிடைக்கும். 

00:17:17.735 --> 00:17:22.885
எனவே நான் n என எழுத முடியும். q x, n, + r அங்கு q என்பது குவாசகம் மற்றும் r என்பது மீதமுள்ள. 

00:17:22.885 --> 00:17:26.006
நீங்கள் உயர்நிலைக் கணிதத்தில் இருந்து இந்த சொற்களை நினைவில் வைத்திருக்கலாம். 

00:17:26.006 --> 00:17:32.188
எனவே n. m. q முறைக்கு சென்று, மீதமுள்ள r ஐ விட்டு விடுகிறது, r. n. ஐ விட சிறியதாக இருப்பதை உறுதி செய்கிறோம். 

00:17:32.188 --> 00:17:35.451
இல்லையெனில் அது ஒரு முறை செல்லும், அது q + 1 ஆக இருக்கும். 

00:17:35.451 --> 00:17:37.673
எனவே எஞ்சியுள்ள எண் r. n. ஐ விட சிறியதாக உள்ளது. 

00:17:37.673 --> 00:17:45.095
உதாரணமாக 7 எனில் 3ல் பிரிக்க விரும்பினால், இது 2 x 3 + 1 ஆகும். 

00:17:45.095 --> 00:17:47.731
எனவே இது எனது குவாசிண்டாகும், இது எனது மீதமுள்ளதாக இருக்கும். 

00:17:47.731 --> 00:17:53.090
முக்கியமானது என்னவென்றால், மீதமுள்ளவை நான் பகிர்ந்து கொள்ளும் அளவை விட எப்போதும் சிறியவை. 

00:17:53.090 --> 00:17:59.845
இப்போது நாம் முன் போல் நாம் m மற்றும் n இருவரும் ஒரு பொதுவான வகுப்பாளர் என்று வைத்துக்கொள்வோம். 

00:17:59.845 --> 00:18:10.756
வேறு வார்த்தைகளில் கூறுவதானால், முன்பு நாம் m தன்னை ஒரு முறை d மற்றும் n என b முறை d என எழுதலாம். சில எண்களுக்கு a மற்றும் b ஏனெனில் m என்பது d இன் பலமாகும், எனவே n ஆகும். 

00:18:10.756 --> 00:18:22.803
எனவே இதை மேலே உள்ள சமன்பாட்டில் இணைத்தால், m என்பது a x d என்பது q x n ஆகும். b x d plus r. 

00:18:22.803 --> 00:18:27.598
எனவே d இடது மற்றும் d வலது ஒரு பகுதியை பிரிக்கின்றன. 

00:18:27.598 --> 00:18:32.148
எனவே d க்கு r ஐப் பிரிக்க வேண்டும் என்று நீங்கள் எளிதாக உங்களை நம்பலாம். 

00:18:32.148 --> 00:18:47.862
எனவே, இதைப் பற்றி யோசிக்க ஒரு வழி, நீங்கள் விரும்பினால், நான் இந்த எண் m ஐக் கொண்டுள்ளேன், அதை n இன் அலகுகளாக பிரிக்க முடியும், பின்னர் இங்கே ஒரு சிறிய பிட் உள்ளது. 

00:18:47.862 --> 00:18:54.081
மற்றபடி, d, d எல்லாவற்றையும் சமமாகப் பிரிக்கிறது. 

00:18:54.081 --> 00:18:57.565
எனவே இது இந்த தொகுதிகளை ஒவ்வொன்றையும் பிரிக்கின்றது. 

00:18:57.565 --> 00:19:00.473
அது முழு விஷயத்தையும் பிளவுபடுத்துகிறது. 

00:19:00.473 --> 00:19:08.316
ஆனால் இப்போது நான் d உடன் தொடரினால், அது இந்த எல்லையில் நிறுத்தப் போகிறது, ஏனென்றால் d n ஐப் பிரிக்கவும். 

00:19:08.316 --> 00:19:12.045
எனவே d என்பது இந்த கடைசி பிட் ஆகும். 

00:19:12.045 --> 00:19:17.857
எனவே, நாம் எளிதாக r என்பது d இன் பெருக்காக இருக்க வேண்டும் என்று வாதிடலாம். 

00:19:17.857 --> 00:19:20.753
எனவே d க்கு r க்கும் பிளவு வேண்டும். 

00:19:20.753 --> 00:19:28.179
எனவே d m மற்றும் d n ஐப் பிரித்தால், d மீதமுள்ள m. ஐ. n ஆல் பிரிக்க வேண்டும். 

00:19:28.179 --> 00:19:33.959
நாம் முன்பு பார்த்தபடி, வித்தியாசத்தை, எனவே கடைசியாக நாம் சொல்லியிருந்தோம். நாம் பார்க்க வேண்டும் வித்தியாசம் m பிரிக்கப்பட்ட n. 

00:19:33.959 --> 00:19:42.361
இப்போது நாம் சொல்கிறோம், மீதமுள்ள m, ஐ, n மற்றும் d க்கு பிரிக்க வேண்டும், அது n மற்றும் இந்த மீதமுள்ள GCD ஆக இருக்கும். 

00:19:42.361 --> 00:19:52.351
எனவே இது ஒரு மேம்படுத்தப்பட்ட மற்றும் நீங்கள் முன்மொழிய முடியும் என்று அல்கோரிதம் உண்மையான பதிப்பு ஆகும், வித்தியாசம் ஒன்று, ஆனால் மீதமுள்ள ஒன்று. 

00:19:52.351 --> 00:19:56.885
m மற்றும் n இன் GCD ஐ. m. n ஐ விட பெரியது என்று கருதிக் கொள்ளுங்கள். 

00:19:56.885 --> 00:19:59.135
இப்போது n. m. ஐப் பிரித்தால், நாம் முடித்துவிட்டோம். 

00:19:59.135 --> 00:20:00.673
நாம் n ஐ திருப்பிக் கொடுக்கிறோம். 

00:20:00.673 --> 00:20:03.340
இது முன்னதாக இருந்தது போலவே உள்ளது. 

00:20:03.340 --> 00:20:06.673
இல்லையெனில், R தான் மீதமுள்ளதாக இருக்கட்டும். 

00:20:06.673 --> 00:20:17.911
n என்ற மதிப்பை n என்ற எண்ணில் பிரிக்கினால் மீதமுள்ளதைப் பெற்று, n மற்றும் r என்ற GCD ஐ திருப்பித் தருகிறோம். 

00:20:17.911 --> 00:20:20.362
எனவே இந்த நிலை குறித்து நாம் கவலைப்பட வேண்டியதில்லை. 

00:20:20.362 --> 00:20:25.909
நாம் வித்தியாசத்திற்காக செய்ததைப் போல அதிகபட்ச மற்றும் குறைந்தபட்சத்தை எடுக்க வேண்டியதில்லை. ஏனென்றால் மீதமுள்ளது n க்கும் குறைவாக இருக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:20:25.909 --> 00:20:28.956
இல்லையெனில் n இன்னும் ஒரு முறை செல்லும். 

00:20:28.956 --> 00:20:39.202
எனவே, முன்னதாக, நாம் ஒரு மிக எளிய மறுபரிசீலனை செயல்படுத்த வேண்டும், மேலும் இது மிகவும் எளிமையானது, ஏனெனில் நாம் இந்த அதிகபட்ச குறைந்தபட்ச வணிக செய்ய வேண்டியதில்லை. 

00:20:39.202 --> 00:20:46.340
எனவே, முந்தைய முறை போல, நாம் முதலில் m மற்றும் n ஐ திருப்புகிறோம், அவை சரியான வரிசையில் இல்லை என்றால். 

00:20:46.340 --> 00:20:52.680
பின்னர் n m ஐப் பிரிக்கினால், மீதமுள்ள m. n ஐப் பிரிக்கினால், நாம் n ஐத் திருப்பிக் கொடுத்து முடிக்கிறோம். 

00:20:52.680 --> 00:20:56.294
இல்லையெனில், n மற்றும் மீதமுள்ளவற்றின் GCD ஐ திருப்பித் தருகிறோம். 

00:20:56.294 --> 00:20:58.067
எனவே இதுவே மீதமுள்ளவை. 

00:20:58.067 --> 00:21:01.057
மீதமுள்ள எண் எப்போதும் n க்குக் குறைவாக இருப்பதை நினைவில் கொள்ளுங்கள். 

00:21:01.057 --> 00:21:07.060
எனவே நாம் அதை திருப்பி, அதிகபட்சமாக எடுத்துக்கொள்ள கவலைப்பட வேண்டியதில்லை. 

00:21:07.060 --> 00:21:17.452
முந்தைய வழக்கு போல, நாம் இந்த முழு விஷயத்தையும் செய்ய முடியும் ஒரு y பயன்படுத்தி அதை செய்ய பதிலாக ஒரு மறுபரிசீலனை விஷயம். 

00:21:17.452 --> 00:21:21.506
எனவே நாம் முதலில் m மற்றும் n ஐ மாற்றுகிறோம், அவை தவறான வரிசையில் இருந்தால். 

00:21:21.506 --> 00:21:29.340
பின்னர் மீதமுள்ள எண் 0 ஆக இல்லாத வரை, நாம் m ஐ இரண்டு எண்களில் சிறிய எண் மூலம் மாற்றுவோம். n ஐ மீதமுள்ள எண் மூலம் மாற்றுவோம். 

00:21:29.340 --> 00:21:34.249
இப்போது நாம் இந்த மீதமுள்ள அல்லது 0 செல்லும் என்று உத்தரவாதம் ஆனால் அது 0 செல்லும் என்றால் அது பிளவு என்று பொருள். 

00:21:34.249 --> 00:21:39.564
அல்லது அது 0 ஆக இல்லையென்றால், எஞ்சிய எண் தொடர்ந்து குறைந்து கொண்டே இருக்கும், ஏனென்றால் அது நாம் தொடங்கிய எண்ணை விட எப்போதும் சிறியதாக இருக்கும். 

00:21:39.564 --> 00:21:42.928
அது தொடர்ந்து குறைந்து 1 ஆக இருக்கும். அடுத்த கட்டத்தில் அது பிளவுபடும். 

00:21:42.928 --> 00:21:45.218
இறுதியாக, நாம் குறைந்தது 1 திரும்ப வேண்டும். 

00:21:45.218 --> 00:21:58.565
நாம் பார்த்த உதாரணத்திற்கு திரும்பிச் சென்றால், GCD 101.2 ஐ பார்த்தால், வித்தியாசத்தை பயன்படுத்தி அதை செய்தால், நாம் சுமார் 50 படிகளை எடுத்தோம் என்று சொன்னோம். 

00:21:58.565 --> 00:22:03.409
இப்போது நாம் மீதமுள்ளதைச் செய்தால், r என்பது 1 ஆகும் என்பதை நான் நேரடியாகக் கண்டுபிடிப்பேன். 

00:22:03.409 --> 00:22:06.753
நான் 101 ஐ 2 ஆகப் பிரித்தால், அது 50 முறை மீதமுள்ள 1 ஆகப் போகிறது. 

00:22:06.753 --> 00:22:10.329
எனவே ஒரு படி, நான் GCD 2, இன் 1 மற்றும் நான் 1 கிடைக்கும். 

00:22:10.329 --> 00:22:19.952
எனவே, நீங்கள் காட்ட முடியும் என்னவென்றால், மீதமுள்ள இந்த பதிப்பு உண்மையில் எண்களின் எண்ணிக்கையுடன் விகிதமான நேரத்தை எடுக்கும். 

00:22:19.952 --> 00:22:24.788
எனவே நான் ஒரு 100 இலக்க எண்ணைக் கூறினால், அது சுமார் 100 படிகள் எடுக்கும். 

00:22:24.788 --> 00:22:33.047
உதாரணமாக, ஒரு பில்லியன் எண் இருந்தால், ஒரு பில்லியன் 10 முதல் 9 வரை இருக்கும், அது 10 இலக்கங்கள் இருக்கும். 

00:22:33.047 --> 00:22:40.731
நான் ஒரு முட்டாள்தனமான வழிமுறையை செய்தால், அது ஒரு பில்லியன் படிகளின் எண்ணிக்கையை ஒரு பில்லியன் படிகள் என்ற எண்ணிக்கையுடன் ஒரு நிலையான முறை எடுக்கும். 

00:22:40.731 --> 00:22:50.340
ஆனால் இந்த அல்காரிதம், 10 முதல் 9 வரை 10 இலக்கங்கள் இருப்பதால், அது 10 படிகள் மட்டுமே எடுக்கும் என்று கூறுவதால், 

00:22:50.340 --> 00:22:53.911
எனவே இந்த பதிப்பில் செயல்திறன் கணிசமாக மேம்படுத்தப்பட்டுள்ளது. 

00:22:53.911 --> 00:22:57.638
எனவே இந்த பாடத்தை நாம் செய்யும் போது இதைப் பற்றி பேசலாம். 

00:22:57.638 --> 00:23:00.921
எனவே இந்த பாடத்திட்டம் நிரலாக்க, தரவு அமைப்பு மற்றும் வழிமுறைகள் பற்றி. 

00:23:00.921 --> 00:23:11.457
எனவே, ஒரு திட்டத்தில் ஒரு குறிப்பிட்ட யோசனையை விரிவுபடுத்துவதற்கான சிறந்த வழி என்னவென்று நிரலாக்கப் பகுதியில் பேசப்படுகிறது, அது சரியானது மற்றும் படிக்கவும் பராமரிக்கவும் எளிதானது என்பதை உறுதிப்படுத்த எளிதான வழி. 

00:23:11.457 --> 00:23:13.212
எனவே, இதுவே நிரலாக்கப் பகுதி. 

00:23:13.212 --> 00:23:17.951
எப்படி எழுதுகிறீர்கள், உங்கள் கருத்துக்களை மிக தெளிவாக வெளிப்படுத்துகிறீர்கள்? 

00:23:17.951 --> 00:23:23.293
ஆனால் யோசனை தெளிவாக இருக்க வேண்டும், அதுதான் தரவு அமைப்புகளும் வழிமுறைகளும் வருகின்றன. 

00:23:23.293 --> 00:23:30.340
எனவே நீங்கள் அழகான நாவல் எழுதலாம், ஆனால் உங்களுக்கு எந்த யோசனைகளும் இருக்காது அல்லது உங்களுக்கு மிகவும் பிரகாசமான யோசனைகள் இருக்கலாம், ஆனால் நீங்கள் உங்களைத் தொல்லை தராமல் வெளிப்படுத்தலாம். 

00:23:30.340 --> 00:23:31.928
அவற்றில் எதுவுமே உகந்தவை அல்ல. 

00:23:31.928 --> 00:23:34.692
இது வேறு எந்த மொழியிலும் எழுதுவது போல. 

00:23:34.692 --> 00:23:41.098
எனவே நீங்கள் வெளிப்படுத்தும் சிறந்த யோசனைகள் இருக்கலாம், ஆனால் அவற்றை நீங்கள் பேசும் நபருக்கு தெரிவிக்க முடியாவிட்டால், யோசனைகள் அவற்றின் தாக்கத்தை இழக்கின்றன. 

00:23:41.098 --> 00:23:44.340
எனவே உங்களுக்கு யோசனைகள் தேவை, அவற்றை வெளிப்படுத்த ஒரு மொழி தேவை. 

00:23:44.340 --> 00:23:50.340
எனவே நிரலாக்கமானது இந்த யோசனைகளை வெளிப்படுத்துவதுதான், ஆனால் யோசனைகள் தங்களை அல்காரிதம்களிலிருந்தும் தரவு அமைப்புகளிலிருந்தும் வருகின்றன.

2024-01-26 16:41:52,023 - ERROR - synthesize - Line 256 - Exception occurred: list index out of range. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
மேலும் திட்டமிடல் தொடர்பான பிரச்சினைகளை ஆராய GCD-யின் தற்போதைய உதாரணத்துடன் தொடரலாம். 

00:00:10.300 --> 00:00:29.640
GCD இன் அடிப்படை வரையறைக்கு நாங்கள் தொடங்கி, முதலில் M இன் அனைத்து காரணிகளையும் கணக்கிட்டு, ஒரு பட்டியலில் சேமிக்க வேண்டும், N இன் அனைத்து காரணிகளையும் கணக்கிட்டு, மற்றொரு பட்டியலில் சேமிக்க வேண்டும், இந்த இரண்டு பட்டியல்களிலிருந்து பொதுவான காரணிகளின் பட்டியலை பிரித்தெடுக்கவும், இந்த பொதுவான காரணிகளின் பட்டியலில் மிகப்பெரிய ஒன்றை அறிக்கை செய்யவும். 

00:00:29.680 --> 00:00:53.580
எமது முதல் எளிமைப்படுத்தல் நாம் உண்மையில் 1 முதல் குறைந்தபட்ச M மற்றும் N வரை ஒரு பாஸ் செய்ய முடியும் என்று கவனித்தது மற்றும் முதலில் தனித்தனியாக M மற்றும் N காரணிகள் கணக்கிடாமல் பொதுவான காரணிகள் பட்டியலை நேரடியாக கணக்கிட முடியும். பின்னர் நாம் பொதுவான காரணிகளின் பட்டியலை கூட தேவையில்லை என்று கவனித்தோம், ஏனெனில் நமது ஆர்வம் மிகப்பெரிய பொதுவான காரணி அல்லது மிகப்பெரிய பொதுவான வகுப்பான் மட்டுமே. 

00:00:53.580 --> 00:01:03.040
எனவே நாம் இதுவரை பார்த்த மிகப்பெரிய பொதுவான காரணிகளை ஒரே பெயரில் கண்காணித்து அதை இறுதியில் தெரிவிக்கலாம். 

00:01:03.040 --> 00:01:11.320
எங்கள் இறுதி எளிமைப்படுத்தல், நாம் மிகப்பெரிய பொதுவான காரணி பற்றி ஆர்வமாக இருந்தால், ஆரம்பத்தில் அல்ல, இறுதியில் தொடங்குவோம் என்பதைக் குறிப்பிடுவது. 

00:01:11.320 --> 00:01:20.140
எனவே 1 முதல் M மற்றும் N குறைந்தபட்ச வரை வேலை செய்யாமல், குறைந்தபட்ச M மற்றும் N முதல் 1 வரை வேலை செய்யாமல், 

00:01:20.140 --> 00:01:25.200
நாம் ஒரு பொதுவான காரணி கண்டுபிடிக்க, உடனேயே, நாம் அதை அறிக்கை மற்றும் வெளியேற. 

00:01:25.440 --> 00:01:29.760
1 என்பது பொதுவான காரணி என்று எப்போதும் நினைவில் கொள்ளுங்கள். 

00:01:29.760 --> 00:01:41.320
எனவே நாம் குறைந்தபட்ச M மற்றும் N இலிருந்து தொடங்கி பின்வாங்கினால், வேறு எந்த பொதுவான காரணிகளையும் காணவில்லை என்றால், நாம் 1 ஐ அழுத்தும்போது சரியாக வெளியேறுவோம் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:01:41.320 --> 00:02:07.180
எனவே நாம் கவனித்த விஷயம் என்னவென்றால், இந்த வெவ்வேறு பதிப்புகள் முந்தைய பதிப்புகளை விட எளிமையானவை என்றாலும், அவை அனைத்தும் கணக்கீட்டு அடிப்படையில் ஒரே செயல்திறனைக் கொண்டுள்ளன, அதாவது அவை முன்னோக்கி அல்லது பின்புறமாக வேலை, செய்தாலும், நாம் மிகப்பெரிய பொதுவான காரணிகளைக் கண்டுபிடிப்பதற்கு முன் 1 மற்றும் குறைந்தபட்ச M மற்றும் N இடையிலான அனைத்து எண்களையும் இயங்க கட்டாயப்படுத்துகின்றன. 

00:02:07.220 --> 00:02:23.540
எனவே, பண்டைய கிரேக்கர்களின் காலத்தில், நவீன காலமொழிகளில் முதல் வழிமுறை என்னவென்றால், அதை யூகிலிட் கண்டுபிடித்தார், அது இந்த பிரச்சனைக்கு GCD. 

00:02:23.740 --> 00:03:20.940
நாம் ஒரு பிளவு D என்று வைத்துக்கொள்வோம், இது M மற்றும் N இரண்டையும் பிளவுபடுத்துகிறது. எனவே இது ஒரு பொதுவான வகுப்பான் மற்றும் நாம் பெரிய போன்ற D தேடும். M என்பது N ஐ விட பெரியது என்று வாதத்திற்காக நாம் கருதுவோம் எனவே, D M மற்றும் N இரண்டையும் பிரிக்கினால், நாம் M ஐ A முறை D மற்றும் N ஐ B முறை D என எழுதலாம். சில மதிப்புகளுக்கு A மற்றும் B எனவே M என்பது D இன் பலமாகும், எனவே N எனவே நாம் இடது பக்கத்தை, சமன்பாடுகளை கழித்தால், இடது பக்கமானது M. - N. ஆகும் எனவே நாம் M. எடுத்து N. M. இருந்து குறைக்க எனவே, நாம் AD. இருந்து BD குறைக்க எனவே M. - N. சமம் AD. - BD. ஆனால் D. என்பது பொதுவான சொல். என்பதால், இதன் பொருள் M. - N. என்பது A - B. முறை D. எனவே இங்குதான். நாம் M. N. ஐ விட பெரியது என்று வைத்துக்கொள்வோம் எனவே A - B. ஒரு நேர்மறை எண் 

00:03:20.940 --> 00:04:05.589
ஆனால் M - N என்பது D இன் பலமாகும். அதாவது, D, M மற்றும் N இரண்டையும் பிரிக்கினால், அது N - N ஐப் பிரிக்கவும். D என்பது M மற்றும் N இன் மிகப்பெரிய வகுப்பான் என்பதால், D என்பது மிகப்பெரிய வகுப்பான் என்பதையும் வெளிப்படுத்துகிறது, இது N மற்றும் N - N க்கு பொதுவானது. வேறு வார்த்தைகளில் கூறுவதானால், M மற்றும் N இன் GCD இரண்டு சிறிய எண்களின் GCD, அதாவது N, மற்றும் இரண்டு, M மற்றும் N, M - N இன் வேறுபாடு போன்றது எனவே நாம் இந்த பயன்படுத்த முடியும் கணிசமாக எளிதாக்க GCD கண்டுபிடிக்கும் செயல்முறை எனவே இங்கே யூக்லிட்டின் அல்காரிதம் முதல் பதிப்பு 

00:04:05.589 --> 00:04:20.673
எனவே, M, N இன் GCD மதிப்பைக் கருத்தில் கொள்ளுங்கள், M N ஐ விட பெரியது என்று வைத்துக்கொள்வோம். எனவே, N ஏற்கனவே M இன் பிளவு என்றால், நாம் முடித்துவிட்டு N ஐ திருப்பித் தருகிறோம். இல்லையெனில், நாம் சிக்கலை புதியதாக மாற்றுகிறோம். 

00:04:20.713 --> 00:04:33.740
M மற்றும் N இன் GCD ஐ கணக்கிடுவதற்குப் பதிலாக, N மற்றும் M, - N இன் GCD ஐ கணக்கிட்டு அந்த மதிப்பைத் திருப்பிக் கொடுப்போம். 

00:04:33.780 --> 00:04:37.039
எனவே இங்கே இந்த யோசனையின் பைதான் செயல்படுத்தல் உள்ளது. 

00:04:37.039 --> 00:04:46.620
இந்த புதிய அம்சங்கள் சில இங்கே அறிமுகப்படுத்தப்பட்டுள்ளன. முதலில், இந்த சிறப்பு அறிக்கை, 

00:04:48.380 --> 00:04:55.380
Python இல், இந்த வகையான அறிக்கை ஒரு கருத்து என்று அழைக்கப்படுகிறது. 

00:04:57.780 --> 00:05:04.137
எனவே ஒரு கருத்து என்பது ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு நிகழ்ச்சியைப் படிக்கும் ஒருவருக்கு என்ன நடக்கிறது என்பதை விளக்குவதற்காக ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு அறிக்கையை வைக்கிறீர்கள். 

00:05:04.137 --> 00:05:08.015
ஆனால், அதை நிரலை இயக்கும் கணினி புறக்கணிக்கிறது. 

00:05:08.015 --> 00:05:15.220
எனவே இந்த அறிக்கை நாம் M. N. ஐ விட பெரியது அல்லது சமம் என்று கருதுகிறோம் என்று கூறுகிறது. 

00:05:16.260 --> 00:05:20.424
இந்த திட்டம் தொடரும் போது, இதுவே கருத்தாகும். 

00:05:20.424 --> 00:05:25.349
நிச்சயமாக, GCD ஐ அழைக்கும் நபருக்கு இதை உணர முடியாது. 

00:05:25.349 --> 00:05:29.413
எனவே அவர்கள் அதை M. N. ஐ விட சிறியதாகக் கொண்டு அழைக்கலாம். எனவே அதை சரிசெய்வோம். 

00:05:29.413 --> 00:05:34.100
எனவே இது பைதான்க்கு சொந்தமான ஒரு சிறப்பு வகை பணி. 

00:05:34.140 --> 00:05:37.003
மற்ற நிரலாக்க மொழிகளில் இது இல்லை. 

00:05:37.003 --> 00:05:44.257
எனவே நாம் செய்ய விரும்புவது, M மற்றும் N மதிப்புகளை எடுத்து அவற்றை பரிமாறிக்கொள்ள வேண்டும். 

00:05:44.257 --> 00:05:56.528
எனவே நாம் M இன் புதிய மதிப்பை N இன் பழைய மதிப்பாகவும், N இன் புதிய மதிப்பை M இன் பழைய மதிப்பாகவும் மாற்ற வேண்டும், எனவே M மற்றும் N தவறான வரிசையில் இருந்தால், அவற்றை மாற்றியமைப்போம். 

00:05:56.728 --> 00:06:02.963
எனவே இந்த பைதான் அறிக்கை என்ன செய்கிறது என்பது ஒரு ஜோடி மதிப்புகளை எடுத்து அது ஒரு சமகால ஒதுக்கீட்டை செய்கிறது. 

00:06:02.963 --> 00:06:19.588
எனவே, N இன் மதிப்பு M இன் மதிப்புக்குள் செல்கிறது மற்றும் M இன் மதிப்பு N இன் மதிப்புக்குள் செல்கிறது. இப்போது அது ஒரே நேரத்தில் செய்யப்படுகிறது முக்கியம். ஏனெனில் நீங்கள் அதை செய்ய என்றால், நீங்கள் முதலில் N மதிப்பு M நகலெடுக்க என்றால், பின்னர் பழைய மதிப்பு M இழக்கப்படுகிறது. 

00:06:19.588 --> 00:06:25.834
எனவே நீங்கள் பழைய மதிப்பை M இன் புதிய மதிப்பில் நகலெடுக்க முடியாது, ஏனெனில் நீங்கள் அதை இழந்துவிட்டீர்கள். 

00:06:25.834 --> 00:06:35.400
நீங்கள் இரண்டு கப் தண்ணீரை வைத்துள்ளீர்கள், அவற்றின் உள்ளடக்கத்தை பரிமாறிக்கொள்ள விரும்புகிறீர்கள். இப்போது நீங்கள் இடம் உருவாக்க வேண்டும். 

00:06:36.960 --> 00:06:39.832
அதை விட்டுவிடுவதற்கு முன் இதை அதில் ஊற்ற முடியாது. 

00:06:39.832 --> 00:06:42.571
அதை நீ விட்டால், அதை அதில் ஊற்ற முடியாது. 

00:06:42.571 --> 00:06:43.899
எனவே நீங்கள் ஒரு மூன்றாவது கப் பொதுவாக வேண்டும். 

00:06:43.899 --> 00:06:46.411
எனவே நீங்கள் முதலில் இதை இங்கு மாற்ற வேண்டும் மற்றும் அதை பாதுகாப்பாக வைக்க வேண்டும். 

00:06:46.411 --> 00:06:49.703
பின்னர் நீங்கள் அதை அங்கு மாற்ற வேண்டும் மற்றும் பின்னர் நீங்கள் அதை மீண்டும் நகலெடுக்க வேண்டும். 

00:06:49.703 --> 00:06:54.140
எனவே, பெரும்பாலான நிரலாக்க மொழிகள் இரண்டு மதிப்புகளை பரிமாறிக்கொள்ளும் வழியைக் காட்டுகின்றன. 

00:06:54.140 --> 00:06:59.354
ஆனால் பைதான் ஒரு அழகான அம்சத்தைக் கொண்டுள்ளது, இதன் மூலம் நீங்கள் ஒரு ஜோடி மதிப்புகளை எடுத்து அவற்றை ஒரே நேரத்தில் புதுப்பிக்க முடியும். 

00:06:59.394 --> 00:07:08.634
குறிப்பாக, இந்த ஒரே நேரத்தில் புதுப்பித்தல், இந்த கூடுதல் தற்காலிக இடத்தை ஒரு மதிப்பைப் பிரிப்பதற்கு கவலைப்படாமல் மதிப்புகளை பரிமாறிக்கொள்ள அனுமதிக்கிறது. 

00:07:08.634 --> 00:07:16.565
எப்படியிருந்தாலும், இந்த முதல் பகுதி நாம் கருதிக் கொண்டிருக்கும் இந்த நிபந்தனை பூர்த்தி செய்யப்படுவதை உறுதி செய்வதே ஆகும். 

00:07:16.565 --> 00:07:19.620
இப்போது நாம் அல்போரிதம் மையம் வந்து. 

00:07:19.620 --> 00:07:33.480
எனவே N M ஐப் பிரிக்கினால், அது M இன் மீதமுள்ள பகுதி N ஐப் பிரிக்கினால் 0 ஆகும், பின்னர் N ஐ GCD என்று கண்டுபிடித்தோம், பின்னர் N ஐ திருப்பித் தருகிறோம். 

00:07:34.120 --> 00:07:35.440
கடைசி ஸ்லைடு. 

00:07:35.440 --> 00:07:47.280
இப்போது நாம் N இன் GCD மற்றும் வேறுபாடு M. - N ஐ கணக்கிடப் போகிறோம். எனவே நாம் N மற்றும் N - N இன் GCD ஐ கணக்கிட விரும்புகிறோம். எனவே நாம் கணக்கிட 

00:07:48.640 --> 00:07:52.820
M. - N. என வேறுபாடு. இதை நாம் பயன்படுத்தலாம். 

00:07:52.820 --> 00:08:02.240
ஆனால் M என்றால் 97 எனவும், N என்றால் 2 எனவும் சொல்லலாம், வித்தியாசம் 95 ஆக இருக்கும். 

00:08:03.400 --> 00:08:08.922
N ஐ விட பெரியது. நாம் இந்த செயல்பாட்டை பெரிய எண் விட பெரிய முதல் எண் கொண்ட ஒரு செயல்பாட்டை அழைக்க விரும்புகிறோம். 

00:08:08.922 --> 00:08:12.780
எனவே, நமது செயல்பாடு இதை கவனித்துக்கொள்ளும் என்றாலும், இதை நாம் உறுதி செய்வோம். 

00:08:12.780 --> 00:08:23.109
நாம் செய்ய விரும்புவது, நாம் N மற்றும் M - N உடன் GCD ஐ அழைக்க வேண்டும், அதற்கு பதிலாக, நாம் N இன் அதிகபட்ச மதிப்பு மற்றும் வித்தியாசம் முதல் வாதம் மற்றும் N இன் குறைந்தபட்ச மதிப்பு மற்றும் வித்தியாசம் கொண்ட GCD ஐ அழைப்போம். 

00:08:23.109 --> 00:08:28.180
எனவே, இரண்டு மதிப்புகளில் பெரியது முதலில், மற்றும் சிறியது முதலில் செல்லும் என்பதை உறுதிப்படுத்தும். 

00:08:28.220 --> 00:08:33.781
இந்த GCD எதுவாக இருந்தாலும், இந்த செயல்பாடு என்னவாக இருக்கும் என்பதை புதிய GCD திரும்பப் பெறுகிறது. 

00:08:33.781 --> 00:08:42.460
எனவே இது நாம் பின்னர் பார்ப்போம் என்பதற்கு ஒரு எடுத்துக்காட்டு, இது மிகவும் இயற்கையானது, இது மீளுருவாக்கம் என்று அழைக்கப்படுகிறது. 

00:08:43.060 --> 00:08:52.878
அதாவது, நாம் ஒரு சிறிய பிரச்சினையை தீர்த்து, அந்த பதிலைப் பயன்படுத்தி, இந்த வழக்கில் நேரடியாக, நமது தற்போதைய பிரச்சினையின் பதிலைப் புகாரளிக்கப் போகிறோம். 

00:08:52.878 --> 00:09:06.496
எனவே நாம் M மற்றும் N இன் GCD ஐ தீர்க்க விரும்புகிறோம். ஆனால் M மற்றும் N இன் GCD, அதற்கு பதிலாக நாம் N மற்றும் M - N இன் GCD ஐ தீர்க்கிறோம். 

00:09:06.536 --> 00:09:11.881
எனவே நாம் சிறிய மதிப்புகளுடன் செயல்பாட்டை அழைத்து பின்னர் அதை திரும்ப. 

00:09:11.881 --> 00:09:16.233
இப்போது நீங்கள் ஒரு மறுபரிசீலனை அழைப்பு செய்ய இந்த போன்ற, அது ஒரு நேரம் சுழற்சி போன்றது. 

00:09:16.233 --> 00:09:17.996
அது மீண்டும் செயல்பாட்டை அழைக்கும். 

00:09:17.996 --> 00:09:20.474
அது ஒரு சிறிய செயல்பாட்டைக் கொண்டு வரும். 

00:09:20.474 --> 00:09:31.390
நீங்கள் இந்த வரிசையில் GCD தொடர்ந்து GCD அழைக்கும் போது, வேறு மதிப்புகள் ஒரு முடிவற்ற முன்னேற்றம் ஒரு நிறுத்த புள்ளி இல்லாமல் பெற முடியாது என்று உறுதி செய்ய வேண்டும். 

00:09:31.430 --> 00:09:40.300
எனவே, முறையாக, நாம் உறுதி செய்ய வேண்டும் என்ன இந்த உத்தரவாதம் கண்டுபிடிக்க ஒரு N பிளவு N. எனவே இங்கே GCD. 

00:09:41.980 --> 00:09:43.853
உண்மையில் தன்னை அழைத்து இல்லாமல் வெளியே செல்கிறது. 

00:09:43.853 --> 00:09:47.262
எனவே, நாம் இறுதியில் இந்த நிலைக்கு வருவதை உறுதி செய்ய வேண்டும். 

00:09:47.262 --> 00:09:54.071
இப்போது நீங்கள் இங்கே பார்த்தால் என்ன நடக்கிறது என்பது GCD க்கு அனுப்பப்படும் மதிப்புகள் சிறியதாகவும் சிறியதாகவும் மாறி வருகின்றன. 

00:09:54.071 --> 00:09:56.222
இப்போது நாம் M. - N. க்கு என்ன பெற முடியும்? 

00:09:56.222 --> 00:09:57.717
அது என்ன மதிப்பு? 

00:09:57.717 --> 00:09:58.960
அது பூஜ்ஜியமாக இருக்க முடியுமா? 

00:09:58.960 --> 00:10:10.508
M, - N என்றால் N. M என்றால் N. M என்றால் N. M என்றால் N. M என்பது N. 

00:10:10.508 --> 00:10:11.843
எனவே அது பூஜ்ஜியமாக இருக்க முடியாது. 

00:10:11.843 --> 00:10:13.542
எனவே அது குறைந்தது ஒரு இருக்க வேண்டும். 

00:10:13.542 --> 00:10:17.478
எனவே நாம் இந்த செயல்பாடு M. - N என்று அழைக்கும் போது குறைந்தது ஒன்று. 

00:10:17.478 --> 00:10:21.589
மறுபுறம், ஒவ்வொரு முறையும் நாம் சிறிய மதிப்புகளை அடைகிறோம். 

00:10:21.589 --> 00:10:25.443
எனவே நாம் சில மதிப்புடன் தொடங்குகிறோம் மற்றும் M. -N. தொடர்ந்து குறைகிறது. 

00:10:25.443 --> 00:10:27.990
அது உண்மையில் ஒரு அடையும் போது என்ன நடக்கும்? 

00:10:27.990 --> 00:10:31.700
அது ஒரு எண் வரை சென்றால், மற்ற எண்களை நாம் பிரிக்கலாம். 

00:10:31.700 --> 00:10:37.330
எனவே M சதவீதம் N அல்லது M N ஆல் பிரிக்கப்பட்டால், மீதமுள்ளவை 1 ஆக இருக்கும், அது 0 ஆக இருக்கும். 

00:10:37.330 --> 00:10:39.420
எனவே அது உங்கள் பூஜ்ஜியத்தை திருப்பித் தருகிறது. 

00:10:39.420 --> 00:10:52.180
வேறு வார்த்தைகளில் கூறுவதானால், இந்த செயல்பாடு, நாம் செயல்பாட்டை அழைக்கும் எண்ணிக்கையை குறைக்க தொடர்ந்து இருப்பதால், இறுதியில் GCD முடிவடையும் ஒரு அழைப்பை உருவாக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:10:55.020 --> 00:10:57.199
எனவே இது மிகவும் முக்கியமானது, பின்னர் இதைப் பற்றி பேசுவோம். 

00:10:57.199 --> 00:11:06.389
ஆனால் நீங்கள் இந்த வகை செயல்பாட்டை எழுதும்போது, நீங்கள் எங்கிருந்து தொடங்குகிறீர்களோ, அங்கு ஒரு முடிவான எண்ணிக்கையிலான படிகளில் அடையப்படும் ஒரு அடிப்படை வழக்கு இருப்பதை உறுதி செய்ய வேண்டும். 

00:11:06.429 --> 00:11:19.826
எனவே இது யூகிளிட்டின் அல்காரிதம், முதல் பதிப்பு, அங்கு நாம் M மற்றும் N இன் GCD, N மற்றும் M கழித்து N இன் GCD மாற்ற முடியும் என்று கவனிக்கிறோம். இந்த குறிப்பிட்ட நடைமுறைப்படுத்தலில் நாம் பார்த்தது இரண்டு விஷயங்கள். 

00:11:19.826 --> 00:11:21.304
ஒன்று, மூன்று விஷயங்கள். 

00:11:21.304 --> 00:11:23.872
ஒரு கருத்தை நமது குறியீட்டில் எவ்வாறு வைக்க வேண்டும் என்பதை நாம் பார்த்திருக்கிறோம். 

00:11:23.872 --> 00:11:30.042
பைதான் இரண்டு மாறிகளை ஒரே நேரத்தில் புதுப்பிக்கும் வகையில் செயல்படுகிறது என்பதை நாம் கண்டிருக்கிறோம். 

00:11:30.042 --> 00:11:39.833
எனவே M கோமா N M கோமா N க்கு சமம். மேலும் தற்போதைய செயல்பாட்டை கணக்கிட அதே செயல்பாட்டை புதிய வாதங்களுடன் பயன்படுத்தலாம் என்பதை நாம் கண்டோம். 

00:11:39.833 --> 00:11:49.263
எனவே M மற்றும் N இன் GCD ஐ கணக்கிட, நான் வேறு சில மதிப்புகளின் GCD ஐ கணக்கிட வேண்டும் என்று சொல்ல எந்த பிரச்சனையும் இல்லை, மற்றும் அந்த பதிலை என் பதிலை திரும்ப பயன்படுத்த. 

00:11:49.263 --> 00:11:57.757
எனவே இந்த அல்காரிதம் ஒரு வித்தியாசமான பதிப்பைப் பார்ப்போம், அங்கு நாம் ஒரு சைட் சுழற்சியால் மீள் அழைப்பை மாற்றுகிறோம். 

00:11:57.757 --> 00:12:06.175
எனவே நாம் எமது நிலையான வழிமுறைகளின் கடைசி பதிப்பில் M புள்ளி N முதல் 1 வரை குறைந்தது இருந்து பின் எண்ணும் போது பார்த்தோம். 

00:12:06.575 --> 00:12:10.650
எனவே நான் 0 க்கு மேல் இருக்கிறேனா என்று தொடர்ந்து சரிபார்த்து, தொடர்ந்து குறைந்து கொண்டோம். 

00:12:10.650 --> 00:12:13.281
சரி, இங்கே நாம் ஒரு சில நேரம் பயன்படுத்தி மீள்வினை செய்கிறோம். 

00:12:13.281 --> 00:12:20.168
முதலில் நான் கவனிக்க வேண்டியது, நான் ஒரு வரி, இறுதியில் ஒரு தனி வரிசையில் இருந்த இந்த கருத்தை நகர்த்தியுள்ளேன். 

00:12:20.168 --> 00:12:27.340
எனவே பைதான் என்ன சொல்கிறது என்றால், ஒரு ஹாஷ் இருந்தால், மற்ற வரிகளை புறக்கணிக்க முடியும். 

00:12:27.340 --> 00:12:31.307
எனவே இந்த வரி படித்து, அது ஒரு செல்லுபடியாகும் நிபந்தனை மற்றும் பின்னர் அது ஒரு ஹாஷ் பார்க்கிறது. 

00:12:31.307 --> 00:12:35.720
எனவே, இந்த அறிக்கை Python நிரலில் செயல்படும் போது ஒரு பகுதியாக இல்லை. 

00:12:35.720 --> 00:12:39.203
ஒரு கருத்து தனி வரிசையில் இருக்கலாம் அல்லது ஒரு வரிசையின் முடிவாக இருக்கலாம். 

00:12:39.203 --> 00:12:46.758
நிச்சயமாக, நீங்கள் Python செயல்படுத்த வேண்டும் என்று எதையும் இந்த பிறகு வைக்க முடியாது என்பதை நினைவில் கொள்ள வேண்டும், ஏனெனில் அது ஒரு ஹாஷிங் பார்க்க ஒருமுறை, மற்ற வரி புறக்கணிக்கப்படும். 

00:12:46.758 --> 00:12:48.340
எனவே அது ஒரு வரி முடிவாக இருக்க முடியாது. 

00:12:48.340 --> 00:12:49.823
மீதமுள்ள வரிசையை புறக்கணிக்கப் போகிறோம். 

00:12:49.823 --> 00:12:51.205
எனவே அது ஒரு வரிசையின் நடுவில் இருக்க முடியாது. 

00:12:51.205 --> 00:12:53.340
ஒரு வரிசையின் நடுவில் ஒரு கருத்தை வைக்க முடியாது. 

00:12:53.340 --> 00:12:57.200
ஆனால் நீங்கள் அதை ஒரு தனி வரிசையில் வைக்கலாம், அல்லது நீங்கள் அதை ஒரு வரி இறுதியில் வைக்கலாம். 

00:12:57.200 --> 00:12:59.816
எப்படியோ, இது எங்கள் கருத்து, முன்பு போல. 

00:12:59.816 --> 00:13:04.441
எனவே, இதுவரை நான் கருத்துகளை மாற்றியமைத்ததைத் தவிர வேறு எந்த மாற்றமும் இல்லை. 

00:13:04.441 --> 00:13:09.316
இப்போது நாம் ஒரு கணக்கீட்டைச் செய்ய வேண்டிய கட்டத்தில் இருக்கிறோம். 

00:13:09.316 --> 00:13:17.987
எனவே, இந்த கட்டத்தில், N M ஐப் பிரிக்கும் N ஐ நாம் கண்டால், நாம் முடித்து N ஐ நேரடியாக திருப்பிக் கொடுக்கலாம். எனவே, நமது மறுபரிசீலனைக் குறியீடு இதைச் செய்யும். 

00:13:17.987 --> 00:13:21.340
நாம் இதுபோன்ற Nஐ கண்டுபிடிக்கவில்லை என்றால், நாம் சில வேலைகளைச் செய்ய வேண்டும். 

00:13:21.340 --> 00:13:26.806
எனவே M பிரிக்கப்பட்ட N உண்மையில் ஒரு மீதமுள்ள உற்பத்தி செய்கிறதா என்பதை சரிபார்க்க வேண்டும். 

00:13:26.806 --> 00:13:31.482
எனவே இந்த அடையாளம் இந்த உச்சரிப்பு அடையாளத்துடன் எழுதப்பட்டுள்ளது. 

00:13:31.482 --> 00:13:35.038
எனவே இது கணித சமம் அல்ல. 

00:13:35.038 --> 00:13:40.187
இந்த இரட்டை சமம் என்பது சமத்துவத்தின் கணித அடையாளமாக நாம் பயன்படுத்தியதாக நினைவில் கொள்ளுங்கள். 

00:13:40.187 --> 00:13:43.010
எனவே இது சமமாக இல்லை என்பதற்கான அடையாளம். 

00:13:43.010 --> 00:13:49.700
எஞ்சியிருக்கும் வரை, எஞ்சியிருக்கும் எண் M பிரிக்கப்பட்டால் N என்பது 0 ஆகாது, நாம் முன்பு செய்ததைச் செய்வோம். 

00:13:49.700 --> 00:13:59.173
நாம் வித்தியாசத்தை கணக்கிட்டு M ஐ இரண்டு மதிப்புகளில் அதிகபட்சமாகவும், N ஐ இரண்டு மதிப்புகளில் சிறியதாகவும் மாற்றுவோம். 

00:13:59.173 --> 00:14:11.340
எனவே நாம் ஒரு ஜோடி M, N அதன் GCD நாம் M. N விட பெரியது என்று வைத்து கண்டுபிடிக்க முயற்சி. ஒவ்வொரு அடியிலும், நாம் N மற்றும் வித்தியாசத்தின் பெரிய M மற்றும் N மற்றும் வித்தியாசத்தின் சிறிய N மற்றும் சிறிய N மூலம் மாற்ற. 

00:14:11.340 --> 00:14:14.071
எனவே, இந்த மறுபரிசீலனை குறியீட்டில் நாம் செய்வது இதுதான். 

00:14:14.071 --> 00:14:16.803
நாம் சொல்லும் போதே நாம் கணக்கிடும் என்று GCD என்று. 

00:14:16.803 --> 00:14:41.828
எனவே இந்த போது சுழற்சியில், நாம் M, N இன் கணக்கீட்டை M, N இன் GCD உடன் மாற்ற வேண்டும் என்று சொல்கிறோம், N இன் அதிகபட்ச N வேறுபாடு மற்றும் குறைந்தபட்ச N இன் கணக்கீட்டை N உண்மையில் N ஐப் பிரிக்கும் நிலை வரும் வரை இதைச் செய்யத் தொடங்குவோம். நாம் சொன்னது போலவே, மறுபரிசீலனை வழக்கில், ஒரு எல்லை வழக்கு இருக்கும், இதில் மிக மோசமான வழக்கில் N 1 ஆக மாறும், 1 எல்லாவற்றையும் பிரிக்கும். 

00:14:41.828 --> 00:14:44.362
அதேபோல், இங்கே வித்தியாசம் தொடர்ந்து குறைந்து கொண்டே இருக்கும். 

00:14:44.362 --> 00:14:48.363
வித்தியாசம் பூஜ்ஜியமாக இருக்க முடியாது, ஏனெனில் வித்தியாசம் பூஜ்ஜியமாக இருந்தால், அது பிரிக்கப்படும். 

00:14:48.363 --> 00:14:52.710
எனவே வித்தியாசம் அதிகபட்சம் 1 ஆக குறைந்து 1 ஆக இருக்கும் போது முடிந்துவிடும். 

00:14:52.710 --> 00:14:57.408
எனவே இது நாம் முன்பு எழுதிய அதே மறுபரிசீலனை செயல்பாட்டின் ஒரு சமகால பதிப்பு. 

00:14:57.408 --> 00:15:06.785
எனவே, அது உதவுகிறது என்றால், நீங்கள் இந்த பக்கங்களுடன் பார்க்கலாம் மற்றும் மறுபரிசீலனை செய்யும் பொருள் என்ன செய்கிறது மற்றும் இடைநிலை என்ன செய்கிறது என்பதை புரிந்து கொள்ள முயற்சி செய்யலாம் மற்றும் அவர்கள் அடிப்படையில் அதே விஷயத்தை செய்கிறார்கள் என்பதை பார்க்கலாம். 

00:15:06.785 --> 00:15:19.744
இந்த மறுபடியும் முடிவடையும் என்ற கருத்து, நாம் முன்பு கூறியது போலவே உள்ளது. நீங்கள் ஒரு பிட் எழுதும்போது, நீங்கள் ஒரு பிட் தவறான பிட் நிலைக்கு முன்னேறுவதை உறுதி செய்ய வேண்டும். 

00:15:19.744 --> 00:15:36.340
எனவே நீங்கள் கவனமாக இல்லாவிட்டால் மற்றும் நீங்கள் அதை நிறுத்த உத்தரவாதம் வாதங்கள் மூலம் பயன்படுத்தி இல்லை என்றால், மீண்டும் மீண்டும் எப்போதும் நீடிக்கும் போலவே, நீங்கள் முன்னேற்றம் செய்யவில்லை என்றால் இடைவெளி நிலை இறுதியில் தவறாக மாறும் உறுதி செய்ய. 

00:15:41.340 --> 00:15:43.054
எனவே நாம் இதை விட சிறப்பாக செய்ய முடியும். 

00:15:43.054 --> 00:15:46.787
எனவே, ஒரு கை மரணதண்டனை செய்வதன் மூலம் ஒரு பிரச்சினையை பார்க்கலாம். 

00:15:46.787 --> 00:15:52.537
எனவே நாம் 101 மற்றும் 2 இன் GCD போன்ற எண்களுடன் தொடங்குவோம் என்று வைத்துக்கொள்வோம். 

00:15:52.537 --> 00:16:00.944
பின்னர் நமது அல்காரிதம், இது இப்போது வித்தியாசத்தின் gcd ஆகவும் n ஆகவும் மாற வேண்டும் என்று கூறுகிறது. 

00:16:00.944 --> 00:16:04.966
வித்தியாசம் 99 ஆகும், எனவே நமக்கு 99 மற்றும் 2 இருக்கும். 

00:16:04.966 --> 00:16:09.167
பின்னர் இது 97 மற்றும் 2 மற்றும் பலவற்றின் GCD ஆக மாறும். 

00:16:09.167 --> 00:16:18.661
எனவே நாம் 50 படிகள் தொடர்ந்து செய்ய வேண்டும். பின்னர் இறுதியில் நாம் 5 மற்றும் 2 மற்றும் பின்னர் 3 மற்றும் 2 ஆகியவற்றின் GCD ஆக வரும். 

00:16:18.661 --> 00:16:24.081
இப்போது நாம் வித்தியாசத்தை கணக்கிடுகிறோம், நாம் 2 மற்றும் 1 க்ஜிடி கிடைக்கும். 

00:16:24.081 --> 00:16:26.856
எனவே இப்போது வித்தியாசம் குறைவாகிவிடும். 

00:16:26.856 --> 00:16:30.482
இந்த நேரத்தில் நாம் பதிலை 1 என்று தெரிவிப்போம். 

00:16:30.482 --> 00:16:35.090
எனவே, 101 மற்றும் 2 இன் GCD செய்ய சுமார் 50 படிகள் ஆகும். 

00:16:35.090 --> 00:16:42.506
எனவே, இந்த புத்திசாலித்தனமான அணுகுமுறையை விமர்சிப்பது, எண்களே நேரத்தை ஒத்ததாக எடுக்கும். 

00:16:42.506 --> 00:16:47.898
நாம் m மற்றும் n எண்களை சேர்த்தால், நாம் m மற்றும் n இன் குறைந்தபட்சத்திற்கு சமமான பொதுவான படிகளின் எண்ணிக்கையை எடுப்போம். 

00:16:47.898 --> 00:16:52.592
இப்போது நாம் குறைந்தபட்சத்தை விட பெரிய படிகளை எடுத்து வருகிறோம், ஏனெனில் குறைந்தபட்சமானது 2 ஆகும். 

00:16:52.592 --> 00:16:59.603
நாம் கணக்கிடும் காரணிகள் என்றால், 2 என்ற ஒரே காரணி 2 என்று நாம் கூறலாம், அது 101 என்ற காரணி அல்ல, நாம் ஆரம்பத்தில் நிறுத்தப்பட்டிருப்போம். 

00:16:59.603 --> 00:17:04.901
எனவே இது சில சந்தர்ப்பங்களில் நமது முந்தைய வழிமுறைகளை விட மோசமாக நடக்கிறது. 

00:17:04.901 --> 00:17:07.931
எனவே, இங்கே ஒரு சிறந்த கவனிப்பு உள்ளது. 

00:17:07.931 --> 00:17:10.870
எனவே n. m. ஐப் பிரிக்கவில்லை என்று வைத்துக்கொள்வோம். 

00:17:10.870 --> 00:17:17.735
வேறு வார்த்தைகளில் கூறுவதானால், m. ஐ. n. ஆல் பிரிக்கினால், எனக்கு ஒரு விகிதமும் மீதமுள்ள விகிதமும் கிடைக்கும். 

00:17:17.735 --> 00:17:22.885
எனவே நான் n என எழுத முடியும். q x, n, + r அங்கு q என்பது குவாசகம் மற்றும் r என்பது மீதமுள்ள. 

00:17:22.885 --> 00:17:26.006
நீங்கள் உயர்நிலைக் கணிதத்தில் இருந்து இந்த சொற்களை நினைவில் வைத்திருக்கலாம். 

00:17:26.006 --> 00:17:32.188
எனவே n. m. q முறைக்கு சென்று, மீதமுள்ள r ஐ விட்டு விடுகிறது, r. n. ஐ விட சிறியதாக இருப்பதை உறுதி செய்கிறோம். 

00:17:32.188 --> 00:17:35.451
இல்லையெனில் அது ஒரு முறை செல்லும், அது q + 1 ஆக இருக்கும். 

00:17:35.451 --> 00:17:37.673
எனவே எஞ்சியுள்ள எண் r. n. ஐ விட சிறியதாக உள்ளது. 

00:17:37.673 --> 00:17:45.095
உதாரணமாக 7 எனில் 3ல் பிரிக்க விரும்பினால், இது 2 x 3 + 1 ஆகும். 

00:17:45.095 --> 00:17:47.731
எனவே இது எனது குவாசிண்டாகும், இது எனது மீதமுள்ளதாக இருக்கும். 

00:17:47.731 --> 00:17:53.090
முக்கியமானது என்னவென்றால், மீதமுள்ளவை நான் பகிர்ந்து கொள்ளும் அளவை விட எப்போதும் சிறியவை. 

00:17:53.090 --> 00:17:59.845
இப்போது நாம் முன் போல் நாம் m மற்றும் n இருவரும் ஒரு பொதுவான வகுப்பாளர் என்று வைத்துக்கொள்வோம். 

00:17:59.845 --> 00:18:10.756
வேறு வார்த்தைகளில் கூறுவதானால், முன்பு நாம் m தன்னை ஒரு முறை d மற்றும் n என b முறை d என எழுதலாம். சில எண்களுக்கு a மற்றும் b ஏனெனில் m என்பது d இன் பலமாகும், எனவே n ஆகும். 

00:18:10.756 --> 00:18:22.803
எனவே இதை மேலே உள்ள சமன்பாட்டில் இணைத்தால், m என்பது a x d என்பது q x n ஆகும். b x d plus r. 

00:18:22.803 --> 00:18:27.598
எனவே d இடது மற்றும் d வலது ஒரு பகுதியை பிரிக்கின்றன. 

00:18:27.598 --> 00:18:32.148
எனவே d க்கு r ஐப் பிரிக்க வேண்டும் என்று நீங்கள் எளிதாக உங்களை நம்பலாம். 

00:18:32.148 --> 00:18:47.862
எனவே, இதைப் பற்றி யோசிக்க ஒரு வழி, நீங்கள் விரும்பினால், நான் இந்த எண் m ஐக் கொண்டுள்ளேன், அதை n இன் அலகுகளாக பிரிக்க முடியும், பின்னர் இங்கே ஒரு சிறிய பிட் உள்ளது. 

00:18:47.862 --> 00:18:54.081
மற்றபடி, d, d எல்லாவற்றையும் சமமாகப் பிரிக்கிறது. 

00:18:54.081 --> 00:18:57.565
எனவே இது இந்த தொகுதிகளை ஒவ்வொன்றையும் பிரிக்கின்றது. 

00:18:57.565 --> 00:19:00.473
அது முழு விஷயத்தையும் பிளவுபடுத்துகிறது. 

00:19:00.473 --> 00:19:08.316
ஆனால் இப்போது நான் d உடன் தொடரினால், அது இந்த எல்லையில் நிறுத்தப் போகிறது, ஏனென்றால் d n ஐப் பிரிக்கவும். 

00:19:08.316 --> 00:19:12.045
எனவே d என்பது இந்த கடைசி பிட் ஆகும். 

00:19:12.045 --> 00:19:17.857
எனவே, நாம் எளிதாக r என்பது d இன் பெருக்காக இருக்க வேண்டும் என்று வாதிடலாம். 

00:19:17.857 --> 00:19:20.753
எனவே d க்கு r க்கும் பிளவு வேண்டும். 

00:19:20.753 --> 00:19:28.179
எனவே d m மற்றும் d n ஐப் பிரித்தால், d மீதமுள்ள m. ஐ. n ஆல் பிரிக்க வேண்டும். 

00:19:28.179 --> 00:19:33.959
நாம் முன்பு பார்த்தபடி, வித்தியாசத்தை, எனவே கடைசியாக நாம் சொல்லியிருந்தோம். நாம் பார்க்க வேண்டும் வித்தியாசம் m பிரிக்கப்பட்ட n. 

00:19:33.959 --> 00:19:42.361
இப்போது நாம் சொல்கிறோம், மீதமுள்ள m, ஐ, n மற்றும் d க்கு பிரிக்க வேண்டும், அது n மற்றும் இந்த மீதமுள்ள GCD ஆக இருக்கும். 

00:19:42.361 --> 00:19:52.351
எனவே இது ஒரு மேம்படுத்தப்பட்ட மற்றும் நீங்கள் முன்மொழிய முடியும் என்று அல்கோரிதம் உண்மையான பதிப்பு ஆகும், வித்தியாசம் ஒன்று, ஆனால் மீதமுள்ள ஒன்று. 

00:19:52.351 --> 00:19:56.885
m மற்றும் n இன் GCD ஐ. m. n ஐ விட பெரியது என்று கருதிக் கொள்ளுங்கள். 

00:19:56.885 --> 00:19:59.135
இப்போது n. m. ஐப் பிரித்தால், நாம் முடித்துவிட்டோம். 

00:19:59.135 --> 00:20:00.673
நாம் n ஐ திருப்பிக் கொடுக்கிறோம். 

00:20:00.673 --> 00:20:03.340
இது முன்னதாக இருந்தது போலவே உள்ளது. 

00:20:03.340 --> 00:20:06.673
இல்லையெனில், R தான் மீதமுள்ளதாக இருக்கட்டும். 

00:20:06.673 --> 00:20:17.911
n என்ற மதிப்பை n என்ற எண்ணில் பிரிக்கினால் மீதமுள்ளதைப் பெற்று, n மற்றும் r என்ற GCD ஐ திருப்பித் தருகிறோம். 

00:20:17.911 --> 00:20:20.362
எனவே இந்த நிலை குறித்து நாம் கவலைப்பட வேண்டியதில்லை. 

00:20:20.362 --> 00:20:25.909
நாம் வித்தியாசத்திற்காக செய்ததைப் போல அதிகபட்ச மற்றும் குறைந்தபட்சத்தை எடுக்க வேண்டியதில்லை. ஏனென்றால் மீதமுள்ளது n க்கும் குறைவாக இருக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:20:25.909 --> 00:20:28.956
இல்லையெனில் n இன்னும் ஒரு முறை செல்லும். 

00:20:28.956 --> 00:20:39.202
எனவே, முன்னதாக, நாம் ஒரு மிக எளிய மறுபரிசீலனை செயல்படுத்த வேண்டும், மேலும் இது மிகவும் எளிமையானது, ஏனெனில் நாம் இந்த அதிகபட்ச குறைந்தபட்ச வணிக செய்ய வேண்டியதில்லை. 

00:20:39.202 --> 00:20:46.340
எனவே, முந்தைய முறை போல, நாம் முதலில் m மற்றும் n ஐ திருப்புகிறோம், அவை சரியான வரிசையில் இல்லை என்றால். 

00:20:46.340 --> 00:20:52.680
பின்னர் n m ஐப் பிரிக்கினால், மீதமுள்ள m. n ஐப் பிரிக்கினால், நாம் n ஐத் திருப்பிக் கொடுத்து முடிக்கிறோம். 

00:20:52.680 --> 00:20:56.294
இல்லையெனில், n மற்றும் மீதமுள்ளவற்றின் GCD ஐ திருப்பித் தருகிறோம். 

00:20:56.294 --> 00:20:58.067
எனவே இதுவே மீதமுள்ளவை. 

00:20:58.067 --> 00:21:01.057
மீதமுள்ள எண் எப்போதும் n க்குக் குறைவாக இருப்பதை நினைவில் கொள்ளுங்கள். 

00:21:01.057 --> 00:21:07.060
எனவே நாம் அதை திருப்பி, அதிகபட்சமாக எடுத்துக்கொள்ள கவலைப்பட வேண்டியதில்லை. 

00:21:07.060 --> 00:21:17.452
முந்தைய வழக்கு போல, நாம் இந்த முழு விஷயத்தையும் செய்ய முடியும் ஒரு y பயன்படுத்தி அதை செய்ய பதிலாக ஒரு மறுபரிசீலனை விஷயம். 

00:21:17.452 --> 00:21:21.506
எனவே நாம் முதலில் m மற்றும் n ஐ மாற்றுகிறோம், அவை தவறான வரிசையில் இருந்தால். 

00:21:21.506 --> 00:21:29.340
பின்னர் மீதமுள்ள எண் 0 ஆக இல்லாத வரை, நாம் m ஐ இரண்டு எண்களில் சிறிய எண் மூலம் மாற்றுவோம். n ஐ மீதமுள்ள எண் மூலம் மாற்றுவோம். 

00:21:29.340 --> 00:21:34.249
இப்போது நாம் இந்த மீதமுள்ள அல்லது 0 செல்லும் என்று உத்தரவாதம் ஆனால் அது 0 செல்லும் என்றால் அது பிளவு என்று பொருள். 

00:21:34.249 --> 00:21:39.564
அல்லது அது 0 ஆக இல்லையென்றால், எஞ்சிய எண் தொடர்ந்து குறைந்து கொண்டே இருக்கும், ஏனென்றால் அது நாம் தொடங்கிய எண்ணை விட எப்போதும் சிறியதாக இருக்கும். 

00:21:39.564 --> 00:21:42.928
அது தொடர்ந்து குறைந்து 1 ஆக இருக்கும். அடுத்த கட்டத்தில் அது பிளவுபடும். 

00:21:42.928 --> 00:21:45.218
இறுதியாக, நாம் குறைந்தது 1 திரும்ப வேண்டும். 

00:21:45.218 --> 00:21:58.565
நாம் பார்த்த உதாரணத்திற்கு திரும்பிச் சென்றால், GCD 101.2 ஐ பார்த்தால், வித்தியாசத்தை பயன்படுத்தி அதை செய்தால், நாம் சுமார் 50 படிகளை எடுத்தோம் என்று சொன்னோம். 

00:21:58.565 --> 00:22:03.409
இப்போது நாம் மீதமுள்ளதைச் செய்தால், r என்பது 1 ஆகும் என்பதை நான் நேரடியாகக் கண்டுபிடிப்பேன். 

00:22:03.409 --> 00:22:06.753
நான் 101 ஐ 2 ஆகப் பிரித்தால், அது 50 முறை மீதமுள்ள 1 ஆகப் போகிறது. 

00:22:06.753 --> 00:22:10.329
எனவே ஒரு படி, நான் GCD 2, இன் 1 மற்றும் நான் 1 கிடைக்கும். 

00:22:10.329 --> 00:22:19.952
எனவே, நீங்கள் காட்ட முடியும் என்னவென்றால், மீதமுள்ள இந்த பதிப்பு உண்மையில் எண்களின் எண்ணிக்கையுடன் விகிதமான நேரத்தை எடுக்கும். 

00:22:19.952 --> 00:22:24.788
எனவே நான் ஒரு 100 இலக்க எண்ணைக் கூறினால், அது சுமார் 100 படிகள் எடுக்கும். 

00:22:24.788 --> 00:22:33.047
உதாரணமாக, ஒரு பில்லியன் எண் இருந்தால், ஒரு பில்லியன் 10 முதல் 9 வரை இருக்கும், அது 10 இலக்கங்கள் இருக்கும். 

00:22:33.047 --> 00:22:40.731
நான் ஒரு முட்டாள்தனமான வழிமுறையை செய்தால், அது ஒரு பில்லியன் படிகளின் எண்ணிக்கையை ஒரு பில்லியன் படிகள் என்ற எண்ணிக்கையுடன் ஒரு நிலையான முறை எடுக்கும். 

00:22:40.731 --> 00:22:50.340
ஆனால் இந்த அல்காரிதம், 10 முதல் 9 வரை 10 இலக்கங்கள் இருப்பதால், அது 10 படிகள் மட்டுமே எடுக்கும் என்று கூறுவதால், 

00:22:50.340 --> 00:22:53.911
எனவே இந்த பதிப்பில் செயல்திறன் கணிசமாக மேம்படுத்தப்பட்டுள்ளது. 

00:22:53.911 --> 00:22:57.638
எனவே இந்த பாடத்தை நாம் செய்யும் போது இதைப் பற்றி பேசலாம். 

00:22:57.638 --> 00:23:00.921
எனவே இந்த பாடத்திட்டம் நிரலாக்க, தரவு அமைப்பு மற்றும் வழிமுறைகள் பற்றி. 

00:23:00.921 --> 00:23:11.457
எனவே, ஒரு திட்டத்தில் ஒரு குறிப்பிட்ட யோசனையை விரிவுபடுத்துவதற்கான சிறந்த வழி என்னவென்று நிரலாக்கப் பகுதியில் பேசப்படுகிறது, அது சரியானது மற்றும் படிக்கவும் பராமரிக்கவும் எளிதானது என்பதை உறுதிப்படுத்த எளிதான வழி. 

00:23:11.457 --> 00:23:13.212
எனவே, இதுவே நிரலாக்கப் பகுதி. 

00:23:13.212 --> 00:23:17.951
எப்படி எழுதுகிறீர்கள், உங்கள் கருத்துக்களை மிக தெளிவாக வெளிப்படுத்துகிறீர்கள்? 

00:23:17.951 --> 00:23:23.293
ஆனால் யோசனை தெளிவாக இருக்க வேண்டும், அதுதான் தரவு அமைப்புகளும் வழிமுறைகளும் வருகின்றன. 

00:23:23.293 --> 00:23:30.340
எனவே நீங்கள் அழகான நாவல் எழுதலாம், ஆனால் உங்களுக்கு எந்த யோசனைகளும் இருக்காது அல்லது உங்களுக்கு மிகவும் பிரகாசமான யோசனைகள் இருக்கலாம், ஆனால் நீங்கள் உங்களைத் தொல்லை தராமல் வெளிப்படுத்தலாம். 

00:23:30.340 --> 00:23:31.928
அவற்றில் எதுவுமே உகந்தவை அல்ல. 

00:23:31.928 --> 00:23:34.692
இது வேறு எந்த மொழியிலும் எழுதுவது போல. 

00:23:34.692 --> 00:23:41.098
எனவே நீங்கள் வெளிப்படுத்தும் சிறந்த யோசனைகள் இருக்கலாம், ஆனால் அவற்றை நீங்கள் பேசும் நபருக்கு தெரிவிக்க முடியாவிட்டால், யோசனைகள் அவற்றின் தாக்கத்தை இழக்கின்றன. 

00:23:41.098 --> 00:23:44.340
எனவே உங்களுக்கு யோசனைகள் தேவை, அவற்றை வெளிப்படுத்த ஒரு மொழி தேவை. 

00:23:44.340 --> 00:23:50.340
எனவே நிரலாக்கமானது இந்த யோசனைகளை வெளிப்படுத்துவதுதான், ஆனால் யோசனைகள் தங்களை அல்காரிதம்களிலிருந்தும் தரவு அமைப்புகளிலிருந்தும் வருகின்றன.

2024-01-26 16:43:15,984 - ERROR - synthesize - Line 256 - Exception occurred: list index out of range. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
மேலும் திட்டமிடல் தொடர்பான பிரச்சினைகளை ஆராய GCD-யின் தற்போதைய உதாரணத்துடன் தொடரலாம். 

00:00:10.300 --> 00:00:29.640
GCD இன் அடிப்படை வரையறைக்கு நாங்கள் தொடங்கி, முதலில் M இன் அனைத்து காரணிகளையும் கணக்கிட்டு, ஒரு பட்டியலில் சேமிக்க வேண்டும், N இன் அனைத்து காரணிகளையும் கணக்கிட்டு, மற்றொரு பட்டியலில் சேமிக்க வேண்டும், இந்த இரண்டு பட்டியல்களிலிருந்து பொதுவான காரணிகளின் பட்டியலை பிரித்தெடுக்கவும், இந்த பொதுவான காரணிகளின் பட்டியலில் மிகப்பெரிய ஒன்றை அறிக்கை செய்யவும். 

00:00:29.680 --> 00:00:53.580
எமது முதல் எளிமைப்படுத்தல் நாம் உண்மையில் 1 முதல் குறைந்தபட்ச M மற்றும் N வரை ஒரு பாஸ் செய்ய முடியும் என்று கவனித்தது மற்றும் முதலில் தனித்தனியாக M மற்றும் N காரணிகள் கணக்கிடாமல் பொதுவான காரணிகள் பட்டியலை நேரடியாக கணக்கிட முடியும். பின்னர் நாம் பொதுவான காரணிகளின் பட்டியலை கூட தேவையில்லை என்று கவனித்தோம், ஏனெனில் நமது ஆர்வம் மிகப்பெரிய பொதுவான காரணி அல்லது மிகப்பெரிய பொதுவான வகுப்பான் மட்டுமே. 

00:00:53.580 --> 00:01:03.040
எனவே நாம் இதுவரை பார்த்த மிகப்பெரிய பொதுவான காரணிகளை ஒரே பெயரில் கண்காணித்து அதை இறுதியில் தெரிவிக்கலாம். 

00:01:03.040 --> 00:01:11.320
எங்கள் இறுதி எளிமைப்படுத்தல், நாம் மிகப்பெரிய பொதுவான காரணி பற்றி ஆர்வமாக இருந்தால், ஆரம்பத்தில் அல்ல, இறுதியில் தொடங்குவோம் என்பதைக் குறிப்பிடுவது. 

00:01:11.320 --> 00:01:20.140
எனவே 1 முதல் M மற்றும் N குறைந்தபட்ச வரை வேலை செய்யாமல், குறைந்தபட்ச M மற்றும் N முதல் 1 வரை வேலை செய்யாமல், 

00:01:20.140 --> 00:01:25.200
நாம் ஒரு பொதுவான காரணி கண்டுபிடிக்க, உடனேயே, நாம் அதை அறிக்கை மற்றும் வெளியேற. 

00:01:25.440 --> 00:01:29.760
1 என்பது பொதுவான காரணி என்று எப்போதும் நினைவில் கொள்ளுங்கள். 

00:01:29.760 --> 00:01:41.320
எனவே நாம் குறைந்தபட்ச M மற்றும் N இலிருந்து தொடங்கி பின்வாங்கினால், வேறு எந்த பொதுவான காரணிகளையும் காணவில்லை என்றால், நாம் 1 ஐ அழுத்தும்போது சரியாக வெளியேறுவோம் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:01:41.320 --> 00:02:07.180
எனவே நாம் கவனித்த விஷயம் என்னவென்றால், இந்த வெவ்வேறு பதிப்புகள் முந்தைய பதிப்புகளை விட எளிமையானவை என்றாலும், அவை அனைத்தும் கணக்கீட்டு அடிப்படையில் ஒரே செயல்திறனைக் கொண்டுள்ளன, அதாவது அவை முன்னோக்கி அல்லது பின்புறமாக வேலை, செய்தாலும், நாம் மிகப்பெரிய பொதுவான காரணிகளைக் கண்டுபிடிப்பதற்கு முன் 1 மற்றும் குறைந்தபட்ச M மற்றும் N இடையிலான அனைத்து எண்களையும் இயங்க கட்டாயப்படுத்துகின்றன. 

00:02:07.220 --> 00:02:23.540
எனவே, பண்டைய கிரேக்கர்களின் காலத்தில், நவீன காலமொழிகளில் முதல் வழிமுறை என்னவென்றால், அதை யூகிலிட் கண்டுபிடித்தார், அது இந்த பிரச்சனைக்கு GCD. 

00:02:23.740 --> 00:03:20.940
நாம் ஒரு பிளவு D என்று வைத்துக்கொள்வோம், இது M மற்றும் N இரண்டையும் பிளவுபடுத்துகிறது. எனவே இது ஒரு பொதுவான வகுப்பான் மற்றும் நாம் பெரிய போன்ற D தேடும். M என்பது N ஐ விட பெரியது என்று வாதத்திற்காக நாம் கருதுவோம் எனவே, D M மற்றும் N இரண்டையும் பிரிக்கினால், நாம் M ஐ A முறை D மற்றும் N ஐ B முறை D என எழுதலாம். சில மதிப்புகளுக்கு A மற்றும் B எனவே M என்பது D இன் பலமாகும், எனவே N எனவே நாம் இடது பக்கத்தை, சமன்பாடுகளை கழித்தால், இடது பக்கமானது M. - N. ஆகும் எனவே நாம் M. எடுத்து N. M. இருந்து குறைக்க எனவே, நாம் AD. இருந்து BD குறைக்க எனவே M. - N. சமம் AD. - BD. ஆனால் D. என்பது பொதுவான சொல். என்பதால், இதன் பொருள் M. - N. என்பது A - B. முறை D. எனவே இங்குதான். நாம் M. N. ஐ விட பெரியது என்று வைத்துக்கொள்வோம் எனவே A - B. ஒரு நேர்மறை எண் 

00:03:20.940 --> 00:04:05.589
ஆனால் M - N என்பது D இன் பலமாகும். அதாவது, D, M மற்றும் N இரண்டையும் பிரிக்கினால், அது N - N ஐப் பிரிக்கவும். D என்பது M மற்றும் N இன் மிகப்பெரிய வகுப்பான் என்பதால், D என்பது மிகப்பெரிய வகுப்பான் என்பதையும் வெளிப்படுத்துகிறது, இது N மற்றும் N - N க்கு பொதுவானது. வேறு வார்த்தைகளில் கூறுவதானால், M மற்றும் N இன் GCD இரண்டு சிறிய எண்களின் GCD, அதாவது N, மற்றும் இரண்டு, M மற்றும் N, M - N இன் வேறுபாடு போன்றது எனவே நாம் இந்த பயன்படுத்த முடியும் கணிசமாக எளிதாக்க GCD கண்டுபிடிக்கும் செயல்முறை எனவே இங்கே யூக்லிட்டின் அல்காரிதம் முதல் பதிப்பு 

00:04:05.589 --> 00:04:20.673
எனவே, M, N இன் GCD மதிப்பைக் கருத்தில் கொள்ளுங்கள், M N ஐ விட பெரியது என்று வைத்துக்கொள்வோம். எனவே, N ஏற்கனவே M இன் பிளவு என்றால், நாம் முடித்துவிட்டு N ஐ திருப்பித் தருகிறோம். இல்லையெனில், நாம் சிக்கலை புதியதாக மாற்றுகிறோம். 

00:04:20.713 --> 00:04:33.740
M மற்றும் N இன் GCD ஐ கணக்கிடுவதற்குப் பதிலாக, N மற்றும் M, - N இன் GCD ஐ கணக்கிட்டு அந்த மதிப்பைத் திருப்பிக் கொடுப்போம். 

00:04:33.780 --> 00:04:37.039
எனவே இங்கே இந்த யோசனையின் பைதான் செயல்படுத்தல் உள்ளது. 

00:04:37.039 --> 00:04:46.620
இந்த புதிய அம்சங்கள் சில இங்கே அறிமுகப்படுத்தப்பட்டுள்ளன. முதலில், இந்த சிறப்பு அறிக்கை, 

00:04:48.380 --> 00:04:55.380
Python இல், இந்த வகையான அறிக்கை ஒரு கருத்து என்று அழைக்கப்படுகிறது. 

00:04:57.780 --> 00:05:04.137
எனவே ஒரு கருத்து என்பது ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு நிகழ்ச்சியைப் படிக்கும் ஒருவருக்கு என்ன நடக்கிறது என்பதை விளக்குவதற்காக ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு அறிக்கையை வைக்கிறீர்கள். 

00:05:04.137 --> 00:05:08.015
ஆனால், அதை நிரலை இயக்கும் கணினி புறக்கணிக்கிறது. 

00:05:08.015 --> 00:05:15.220
எனவே இந்த அறிக்கை நாம் M. N. ஐ விட பெரியது அல்லது சமம் என்று கருதுகிறோம் என்று கூறுகிறது. 

00:05:16.260 --> 00:05:20.424
இந்த திட்டம் தொடரும் போது, இதுவே கருத்தாகும். 

00:05:20.424 --> 00:05:25.349
நிச்சயமாக, GCD ஐ அழைக்கும் நபருக்கு இதை உணர முடியாது. 

00:05:25.349 --> 00:05:29.413
எனவே அவர்கள் அதை M. N. ஐ விட சிறியதாகக் கொண்டு அழைக்கலாம். எனவே அதை சரிசெய்வோம். 

00:05:29.413 --> 00:05:34.100
எனவே இது பைதான்க்கு சொந்தமான ஒரு சிறப்பு வகை பணி. 

00:05:34.140 --> 00:05:37.003
மற்ற நிரலாக்க மொழிகளில் இது இல்லை. 

00:05:37.003 --> 00:05:44.257
எனவே நாம் செய்ய விரும்புவது, M மற்றும் N மதிப்புகளை எடுத்து அவற்றை பரிமாறிக்கொள்ள வேண்டும். 

00:05:44.257 --> 00:05:56.528
எனவே நாம் M இன் புதிய மதிப்பை N இன் பழைய மதிப்பாகவும், N இன் புதிய மதிப்பை M இன் பழைய மதிப்பாகவும் மாற்ற வேண்டும், எனவே M மற்றும் N தவறான வரிசையில் இருந்தால், அவற்றை மாற்றியமைப்போம். 

00:05:56.728 --> 00:06:02.963
எனவே இந்த பைதான் அறிக்கை என்ன செய்கிறது என்பது ஒரு ஜோடி மதிப்புகளை எடுத்து அது ஒரு சமகால ஒதுக்கீட்டை செய்கிறது. 

00:06:02.963 --> 00:06:19.588
எனவே, N இன் மதிப்பு M இன் மதிப்புக்குள் செல்கிறது மற்றும் M இன் மதிப்பு N இன் மதிப்புக்குள் செல்கிறது. இப்போது அது ஒரே நேரத்தில் செய்யப்படுகிறது முக்கியம். ஏனெனில் நீங்கள் அதை செய்ய என்றால், நீங்கள் முதலில் N மதிப்பு M நகலெடுக்க என்றால், பின்னர் பழைய மதிப்பு M இழக்கப்படுகிறது. 

00:06:19.588 --> 00:06:25.834
எனவே நீங்கள் பழைய மதிப்பை M இன் புதிய மதிப்பில் நகலெடுக்க முடியாது, ஏனெனில் நீங்கள் அதை இழந்துவிட்டீர்கள். 

00:06:25.834 --> 00:06:35.400
நீங்கள் இரண்டு கப் தண்ணீரை வைத்துள்ளீர்கள், அவற்றின் உள்ளடக்கத்தை பரிமாறிக்கொள்ள விரும்புகிறீர்கள். இப்போது நீங்கள் இடம் உருவாக்க வேண்டும். 

00:06:36.960 --> 00:06:39.832
அதை விட்டுவிடுவதற்கு முன் இதை அதில் ஊற்ற முடியாது. 

00:06:39.832 --> 00:06:42.571
அதை நீ விட்டால், அதை அதில் ஊற்ற முடியாது. 

00:06:42.571 --> 00:06:43.899
எனவே நீங்கள் ஒரு மூன்றாவது கப் பொதுவாக வேண்டும். 

00:06:43.899 --> 00:06:46.411
எனவே நீங்கள் முதலில் இதை இங்கு மாற்ற வேண்டும் மற்றும் அதை பாதுகாப்பாக வைக்க வேண்டும். 

00:06:46.411 --> 00:06:49.703
பின்னர் நீங்கள் அதை அங்கு மாற்ற வேண்டும் மற்றும் பின்னர் நீங்கள் அதை மீண்டும் நகலெடுக்க வேண்டும். 

00:06:49.703 --> 00:06:54.140
எனவே, பெரும்பாலான நிரலாக்க மொழிகள் இரண்டு மதிப்புகளை பரிமாறிக்கொள்ளும் வழியைக் காட்டுகின்றன. 

00:06:54.140 --> 00:06:59.354
ஆனால் பைதான் ஒரு அழகான அம்சத்தைக் கொண்டுள்ளது, இதன் மூலம் நீங்கள் ஒரு ஜோடி மதிப்புகளை எடுத்து அவற்றை ஒரே நேரத்தில் புதுப்பிக்க முடியும். 

00:06:59.394 --> 00:07:08.634
குறிப்பாக, இந்த ஒரே நேரத்தில் புதுப்பித்தல், இந்த கூடுதல் தற்காலிக இடத்தை ஒரு மதிப்பைப் பிரிப்பதற்கு கவலைப்படாமல் மதிப்புகளை பரிமாறிக்கொள்ள அனுமதிக்கிறது. 

00:07:08.634 --> 00:07:16.565
எப்படியிருந்தாலும், இந்த முதல் பகுதி நாம் கருதிக் கொண்டிருக்கும் இந்த நிபந்தனை பூர்த்தி செய்யப்படுவதை உறுதி செய்வதே ஆகும். 

00:07:16.565 --> 00:07:19.620
இப்போது நாம் அல்போரிதம் மையம் வந்து. 

00:07:19.620 --> 00:07:33.480
எனவே N M ஐப் பிரிக்கினால், அது M இன் மீதமுள்ள பகுதி N ஐப் பிரிக்கினால் 0 ஆகும், பின்னர் N ஐ GCD என்று கண்டுபிடித்தோம், பின்னர் N ஐ திருப்பித் தருகிறோம். 

00:07:34.120 --> 00:07:35.440
கடைசி ஸ்லைடு. 

00:07:35.440 --> 00:07:47.280
இப்போது நாம் N இன் GCD மற்றும் வேறுபாடு M. - N ஐ கணக்கிடப் போகிறோம். எனவே நாம் N மற்றும் N - N இன் GCD ஐ கணக்கிட விரும்புகிறோம். எனவே நாம் கணக்கிட 

00:07:48.640 --> 00:07:52.820
M. - N. என வேறுபாடு. இதை நாம் பயன்படுத்தலாம். 

00:07:52.820 --> 00:08:02.240
ஆனால் M என்றால் 97 எனவும், N என்றால் 2 எனவும் சொல்லலாம், வித்தியாசம் 95 ஆக இருக்கும். 

00:08:03.400 --> 00:08:08.922
N ஐ விட பெரியது. நாம் இந்த செயல்பாட்டை பெரிய எண் விட பெரிய முதல் எண் கொண்ட ஒரு செயல்பாட்டை அழைக்க விரும்புகிறோம். 

00:08:08.922 --> 00:08:12.780
எனவே, நமது செயல்பாடு இதை கவனித்துக்கொள்ளும் என்றாலும், இதை நாம் உறுதி செய்வோம். 

00:08:12.780 --> 00:08:23.109
நாம் செய்ய விரும்புவது, நாம் N மற்றும் M - N உடன் GCD ஐ அழைக்க வேண்டும், அதற்கு பதிலாக, நாம் N இன் அதிகபட்ச மதிப்பு மற்றும் வித்தியாசம் முதல் வாதம் மற்றும் N இன் குறைந்தபட்ச மதிப்பு மற்றும் வித்தியாசம் கொண்ட GCD ஐ அழைப்போம். 

00:08:23.109 --> 00:08:28.180
எனவே, இரண்டு மதிப்புகளில் பெரியது முதலில், மற்றும் சிறியது முதலில் செல்லும் என்பதை உறுதிப்படுத்தும். 

00:08:28.220 --> 00:08:33.781
இந்த GCD எதுவாக இருந்தாலும், இந்த செயல்பாடு என்னவாக இருக்கும் என்பதை புதிய GCD திரும்பப் பெறுகிறது. 

00:08:33.781 --> 00:08:42.460
எனவே இது நாம் பின்னர் பார்ப்போம் என்பதற்கு ஒரு எடுத்துக்காட்டு, இது மிகவும் இயற்கையானது, இது மீளுருவாக்கம் என்று அழைக்கப்படுகிறது. 

00:08:43.060 --> 00:08:52.878
அதாவது, நாம் ஒரு சிறிய பிரச்சினையை தீர்த்து, அந்த பதிலைப் பயன்படுத்தி, இந்த வழக்கில் நேரடியாக, நமது தற்போதைய பிரச்சினையின் பதிலைப் புகாரளிக்கப் போகிறோம். 

00:08:52.878 --> 00:09:06.496
எனவே நாம் M மற்றும் N இன் GCD ஐ தீர்க்க விரும்புகிறோம். ஆனால் M மற்றும் N இன் GCD, அதற்கு பதிலாக நாம் N மற்றும் M - N இன் GCD ஐ தீர்க்கிறோம். 

00:09:06.536 --> 00:09:11.881
எனவே நாம் சிறிய மதிப்புகளுடன் செயல்பாட்டை அழைத்து பின்னர் அதை திரும்ப. 

00:09:11.881 --> 00:09:16.233
இப்போது நீங்கள் ஒரு மறுபரிசீலனை அழைப்பு செய்ய இந்த போன்ற, அது ஒரு நேரம் சுழற்சி போன்றது. 

00:09:16.233 --> 00:09:17.996
அது மீண்டும் செயல்பாட்டை அழைக்கும். 

00:09:17.996 --> 00:09:20.474
அது ஒரு சிறிய செயல்பாட்டைக் கொண்டு வரும். 

00:09:20.474 --> 00:09:31.390
நீங்கள் இந்த வரிசையில் GCD தொடர்ந்து GCD அழைக்கும் போது, வேறு மதிப்புகள் ஒரு முடிவற்ற முன்னேற்றம் ஒரு நிறுத்த புள்ளி இல்லாமல் பெற முடியாது என்று உறுதி செய்ய வேண்டும். 

00:09:31.430 --> 00:09:40.300
எனவே, முறையாக, நாம் உறுதி செய்ய வேண்டும் என்ன இந்த உத்தரவாதம் கண்டுபிடிக்க ஒரு N பிளவு N. எனவே இங்கே GCD. 

00:09:41.980 --> 00:09:43.853
உண்மையில் தன்னை அழைத்து இல்லாமல் வெளியே செல்கிறது. 

00:09:43.853 --> 00:09:47.262
எனவே, நாம் இறுதியில் இந்த நிலைக்கு வருவதை உறுதி செய்ய வேண்டும். 

00:09:47.262 --> 00:09:54.071
இப்போது நீங்கள் இங்கே பார்த்தால் என்ன நடக்கிறது என்பது GCD க்கு அனுப்பப்படும் மதிப்புகள் சிறியதாகவும் சிறியதாகவும் மாறி வருகின்றன. 

00:09:54.071 --> 00:09:56.222
இப்போது நாம் M. - N. க்கு என்ன பெற முடியும்? 

00:09:56.222 --> 00:09:57.717
அது என்ன மதிப்பு? 

00:09:57.717 --> 00:09:58.960
அது பூஜ்ஜியமாக இருக்க முடியுமா? 

00:09:58.960 --> 00:10:10.508
M, - N என்றால் N. M என்றால் N. M என்றால் N. M என்றால் N. M என்பது N. 

00:10:10.508 --> 00:10:11.843
எனவே அது பூஜ்ஜியமாக இருக்க முடியாது. 

00:10:11.843 --> 00:10:13.542
எனவே அது குறைந்தது ஒரு இருக்க வேண்டும். 

00:10:13.542 --> 00:10:17.478
எனவே நாம் இந்த செயல்பாடு M. - N என்று அழைக்கும் போது குறைந்தது ஒன்று. 

00:10:17.478 --> 00:10:21.589
மறுபுறம், ஒவ்வொரு முறையும் நாம் சிறிய மதிப்புகளை அடைகிறோம். 

00:10:21.589 --> 00:10:25.443
எனவே நாம் சில மதிப்புடன் தொடங்குகிறோம் மற்றும் M. -N. தொடர்ந்து குறைகிறது. 

00:10:25.443 --> 00:10:27.990
அது உண்மையில் ஒரு அடையும் போது என்ன நடக்கும்? 

00:10:27.990 --> 00:10:31.700
அது ஒரு எண் வரை சென்றால், மற்ற எண்களை நாம் பிரிக்கலாம். 

00:10:31.700 --> 00:10:37.330
எனவே M சதவீதம் N அல்லது M N ஆல் பிரிக்கப்பட்டால், மீதமுள்ளவை 1 ஆக இருக்கும், அது 0 ஆக இருக்கும். 

00:10:37.330 --> 00:10:39.420
எனவே அது உங்கள் பூஜ்ஜியத்தை திருப்பித் தருகிறது. 

00:10:39.420 --> 00:10:52.180
வேறு வார்த்தைகளில் கூறுவதானால், இந்த செயல்பாடு, நாம் செயல்பாட்டை அழைக்கும் எண்ணிக்கையை குறைக்க தொடர்ந்து இருப்பதால், இறுதியில் GCD முடிவடையும் ஒரு அழைப்பை உருவாக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:10:55.020 --> 00:10:57.199
எனவே இது மிகவும் முக்கியமானது, பின்னர் இதைப் பற்றி பேசுவோம். 

00:10:57.199 --> 00:11:06.389
ஆனால் நீங்கள் இந்த வகை செயல்பாட்டை எழுதும்போது, நீங்கள் எங்கிருந்து தொடங்குகிறீர்களோ, அங்கு ஒரு முடிவான எண்ணிக்கையிலான படிகளில் அடையப்படும் ஒரு அடிப்படை வழக்கு இருப்பதை உறுதி செய்ய வேண்டும். 

00:11:06.429 --> 00:11:19.826
எனவே இது யூகிளிட்டின் அல்காரிதம், முதல் பதிப்பு, அங்கு நாம் M மற்றும் N இன் GCD, N மற்றும் M கழித்து N இன் GCD மாற்ற முடியும் என்று கவனிக்கிறோம். இந்த குறிப்பிட்ட நடைமுறைப்படுத்தலில் நாம் பார்த்தது இரண்டு விஷயங்கள். 

00:11:19.826 --> 00:11:21.304
ஒன்று, மூன்று விஷயங்கள். 

00:11:21.304 --> 00:11:23.872
ஒரு கருத்தை நமது குறியீட்டில் எவ்வாறு வைக்க வேண்டும் என்பதை நாம் பார்த்திருக்கிறோம். 

00:11:23.872 --> 00:11:30.042
பைதான் இரண்டு மாறிகளை ஒரே நேரத்தில் புதுப்பிக்கும் வகையில் செயல்படுகிறது என்பதை நாம் கண்டிருக்கிறோம். 

00:11:30.042 --> 00:11:39.833
எனவே M கோமா N M கோமா N க்கு சமம். மேலும் தற்போதைய செயல்பாட்டை கணக்கிட அதே செயல்பாட்டை புதிய வாதங்களுடன் பயன்படுத்தலாம் என்பதை நாம் கண்டோம். 

00:11:39.833 --> 00:11:49.263
எனவே M மற்றும் N இன் GCD ஐ கணக்கிட, நான் வேறு சில மதிப்புகளின் GCD ஐ கணக்கிட வேண்டும் என்று சொல்ல எந்த பிரச்சனையும் இல்லை, மற்றும் அந்த பதிலை என் பதிலை திரும்ப பயன்படுத்த. 

00:11:49.263 --> 00:11:57.757
எனவே இந்த அல்காரிதம் ஒரு வித்தியாசமான பதிப்பைப் பார்ப்போம், அங்கு நாம் ஒரு சைட் சுழற்சியால் மீள் அழைப்பை மாற்றுகிறோம். 

00:11:57.757 --> 00:12:06.175
எனவே நாம் எமது நிலையான வழிமுறைகளின் கடைசி பதிப்பில் M புள்ளி N முதல் 1 வரை குறைந்தது இருந்து பின் எண்ணும் போது பார்த்தோம். 

00:12:06.575 --> 00:12:10.650
எனவே நான் 0 க்கு மேல் இருக்கிறேனா என்று தொடர்ந்து சரிபார்த்து, தொடர்ந்து குறைந்து கொண்டோம். 

00:12:10.650 --> 00:12:13.281
சரி, இங்கே நாம் ஒரு சில நேரம் பயன்படுத்தி மீள்வினை செய்கிறோம். 

00:12:13.281 --> 00:12:20.168
முதலில் நான் கவனிக்க வேண்டியது, நான் ஒரு வரி, இறுதியில் ஒரு தனி வரிசையில் இருந்த இந்த கருத்தை நகர்த்தியுள்ளேன். 

00:12:20.168 --> 00:12:27.340
எனவே பைதான் என்ன சொல்கிறது என்றால், ஒரு ஹாஷ் இருந்தால், மற்ற வரிகளை புறக்கணிக்க முடியும். 

00:12:27.340 --> 00:12:31.307
எனவே இந்த வரி படித்து, அது ஒரு செல்லுபடியாகும் நிபந்தனை மற்றும் பின்னர் அது ஒரு ஹாஷ் பார்க்கிறது. 

00:12:31.307 --> 00:12:35.720
எனவே, இந்த அறிக்கை Python நிரலில் செயல்படும் போது ஒரு பகுதியாக இல்லை. 

00:12:35.720 --> 00:12:39.203
ஒரு கருத்து தனி வரிசையில் இருக்கலாம் அல்லது ஒரு வரிசையின் முடிவாக இருக்கலாம். 

00:12:39.203 --> 00:12:46.758
நிச்சயமாக, நீங்கள் Python செயல்படுத்த வேண்டும் என்று எதையும் இந்த பிறகு வைக்க முடியாது என்பதை நினைவில் கொள்ள வேண்டும், ஏனெனில் அது ஒரு ஹாஷிங் பார்க்க ஒருமுறை, மற்ற வரி புறக்கணிக்கப்படும். 

00:12:46.758 --> 00:12:48.340
எனவே அது ஒரு வரி முடிவாக இருக்க முடியாது. 

00:12:48.340 --> 00:12:49.823
மீதமுள்ள வரிசையை புறக்கணிக்கப் போகிறோம். 

00:12:49.823 --> 00:12:51.205
எனவே அது ஒரு வரிசையின் நடுவில் இருக்க முடியாது. 

00:12:51.205 --> 00:12:53.340
ஒரு வரிசையின் நடுவில் ஒரு கருத்தை வைக்க முடியாது. 

00:12:53.340 --> 00:12:57.200
ஆனால் நீங்கள் அதை ஒரு தனி வரிசையில் வைக்கலாம், அல்லது நீங்கள் அதை ஒரு வரி இறுதியில் வைக்கலாம். 

00:12:57.200 --> 00:12:59.816
எப்படியோ, இது எங்கள் கருத்து, முன்பு போல. 

00:12:59.816 --> 00:13:04.441
எனவே, இதுவரை நான் கருத்துகளை மாற்றியமைத்ததைத் தவிர வேறு எந்த மாற்றமும் இல்லை. 

00:13:04.441 --> 00:13:09.316
இப்போது நாம் ஒரு கணக்கீட்டைச் செய்ய வேண்டிய கட்டத்தில் இருக்கிறோம். 

00:13:09.316 --> 00:13:17.987
எனவே, இந்த கட்டத்தில், N M ஐப் பிரிக்கும் N ஐ நாம் கண்டால், நாம் முடித்து N ஐ நேரடியாக திருப்பிக் கொடுக்கலாம். எனவே, நமது மறுபரிசீலனைக் குறியீடு இதைச் செய்யும். 

00:13:17.987 --> 00:13:21.340
நாம் இதுபோன்ற Nஐ கண்டுபிடிக்கவில்லை என்றால், நாம் சில வேலைகளைச் செய்ய வேண்டும். 

00:13:21.340 --> 00:13:26.806
எனவே M பிரிக்கப்பட்ட N உண்மையில் ஒரு மீதமுள்ள உற்பத்தி செய்கிறதா என்பதை சரிபார்க்க வேண்டும். 

00:13:26.806 --> 00:13:31.482
எனவே இந்த அடையாளம் இந்த உச்சரிப்பு அடையாளத்துடன் எழுதப்பட்டுள்ளது. 

00:13:31.482 --> 00:13:35.038
எனவே இது கணித சமம் அல்ல. 

00:13:35.038 --> 00:13:40.187
இந்த இரட்டை சமம் என்பது சமத்துவத்தின் கணித அடையாளமாக நாம் பயன்படுத்தியதாக நினைவில் கொள்ளுங்கள். 

00:13:40.187 --> 00:13:43.010
எனவே இது சமமாக இல்லை என்பதற்கான அடையாளம். 

00:13:43.010 --> 00:13:49.700
எஞ்சியிருக்கும் வரை, எஞ்சியிருக்கும் எண் M பிரிக்கப்பட்டால் N என்பது 0 ஆகாது, நாம் முன்பு செய்ததைச் செய்வோம். 

00:13:49.700 --> 00:13:59.173
நாம் வித்தியாசத்தை கணக்கிட்டு M ஐ இரண்டு மதிப்புகளில் அதிகபட்சமாகவும், N ஐ இரண்டு மதிப்புகளில் சிறியதாகவும் மாற்றுவோம். 

00:13:59.173 --> 00:14:11.340
எனவே நாம் ஒரு ஜோடி M, N அதன் GCD நாம் M. N விட பெரியது என்று வைத்து கண்டுபிடிக்க முயற்சி. ஒவ்வொரு அடியிலும், நாம் N மற்றும் வித்தியாசத்தின் பெரிய M மற்றும் N மற்றும் வித்தியாசத்தின் சிறிய N மற்றும் சிறிய N மூலம் மாற்ற. 

00:14:11.340 --> 00:14:14.071
எனவே, இந்த மறுபரிசீலனை குறியீட்டில் நாம் செய்வது இதுதான். 

00:14:14.071 --> 00:14:16.803
நாம் சொல்லும் போதே நாம் கணக்கிடும் என்று GCD என்று. 

00:14:16.803 --> 00:14:41.828
எனவே இந்த போது சுழற்சியில், நாம் M, N இன் கணக்கீட்டை M, N இன் GCD உடன் மாற்ற வேண்டும் என்று சொல்கிறோம், N இன் அதிகபட்ச N வேறுபாடு மற்றும் குறைந்தபட்ச N இன் கணக்கீட்டை N உண்மையில் N ஐப் பிரிக்கும் நிலை வரும் வரை இதைச் செய்யத் தொடங்குவோம். நாம் சொன்னது போலவே, மறுபரிசீலனை வழக்கில், ஒரு எல்லை வழக்கு இருக்கும், இதில் மிக மோசமான வழக்கில் N 1 ஆக மாறும், 1 எல்லாவற்றையும் பிரிக்கும். 

00:14:41.828 --> 00:14:44.362
அதேபோல், இங்கே வித்தியாசம் தொடர்ந்து குறைந்து கொண்டே இருக்கும். 

00:14:44.362 --> 00:14:48.363
வித்தியாசம் பூஜ்ஜியமாக இருக்க முடியாது, ஏனெனில் வித்தியாசம் பூஜ்ஜியமாக இருந்தால், அது பிரிக்கப்படும். 

00:14:48.363 --> 00:14:52.710
எனவே வித்தியாசம் அதிகபட்சம் 1 ஆக குறைந்து 1 ஆக இருக்கும் போது முடிந்துவிடும். 

00:14:52.710 --> 00:14:57.408
எனவே இது நாம் முன்பு எழுதிய அதே மறுபரிசீலனை செயல்பாட்டின் ஒரு சமகால பதிப்பு. 

00:14:57.408 --> 00:15:06.785
எனவே, அது உதவுகிறது என்றால், நீங்கள் இந்த பக்கங்களுடன் பார்க்கலாம் மற்றும் மறுபரிசீலனை செய்யும் பொருள் என்ன செய்கிறது மற்றும் இடைநிலை என்ன செய்கிறது என்பதை புரிந்து கொள்ள முயற்சி செய்யலாம் மற்றும் அவர்கள் அடிப்படையில் அதே விஷயத்தை செய்கிறார்கள் என்பதை பார்க்கலாம். 

00:15:06.785 --> 00:15:19.744
இந்த மறுபடியும் முடிவடையும் என்ற கருத்து, நாம் முன்பு கூறியது போலவே உள்ளது. நீங்கள் ஒரு பிட் எழுதும்போது, நீங்கள் ஒரு பிட் தவறான பிட் நிலைக்கு முன்னேறுவதை உறுதி செய்ய வேண்டும். 

00:15:19.744 --> 00:15:36.340
எனவே நீங்கள் கவனமாக இல்லாவிட்டால் மற்றும் நீங்கள் அதை நிறுத்த உத்தரவாதம் வாதங்கள் மூலம் பயன்படுத்தி இல்லை என்றால், மீண்டும் மீண்டும் எப்போதும் நீடிக்கும் போலவே, நீங்கள் முன்னேற்றம் செய்யவில்லை என்றால் இடைவெளி நிலை இறுதியில் தவறாக மாறும் உறுதி செய்ய. 

00:15:41.340 --> 00:15:43.054
எனவே நாம் இதை விட சிறப்பாக செய்ய முடியும். 

00:15:43.054 --> 00:15:46.787
எனவே, ஒரு கை மரணதண்டனை செய்வதன் மூலம் ஒரு பிரச்சினையை பார்க்கலாம். 

00:15:46.787 --> 00:15:52.537
எனவே நாம் 101 மற்றும் 2 இன் GCD போன்ற எண்களுடன் தொடங்குவோம் என்று வைத்துக்கொள்வோம். 

00:15:52.537 --> 00:16:00.944
பின்னர் நமது அல்காரிதம், இது இப்போது வித்தியாசத்தின் gcd ஆகவும் n ஆகவும் மாற வேண்டும் என்று கூறுகிறது. 

00:16:00.944 --> 00:16:04.966
வித்தியாசம் 99 ஆகும், எனவே நமக்கு 99 மற்றும் 2 இருக்கும். 

00:16:04.966 --> 00:16:09.167
பின்னர் இது 97 மற்றும் 2 மற்றும் பலவற்றின் GCD ஆக மாறும். 

00:16:09.167 --> 00:16:18.661
எனவே நாம் 50 படிகள் தொடர்ந்து செய்ய வேண்டும். பின்னர் இறுதியில் நாம் 5 மற்றும் 2 மற்றும் பின்னர் 3 மற்றும் 2 ஆகியவற்றின் GCD ஆக வரும். 

00:16:18.661 --> 00:16:24.081
இப்போது நாம் வித்தியாசத்தை கணக்கிடுகிறோம், நாம் 2 மற்றும் 1 க்ஜிடி கிடைக்கும். 

00:16:24.081 --> 00:16:26.856
எனவே இப்போது வித்தியாசம் குறைவாகிவிடும். 

00:16:26.856 --> 00:16:30.482
இந்த நேரத்தில் நாம் பதிலை 1 என்று தெரிவிப்போம். 

00:16:30.482 --> 00:16:35.090
எனவே, 101 மற்றும் 2 இன் GCD செய்ய சுமார் 50 படிகள் ஆகும். 

00:16:35.090 --> 00:16:42.506
எனவே, இந்த புத்திசாலித்தனமான அணுகுமுறையை விமர்சிப்பது, எண்களே நேரத்தை ஒத்ததாக எடுக்கும். 

00:16:42.506 --> 00:16:47.898
நாம் m மற்றும் n எண்களை சேர்த்தால், நாம் m மற்றும் n இன் குறைந்தபட்சத்திற்கு சமமான பொதுவான படிகளின் எண்ணிக்கையை எடுப்போம். 

00:16:47.898 --> 00:16:52.592
இப்போது நாம் குறைந்தபட்சத்தை விட பெரிய படிகளை எடுத்து வருகிறோம், ஏனெனில் குறைந்தபட்சமானது 2 ஆகும். 

00:16:52.592 --> 00:16:59.603
நாம் கணக்கிடும் காரணிகள் என்றால், 2 என்ற ஒரே காரணி 2 என்று நாம் கூறலாம், அது 101 என்ற காரணி அல்ல, நாம் ஆரம்பத்தில் நிறுத்தப்பட்டிருப்போம். 

00:16:59.603 --> 00:17:04.901
எனவே இது சில சந்தர்ப்பங்களில் நமது முந்தைய வழிமுறைகளை விட மோசமாக நடக்கிறது. 

00:17:04.901 --> 00:17:07.931
எனவே, இங்கே ஒரு சிறந்த கவனிப்பு உள்ளது. 

00:17:07.931 --> 00:17:10.870
எனவே n. m. ஐப் பிரிக்கவில்லை என்று வைத்துக்கொள்வோம். 

00:17:10.870 --> 00:17:17.735
வேறு வார்த்தைகளில் கூறுவதானால், m. ஐ. n. ஆல் பிரிக்கினால், எனக்கு ஒரு விகிதமும் மீதமுள்ள விகிதமும் கிடைக்கும். 

00:17:17.735 --> 00:17:22.885
எனவே நான் n என எழுத முடியும். q x, n, + r அங்கு q என்பது குவாசகம் மற்றும் r என்பது மீதமுள்ள. 

00:17:22.885 --> 00:17:26.006
நீங்கள் உயர்நிலைக் கணிதத்தில் இருந்து இந்த சொற்களை நினைவில் வைத்திருக்கலாம். 

00:17:26.006 --> 00:17:32.188
எனவே n. m. q முறைக்கு சென்று, மீதமுள்ள r ஐ விட்டு விடுகிறது, r. n. ஐ விட சிறியதாக இருப்பதை உறுதி செய்கிறோம். 

00:17:32.188 --> 00:17:35.451
இல்லையெனில் அது ஒரு முறை செல்லும், அது q + 1 ஆக இருக்கும். 

00:17:35.451 --> 00:17:37.673
எனவே எஞ்சியுள்ள எண் r. n. ஐ விட சிறியதாக உள்ளது. 

00:17:37.673 --> 00:17:45.095
உதாரணமாக 7 எனில் 3ல் பிரிக்க விரும்பினால், இது 2 x 3 + 1 ஆகும். 

00:17:45.095 --> 00:17:47.731
எனவே இது எனது குவாசிண்டாகும், இது எனது மீதமுள்ளதாக இருக்கும். 

00:17:47.731 --> 00:17:53.090
முக்கியமானது என்னவென்றால், மீதமுள்ளவை நான் பகிர்ந்து கொள்ளும் அளவை விட எப்போதும் சிறியவை. 

00:17:53.090 --> 00:17:59.845
இப்போது நாம் முன் போல் நாம் m மற்றும் n இருவரும் ஒரு பொதுவான வகுப்பாளர் என்று வைத்துக்கொள்வோம். 

00:17:59.845 --> 00:18:10.756
வேறு வார்த்தைகளில் கூறுவதானால், முன்பு நாம் m தன்னை ஒரு முறை d மற்றும் n என b முறை d என எழுதலாம். சில எண்களுக்கு a மற்றும் b ஏனெனில் m என்பது d இன் பலமாகும், எனவே n ஆகும். 

00:18:10.756 --> 00:18:22.803
எனவே இதை மேலே உள்ள சமன்பாட்டில் இணைத்தால், m என்பது a x d என்பது q x n ஆகும். b x d plus r. 

00:18:22.803 --> 00:18:27.598
எனவே d இடது மற்றும் d வலது ஒரு பகுதியை பிரிக்கின்றன. 

00:18:27.598 --> 00:18:32.148
எனவே d க்கு r ஐப் பிரிக்க வேண்டும் என்று நீங்கள் எளிதாக உங்களை நம்பலாம். 

00:18:32.148 --> 00:18:47.862
எனவே, இதைப் பற்றி யோசிக்க ஒரு வழி, நீங்கள் விரும்பினால், நான் இந்த எண் m ஐக் கொண்டுள்ளேன், அதை n இன் அலகுகளாக பிரிக்க முடியும், பின்னர் இங்கே ஒரு சிறிய பிட் உள்ளது. 

00:18:47.862 --> 00:18:54.081
மற்றபடி, d, d எல்லாவற்றையும் சமமாகப் பிரிக்கிறது. 

00:18:54.081 --> 00:18:57.565
எனவே இது இந்த தொகுதிகளை ஒவ்வொன்றையும் பிரிக்கின்றது. 

00:18:57.565 --> 00:19:00.473
அது முழு விஷயத்தையும் பிளவுபடுத்துகிறது. 

00:19:00.473 --> 00:19:08.316
ஆனால் இப்போது நான் d உடன் தொடரினால், அது இந்த எல்லையில் நிறுத்தப் போகிறது, ஏனென்றால் d n ஐப் பிரிக்கவும். 

00:19:08.316 --> 00:19:12.045
எனவே d என்பது இந்த கடைசி பிட் ஆகும். 

00:19:12.045 --> 00:19:17.857
எனவே, நாம் எளிதாக r என்பது d இன் பெருக்காக இருக்க வேண்டும் என்று வாதிடலாம். 

00:19:17.857 --> 00:19:20.753
எனவே d க்கு r க்கும் பிளவு வேண்டும். 

00:19:20.753 --> 00:19:28.179
எனவே d m மற்றும் d n ஐப் பிரித்தால், d மீதமுள்ள m. ஐ. n ஆல் பிரிக்க வேண்டும். 

00:19:28.179 --> 00:19:33.959
நாம் முன்பு பார்த்தபடி, வித்தியாசத்தை, எனவே கடைசியாக நாம் சொல்லியிருந்தோம். நாம் பார்க்க வேண்டும் வித்தியாசம் m பிரிக்கப்பட்ட n. 

00:19:33.959 --> 00:19:42.361
இப்போது நாம் சொல்கிறோம், மீதமுள்ள m, ஐ, n மற்றும் d க்கு பிரிக்க வேண்டும், அது n மற்றும் இந்த மீதமுள்ள GCD ஆக இருக்கும். 

00:19:42.361 --> 00:19:52.351
எனவே இது ஒரு மேம்படுத்தப்பட்ட மற்றும் நீங்கள் முன்மொழிய முடியும் என்று அல்கோரிதம் உண்மையான பதிப்பு ஆகும், வித்தியாசம் ஒன்று, ஆனால் மீதமுள்ள ஒன்று. 

00:19:52.351 --> 00:19:56.885
m மற்றும் n இன் GCD ஐ. m. n ஐ விட பெரியது என்று கருதிக் கொள்ளுங்கள். 

00:19:56.885 --> 00:19:59.135
இப்போது n. m. ஐப் பிரித்தால், நாம் முடித்துவிட்டோம். 

00:19:59.135 --> 00:20:00.673
நாம் n ஐ திருப்பிக் கொடுக்கிறோம். 

00:20:00.673 --> 00:20:03.340
இது முன்னதாக இருந்தது போலவே உள்ளது. 

00:20:03.340 --> 00:20:06.673
இல்லையெனில், R தான் மீதமுள்ளதாக இருக்கட்டும். 

00:20:06.673 --> 00:20:17.911
n என்ற மதிப்பை n என்ற எண்ணில் பிரிக்கினால் மீதமுள்ளதைப் பெற்று, n மற்றும் r என்ற GCD ஐ திருப்பித் தருகிறோம். 

00:20:17.911 --> 00:20:20.362
எனவே இந்த நிலை குறித்து நாம் கவலைப்பட வேண்டியதில்லை. 

00:20:20.362 --> 00:20:25.909
நாம் வித்தியாசத்திற்காக செய்ததைப் போல அதிகபட்ச மற்றும் குறைந்தபட்சத்தை எடுக்க வேண்டியதில்லை. ஏனென்றால் மீதமுள்ளது n க்கும் குறைவாக இருக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:20:25.909 --> 00:20:28.956
இல்லையெனில் n இன்னும் ஒரு முறை செல்லும். 

00:20:28.956 --> 00:20:39.202
எனவே, முன்னதாக, நாம் ஒரு மிக எளிய மறுபரிசீலனை செயல்படுத்த வேண்டும், மேலும் இது மிகவும் எளிமையானது, ஏனெனில் நாம் இந்த அதிகபட்ச குறைந்தபட்ச வணிக செய்ய வேண்டியதில்லை. 

00:20:39.202 --> 00:20:46.340
எனவே, முந்தைய முறை போல, நாம் முதலில் m மற்றும் n ஐ திருப்புகிறோம், அவை சரியான வரிசையில் இல்லை என்றால். 

00:20:46.340 --> 00:20:52.680
பின்னர் n m ஐப் பிரிக்கினால், மீதமுள்ள m. n ஐப் பிரிக்கினால், நாம் n ஐத் திருப்பிக் கொடுத்து முடிக்கிறோம். 

00:20:52.680 --> 00:20:56.294
இல்லையெனில், n மற்றும் மீதமுள்ளவற்றின் GCD ஐ திருப்பித் தருகிறோம். 

00:20:56.294 --> 00:20:58.067
எனவே இதுவே மீதமுள்ளவை. 

00:20:58.067 --> 00:21:01.057
மீதமுள்ள எண் எப்போதும் n க்குக் குறைவாக இருப்பதை நினைவில் கொள்ளுங்கள். 

00:21:01.057 --> 00:21:07.060
எனவே நாம் அதை திருப்பி, அதிகபட்சமாக எடுத்துக்கொள்ள கவலைப்பட வேண்டியதில்லை. 

00:21:07.060 --> 00:21:17.452
முந்தைய வழக்கு போல, நாம் இந்த முழு விஷயத்தையும் செய்ய முடியும் ஒரு y பயன்படுத்தி அதை செய்ய பதிலாக ஒரு மறுபரிசீலனை விஷயம். 

00:21:17.452 --> 00:21:21.506
எனவே நாம் முதலில் m மற்றும் n ஐ மாற்றுகிறோம், அவை தவறான வரிசையில் இருந்தால். 

00:21:21.506 --> 00:21:29.340
பின்னர் மீதமுள்ள எண் 0 ஆக இல்லாத வரை, நாம் m ஐ இரண்டு எண்களில் சிறிய எண் மூலம் மாற்றுவோம். n ஐ மீதமுள்ள எண் மூலம் மாற்றுவோம். 

00:21:29.340 --> 00:21:34.249
இப்போது நாம் இந்த மீதமுள்ள அல்லது 0 செல்லும் என்று உத்தரவாதம் ஆனால் அது 0 செல்லும் என்றால் அது பிளவு என்று பொருள். 

00:21:34.249 --> 00:21:39.564
அல்லது அது 0 ஆக இல்லையென்றால், எஞ்சிய எண் தொடர்ந்து குறைந்து கொண்டே இருக்கும், ஏனென்றால் அது நாம் தொடங்கிய எண்ணை விட எப்போதும் சிறியதாக இருக்கும். 

00:21:39.564 --> 00:21:42.928
அது தொடர்ந்து குறைந்து 1 ஆக இருக்கும். அடுத்த கட்டத்தில் அது பிளவுபடும். 

00:21:42.928 --> 00:21:45.218
இறுதியாக, நாம் குறைந்தது 1 திரும்ப வேண்டும். 

00:21:45.218 --> 00:21:58.565
நாம் பார்த்த உதாரணத்திற்கு திரும்பிச் சென்றால், GCD 101.2 ஐ பார்த்தால், வித்தியாசத்தை பயன்படுத்தி அதை செய்தால், நாம் சுமார் 50 படிகளை எடுத்தோம் என்று சொன்னோம். 

00:21:58.565 --> 00:22:03.409
இப்போது நாம் மீதமுள்ளதைச் செய்தால், r என்பது 1 ஆகும் என்பதை நான் நேரடியாகக் கண்டுபிடிப்பேன். 

00:22:03.409 --> 00:22:06.753
நான் 101 ஐ 2 ஆகப் பிரித்தால், அது 50 முறை மீதமுள்ள 1 ஆகப் போகிறது. 

00:22:06.753 --> 00:22:10.329
எனவே ஒரு படி, நான் GCD 2, இன் 1 மற்றும் நான் 1 கிடைக்கும். 

00:22:10.329 --> 00:22:19.952
எனவே, நீங்கள் காட்ட முடியும் என்னவென்றால், மீதமுள்ள இந்த பதிப்பு உண்மையில் எண்களின் எண்ணிக்கையுடன் விகிதமான நேரத்தை எடுக்கும். 

00:22:19.952 --> 00:22:24.788
எனவே நான் ஒரு 100 இலக்க எண்ணைக் கூறினால், அது சுமார் 100 படிகள் எடுக்கும். 

00:22:24.788 --> 00:22:33.047
உதாரணமாக, ஒரு பில்லியன் எண் இருந்தால், ஒரு பில்லியன் 10 முதல் 9 வரை இருக்கும், அது 10 இலக்கங்கள் இருக்கும். 

00:22:33.047 --> 00:22:40.731
நான் ஒரு முட்டாள்தனமான வழிமுறையை செய்தால், அது ஒரு பில்லியன் படிகளின் எண்ணிக்கையை ஒரு பில்லியன் படிகள் என்ற எண்ணிக்கையுடன் ஒரு நிலையான முறை எடுக்கும். 

00:22:40.731 --> 00:22:50.340
ஆனால் இந்த அல்காரிதம், 10 முதல் 9 வரை 10 இலக்கங்கள் இருப்பதால், அது 10 படிகள் மட்டுமே எடுக்கும் என்று கூறுவதால், 

00:22:50.340 --> 00:22:53.911
எனவே இந்த பதிப்பில் செயல்திறன் கணிசமாக மேம்படுத்தப்பட்டுள்ளது. 

00:22:53.911 --> 00:22:57.638
எனவே இந்த பாடத்தை நாம் செய்யும் போது இதைப் பற்றி பேசலாம். 

00:22:57.638 --> 00:23:00.921
எனவே இந்த பாடத்திட்டம் நிரலாக்க, தரவு அமைப்பு மற்றும் வழிமுறைகள் பற்றி. 

00:23:00.921 --> 00:23:11.457
எனவே, ஒரு திட்டத்தில் ஒரு குறிப்பிட்ட யோசனையை விரிவுபடுத்துவதற்கான சிறந்த வழி என்னவென்று நிரலாக்கப் பகுதியில் பேசப்படுகிறது, அது சரியானது மற்றும் படிக்கவும் பராமரிக்கவும் எளிதானது என்பதை உறுதிப்படுத்த எளிதான வழி. 

00:23:11.457 --> 00:23:13.212
எனவே, இதுவே நிரலாக்கப் பகுதி. 

00:23:13.212 --> 00:23:17.951
எப்படி எழுதுகிறீர்கள், உங்கள் கருத்துக்களை மிக தெளிவாக வெளிப்படுத்துகிறீர்கள்? 

00:23:17.951 --> 00:23:23.293
ஆனால் யோசனை தெளிவாக இருக்க வேண்டும், அதுதான் தரவு அமைப்புகளும் வழிமுறைகளும் வருகின்றன. 

00:23:23.293 --> 00:23:30.340
எனவே நீங்கள் அழகான நாவல் எழுதலாம், ஆனால் உங்களுக்கு எந்த யோசனைகளும் இருக்காது அல்லது உங்களுக்கு மிகவும் பிரகாசமான யோசனைகள் இருக்கலாம், ஆனால் நீங்கள் உங்களைத் தொல்லை தராமல் வெளிப்படுத்தலாம். 

00:23:30.340 --> 00:23:31.928
அவற்றில் எதுவுமே உகந்தவை அல்ல. 

00:23:31.928 --> 00:23:34.692
இது வேறு எந்த மொழியிலும் எழுதுவது போல. 

00:23:34.692 --> 00:23:41.098
எனவே நீங்கள் வெளிப்படுத்தும் சிறந்த யோசனைகள் இருக்கலாம், ஆனால் அவற்றை நீங்கள் பேசும் நபருக்கு தெரிவிக்க முடியாவிட்டால், யோசனைகள் அவற்றின் தாக்கத்தை இழக்கின்றன. 

00:23:41.098 --> 00:23:44.340
எனவே உங்களுக்கு யோசனைகள் தேவை, அவற்றை வெளிப்படுத்த ஒரு மொழி தேவை. 

00:23:44.340 --> 00:23:50.340
எனவே நிரலாக்கமானது இந்த யோசனைகளை வெளிப்படுத்துவதுதான், ஆனால் யோசனைகள் தங்களை அல்காரிதம்களிலிருந்தும் தரவு அமைப்புகளிலிருந்தும் வருகின்றன.

2024-01-26 16:43:33,537 - ERROR - synthesize - Line 256 - Exception occurred: list index out of range. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
மேலும் திட்டமிடல் தொடர்பான பிரச்சினைகளை ஆராய GCD-யின் தற்போதைய உதாரணத்துடன் தொடரலாம். 

00:00:10.300 --> 00:00:29.640
GCD இன் அடிப்படை வரையறைக்கு நாங்கள் தொடங்கி, முதலில் M இன் அனைத்து காரணிகளையும் கணக்கிட்டு, ஒரு பட்டியலில் சேமிக்க வேண்டும், N இன் அனைத்து காரணிகளையும் கணக்கிட்டு, மற்றொரு பட்டியலில் சேமிக்க வேண்டும், இந்த இரண்டு பட்டியல்களிலிருந்து பொதுவான காரணிகளின் பட்டியலை பிரித்தெடுக்கவும், இந்த பொதுவான காரணிகளின் பட்டியலில் மிகப்பெரிய ஒன்றை அறிக்கை செய்யவும். 

00:00:29.680 --> 00:00:53.580
எமது முதல் எளிமைப்படுத்தல் நாம் உண்மையில் 1 முதல் குறைந்தபட்ச M மற்றும் N வரை ஒரு பாஸ் செய்ய முடியும் என்று கவனித்தது மற்றும் முதலில் தனித்தனியாக M மற்றும் N காரணிகள் கணக்கிடாமல் பொதுவான காரணிகள் பட்டியலை நேரடியாக கணக்கிட முடியும். பின்னர் நாம் பொதுவான காரணிகளின் பட்டியலை கூட தேவையில்லை என்று கவனித்தோம், ஏனெனில் நமது ஆர்வம் மிகப்பெரிய பொதுவான காரணி அல்லது மிகப்பெரிய பொதுவான வகுப்பான் மட்டுமே. 

00:00:53.580 --> 00:01:03.040
எனவே நாம் இதுவரை பார்த்த மிகப்பெரிய பொதுவான காரணிகளை ஒரே பெயரில் கண்காணித்து அதை இறுதியில் தெரிவிக்கலாம். 

00:01:03.040 --> 00:01:11.320
எங்கள் இறுதி எளிமைப்படுத்தல், நாம் மிகப்பெரிய பொதுவான காரணி பற்றி ஆர்வமாக இருந்தால், ஆரம்பத்தில் அல்ல, இறுதியில் தொடங்குவோம் என்பதைக் குறிப்பிடுவது. 

00:01:11.320 --> 00:01:20.140
எனவே 1 முதல் M மற்றும் N குறைந்தபட்ச வரை வேலை செய்யாமல், குறைந்தபட்ச M மற்றும் N முதல் 1 வரை வேலை செய்யாமல், 

00:01:20.140 --> 00:01:25.200
நாம் ஒரு பொதுவான காரணி கண்டுபிடிக்க, உடனேயே, நாம் அதை அறிக்கை மற்றும் வெளியேற. 

00:01:25.440 --> 00:01:29.760
1 என்பது பொதுவான காரணி என்று எப்போதும் நினைவில் கொள்ளுங்கள். 

00:01:29.760 --> 00:01:41.320
எனவே நாம் குறைந்தபட்ச M மற்றும் N இலிருந்து தொடங்கி பின்வாங்கினால், வேறு எந்த பொதுவான காரணிகளையும் காணவில்லை என்றால், நாம் 1 ஐ அழுத்தும்போது சரியாக வெளியேறுவோம் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:01:41.320 --> 00:02:07.180
எனவே நாம் கவனித்த விஷயம் என்னவென்றால், இந்த வெவ்வேறு பதிப்புகள் முந்தைய பதிப்புகளை விட எளிமையானவை என்றாலும், அவை அனைத்தும் கணக்கீட்டு அடிப்படையில் ஒரே செயல்திறனைக் கொண்டுள்ளன, அதாவது அவை முன்னோக்கி அல்லது பின்புறமாக வேலை, செய்தாலும், நாம் மிகப்பெரிய பொதுவான காரணிகளைக் கண்டுபிடிப்பதற்கு முன் 1 மற்றும் குறைந்தபட்ச M மற்றும் N இடையிலான அனைத்து எண்களையும் இயங்க கட்டாயப்படுத்துகின்றன. 

00:02:07.220 --> 00:02:23.540
எனவே, பண்டைய கிரேக்கர்களின் காலத்தில், நவீன காலமொழிகளில் முதல் வழிமுறை என்னவென்றால், அதை யூகிலிட் கண்டுபிடித்தார், அது இந்த பிரச்சனைக்கு GCD. 

00:02:23.740 --> 00:03:20.940
நாம் ஒரு பிளவு D என்று வைத்துக்கொள்வோம், இது M மற்றும் N இரண்டையும் பிளவுபடுத்துகிறது. எனவே இது ஒரு பொதுவான வகுப்பான் மற்றும் நாம் பெரிய போன்ற D தேடும். M என்பது N ஐ விட பெரியது என்று வாதத்திற்காக நாம் கருதுவோம் எனவே, D M மற்றும் N இரண்டையும் பிரிக்கினால், நாம் M ஐ A முறை D மற்றும் N ஐ B முறை D என எழுதலாம். சில மதிப்புகளுக்கு A மற்றும் B எனவே M என்பது D இன் பலமாகும், எனவே N எனவே நாம் இடது பக்கத்தை, சமன்பாடுகளை கழித்தால், இடது பக்கமானது M. - N. ஆகும் எனவே நாம் M. எடுத்து N. M. இருந்து குறைக்க எனவே, நாம் AD. இருந்து BD குறைக்க எனவே M. - N. சமம் AD. - BD. ஆனால் D. என்பது பொதுவான சொல். என்பதால், இதன் பொருள் M. - N. என்பது A - B. முறை D. எனவே இங்குதான். நாம் M. N. ஐ விட பெரியது என்று வைத்துக்கொள்வோம் எனவே A - B. ஒரு நேர்மறை எண் 

00:03:20.940 --> 00:04:05.589
ஆனால் M - N என்பது D இன் பலமாகும். அதாவது, D, M மற்றும் N இரண்டையும் பிரிக்கினால், அது N - N ஐப் பிரிக்கவும். D என்பது M மற்றும் N இன் மிகப்பெரிய வகுப்பான் என்பதால், D என்பது மிகப்பெரிய வகுப்பான் என்பதையும் வெளிப்படுத்துகிறது, இது N மற்றும் N - N க்கு பொதுவானது. வேறு வார்த்தைகளில் கூறுவதானால், M மற்றும் N இன் GCD இரண்டு சிறிய எண்களின் GCD, அதாவது N, மற்றும் இரண்டு, M மற்றும் N, M - N இன் வேறுபாடு போன்றது எனவே நாம் இந்த பயன்படுத்த முடியும் கணிசமாக எளிதாக்க GCD கண்டுபிடிக்கும் செயல்முறை எனவே இங்கே யூக்லிட்டின் அல்காரிதம் முதல் பதிப்பு 

00:04:05.589 --> 00:04:20.673
எனவே, M, N இன் GCD மதிப்பைக் கருத்தில் கொள்ளுங்கள், M N ஐ விட பெரியது என்று வைத்துக்கொள்வோம். எனவே, N ஏற்கனவே M இன் பிளவு என்றால், நாம் முடித்துவிட்டு N ஐ திருப்பித் தருகிறோம். இல்லையெனில், நாம் சிக்கலை புதியதாக மாற்றுகிறோம். 

00:04:20.713 --> 00:04:33.740
M மற்றும் N இன் GCD ஐ கணக்கிடுவதற்குப் பதிலாக, N மற்றும் M, - N இன் GCD ஐ கணக்கிட்டு அந்த மதிப்பைத் திருப்பிக் கொடுப்போம். 

00:04:33.780 --> 00:04:37.039
எனவே இங்கே இந்த யோசனையின் பைதான் செயல்படுத்தல் உள்ளது. 

00:04:37.039 --> 00:04:46.620
இந்த புதிய அம்சங்கள் சில இங்கே அறிமுகப்படுத்தப்பட்டுள்ளன. முதலில், இந்த சிறப்பு அறிக்கை, 

00:04:48.380 --> 00:04:55.380
Python இல், இந்த வகையான அறிக்கை ஒரு கருத்து என்று அழைக்கப்படுகிறது. 

00:04:57.780 --> 00:05:04.137
எனவே ஒரு கருத்து என்பது ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு நிகழ்ச்சியைப் படிக்கும் ஒருவருக்கு என்ன நடக்கிறது என்பதை விளக்குவதற்காக ஒரு நிகழ்ச்சியில் நீங்கள் ஒரு அறிக்கையை வைக்கிறீர்கள். 

00:05:04.137 --> 00:05:08.015
ஆனால், அதை நிரலை இயக்கும் கணினி புறக்கணிக்கிறது. 

00:05:08.015 --> 00:05:15.220
எனவே இந்த அறிக்கை நாம் M. N. ஐ விட பெரியது அல்லது சமம் என்று கருதுகிறோம் என்று கூறுகிறது. 

00:05:16.260 --> 00:05:20.424
இந்த திட்டம் தொடரும் போது, இதுவே கருத்தாகும். 

00:05:20.424 --> 00:05:25.349
நிச்சயமாக, GCD ஐ அழைக்கும் நபருக்கு இதை உணர முடியாது. 

00:05:25.349 --> 00:05:29.413
எனவே அவர்கள் அதை M. N. ஐ விட சிறியதாகக் கொண்டு அழைக்கலாம். எனவே அதை சரிசெய்வோம். 

00:05:29.413 --> 00:05:34.100
எனவே இது பைதான்க்கு சொந்தமான ஒரு சிறப்பு வகை பணி. 

00:05:34.140 --> 00:05:37.003
மற்ற நிரலாக்க மொழிகளில் இது இல்லை. 

00:05:37.003 --> 00:05:44.257
எனவே நாம் செய்ய விரும்புவது, M மற்றும் N மதிப்புகளை எடுத்து அவற்றை பரிமாறிக்கொள்ள வேண்டும். 

00:05:44.257 --> 00:05:56.528
எனவே நாம் M இன் புதிய மதிப்பை N இன் பழைய மதிப்பாகவும், N இன் புதிய மதிப்பை M இன் பழைய மதிப்பாகவும் மாற்ற வேண்டும், எனவே M மற்றும் N தவறான வரிசையில் இருந்தால், அவற்றை மாற்றியமைப்போம். 

00:05:56.728 --> 00:06:02.963
எனவே இந்த பைதான் அறிக்கை என்ன செய்கிறது என்பது ஒரு ஜோடி மதிப்புகளை எடுத்து அது ஒரு சமகால ஒதுக்கீட்டை செய்கிறது. 

00:06:02.963 --> 00:06:19.588
எனவே, N இன் மதிப்பு M இன் மதிப்புக்குள் செல்கிறது மற்றும் M இன் மதிப்பு N இன் மதிப்புக்குள் செல்கிறது. இப்போது அது ஒரே நேரத்தில் செய்யப்படுகிறது முக்கியம். ஏனெனில் நீங்கள் அதை செய்ய என்றால், நீங்கள் முதலில் N மதிப்பு M நகலெடுக்க என்றால், பின்னர் பழைய மதிப்பு M இழக்கப்படுகிறது. 

00:06:19.588 --> 00:06:25.834
எனவே நீங்கள் பழைய மதிப்பை M இன் புதிய மதிப்பில் நகலெடுக்க முடியாது, ஏனெனில் நீங்கள் அதை இழந்துவிட்டீர்கள். 

00:06:25.834 --> 00:06:35.400
நீங்கள் இரண்டு கப் தண்ணீரை வைத்துள்ளீர்கள், அவற்றின் உள்ளடக்கத்தை பரிமாறிக்கொள்ள விரும்புகிறீர்கள். இப்போது நீங்கள் இடம் உருவாக்க வேண்டும். 

00:06:36.960 --> 00:06:39.832
அதை விட்டுவிடுவதற்கு முன் இதை அதில் ஊற்ற முடியாது. 

00:06:39.832 --> 00:06:42.571
அதை நீ விட்டால், அதை அதில் ஊற்ற முடியாது. 

00:06:42.571 --> 00:06:43.899
எனவே நீங்கள் ஒரு மூன்றாவது கப் பொதுவாக வேண்டும். 

00:06:43.899 --> 00:06:46.411
எனவே நீங்கள் முதலில் இதை இங்கு மாற்ற வேண்டும் மற்றும் அதை பாதுகாப்பாக வைக்க வேண்டும். 

00:06:46.411 --> 00:06:49.703
பின்னர் நீங்கள் அதை அங்கு மாற்ற வேண்டும் மற்றும் பின்னர் நீங்கள் அதை மீண்டும் நகலெடுக்க வேண்டும். 

00:06:49.703 --> 00:06:54.140
எனவே, பெரும்பாலான நிரலாக்க மொழிகள் இரண்டு மதிப்புகளை பரிமாறிக்கொள்ளும் வழியைக் காட்டுகின்றன. 

00:06:54.140 --> 00:06:59.354
ஆனால் பைதான் ஒரு அழகான அம்சத்தைக் கொண்டுள்ளது, இதன் மூலம் நீங்கள் ஒரு ஜோடி மதிப்புகளை எடுத்து அவற்றை ஒரே நேரத்தில் புதுப்பிக்க முடியும். 

00:06:59.394 --> 00:07:08.634
குறிப்பாக, இந்த ஒரே நேரத்தில் புதுப்பித்தல், இந்த கூடுதல் தற்காலிக இடத்தை ஒரு மதிப்பைப் பிரிப்பதற்கு கவலைப்படாமல் மதிப்புகளை பரிமாறிக்கொள்ள அனுமதிக்கிறது. 

00:07:08.634 --> 00:07:16.565
எப்படியிருந்தாலும், இந்த முதல் பகுதி நாம் கருதிக் கொண்டிருக்கும் இந்த நிபந்தனை பூர்த்தி செய்யப்படுவதை உறுதி செய்வதே ஆகும். 

00:07:16.565 --> 00:07:19.620
இப்போது நாம் அல்போரிதம் மையம் வந்து. 

00:07:19.620 --> 00:07:33.480
எனவே N M ஐப் பிரிக்கினால், அது M இன் மீதமுள்ள பகுதி N ஐப் பிரிக்கினால் 0 ஆகும், பின்னர் N ஐ GCD என்று கண்டுபிடித்தோம், பின்னர் N ஐ திருப்பித் தருகிறோம். 

00:07:34.120 --> 00:07:35.440
கடைசி ஸ்லைடு. 

00:07:35.440 --> 00:07:47.280
இப்போது நாம் N இன் GCD மற்றும் வேறுபாடு M. - N ஐ கணக்கிடப் போகிறோம். எனவே நாம் N மற்றும் N - N இன் GCD ஐ கணக்கிட விரும்புகிறோம். எனவே நாம் கணக்கிட 

00:07:48.640 --> 00:07:52.820
M. - N. என வேறுபாடு. இதை நாம் பயன்படுத்தலாம். 

00:07:52.820 --> 00:08:02.240
ஆனால் M என்றால் 97 எனவும், N என்றால் 2 எனவும் சொல்லலாம், வித்தியாசம் 95 ஆக இருக்கும். 

00:08:03.400 --> 00:08:08.922
N ஐ விட பெரியது. நாம் இந்த செயல்பாட்டை பெரிய எண் விட பெரிய முதல் எண் கொண்ட ஒரு செயல்பாட்டை அழைக்க விரும்புகிறோம். 

00:08:08.922 --> 00:08:12.780
எனவே, நமது செயல்பாடு இதை கவனித்துக்கொள்ளும் என்றாலும், இதை நாம் உறுதி செய்வோம். 

00:08:12.780 --> 00:08:23.109
நாம் செய்ய விரும்புவது, நாம் N மற்றும் M - N உடன் GCD ஐ அழைக்க வேண்டும், அதற்கு பதிலாக, நாம் N இன் அதிகபட்ச மதிப்பு மற்றும் வித்தியாசம் முதல் வாதம் மற்றும் N இன் குறைந்தபட்ச மதிப்பு மற்றும் வித்தியாசம் கொண்ட GCD ஐ அழைப்போம். 

00:08:23.109 --> 00:08:28.180
எனவே, இரண்டு மதிப்புகளில் பெரியது முதலில், மற்றும் சிறியது முதலில் செல்லும் என்பதை உறுதிப்படுத்தும். 

00:08:28.220 --> 00:08:33.781
இந்த GCD எதுவாக இருந்தாலும், இந்த செயல்பாடு என்னவாக இருக்கும் என்பதை புதிய GCD திரும்பப் பெறுகிறது. 

00:08:33.781 --> 00:08:42.460
எனவே இது நாம் பின்னர் பார்ப்போம் என்பதற்கு ஒரு எடுத்துக்காட்டு, இது மிகவும் இயற்கையானது, இது மீளுருவாக்கம் என்று அழைக்கப்படுகிறது. 

00:08:43.060 --> 00:08:52.878
அதாவது, நாம் ஒரு சிறிய பிரச்சினையை தீர்த்து, அந்த பதிலைப் பயன்படுத்தி, இந்த வழக்கில் நேரடியாக, நமது தற்போதைய பிரச்சினையின் பதிலைப் புகாரளிக்கப் போகிறோம். 

00:08:52.878 --> 00:09:06.496
எனவே நாம் M மற்றும் N இன் GCD ஐ தீர்க்க விரும்புகிறோம். ஆனால் M மற்றும் N இன் GCD, அதற்கு பதிலாக நாம் N மற்றும் M - N இன் GCD ஐ தீர்க்கிறோம். 

00:09:06.536 --> 00:09:11.881
எனவே நாம் சிறிய மதிப்புகளுடன் செயல்பாட்டை அழைத்து பின்னர் அதை திரும்ப. 

00:09:11.881 --> 00:09:16.233
இப்போது நீங்கள் ஒரு மறுபரிசீலனை அழைப்பு செய்ய இந்த போன்ற, அது ஒரு நேரம் சுழற்சி போன்றது. 

00:09:16.233 --> 00:09:17.996
அது மீண்டும் செயல்பாட்டை அழைக்கும். 

00:09:17.996 --> 00:09:20.474
அது ஒரு சிறிய செயல்பாட்டைக் கொண்டு வரும். 

00:09:20.474 --> 00:09:31.390
நீங்கள் இந்த வரிசையில் GCD தொடர்ந்து GCD அழைக்கும் போது, வேறு மதிப்புகள் ஒரு முடிவற்ற முன்னேற்றம் ஒரு நிறுத்த புள்ளி இல்லாமல் பெற முடியாது என்று உறுதி செய்ய வேண்டும். 

00:09:31.430 --> 00:09:40.300
எனவே, முறையாக, நாம் உறுதி செய்ய வேண்டும் என்ன இந்த உத்தரவாதம் கண்டுபிடிக்க ஒரு N பிளவு N. எனவே இங்கே GCD. 

00:09:41.980 --> 00:09:43.853
உண்மையில் தன்னை அழைத்து இல்லாமல் வெளியே செல்கிறது. 

00:09:43.853 --> 00:09:47.262
எனவே, நாம் இறுதியில் இந்த நிலைக்கு வருவதை உறுதி செய்ய வேண்டும். 

00:09:47.262 --> 00:09:54.071
இப்போது நீங்கள் இங்கே பார்த்தால் என்ன நடக்கிறது என்பது GCD க்கு அனுப்பப்படும் மதிப்புகள் சிறியதாகவும் சிறியதாகவும் மாறி வருகின்றன. 

00:09:54.071 --> 00:09:56.222
இப்போது நாம் M. - N. க்கு என்ன பெற முடியும்? 

00:09:56.222 --> 00:09:57.717
அது என்ன மதிப்பு? 

00:09:57.717 --> 00:09:58.960
அது பூஜ்ஜியமாக இருக்க முடியுமா? 

00:09:58.960 --> 00:10:10.508
M, - N என்றால் N. M என்றால் N. M என்றால் N. M என்றால் N. M என்பது N. 

00:10:10.508 --> 00:10:11.843
எனவே அது பூஜ்ஜியமாக இருக்க முடியாது. 

00:10:11.843 --> 00:10:13.542
எனவே அது குறைந்தது ஒரு இருக்க வேண்டும். 

00:10:13.542 --> 00:10:17.478
எனவே நாம் இந்த செயல்பாடு M. - N என்று அழைக்கும் போது குறைந்தது ஒன்று. 

00:10:17.478 --> 00:10:21.589
மறுபுறம், ஒவ்வொரு முறையும் நாம் சிறிய மதிப்புகளை அடைகிறோம். 

00:10:21.589 --> 00:10:25.443
எனவே நாம் சில மதிப்புடன் தொடங்குகிறோம் மற்றும் M. -N. தொடர்ந்து குறைகிறது. 

00:10:25.443 --> 00:10:27.990
அது உண்மையில் ஒரு அடையும் போது என்ன நடக்கும்? 

00:10:27.990 --> 00:10:31.700
அது ஒரு எண் வரை சென்றால், மற்ற எண்களை நாம் பிரிக்கலாம். 

00:10:31.700 --> 00:10:37.330
எனவே M சதவீதம் N அல்லது M N ஆல் பிரிக்கப்பட்டால், மீதமுள்ளவை 1 ஆக இருக்கும், அது 0 ஆக இருக்கும். 

00:10:37.330 --> 00:10:39.420
எனவே அது உங்கள் பூஜ்ஜியத்தை திருப்பித் தருகிறது. 

00:10:39.420 --> 00:10:52.180
வேறு வார்த்தைகளில் கூறுவதானால், இந்த செயல்பாடு, நாம் செயல்பாட்டை அழைக்கும் எண்ணிக்கையை குறைக்க தொடர்ந்து இருப்பதால், இறுதியில் GCD முடிவடையும் ஒரு அழைப்பை உருவாக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:10:55.020 --> 00:10:57.199
எனவே இது மிகவும் முக்கியமானது, பின்னர் இதைப் பற்றி பேசுவோம். 

00:10:57.199 --> 00:11:06.389
ஆனால் நீங்கள் இந்த வகை செயல்பாட்டை எழுதும்போது, நீங்கள் எங்கிருந்து தொடங்குகிறீர்களோ, அங்கு ஒரு முடிவான எண்ணிக்கையிலான படிகளில் அடையப்படும் ஒரு அடிப்படை வழக்கு இருப்பதை உறுதி செய்ய வேண்டும். 

00:11:06.429 --> 00:11:19.826
எனவே இது யூகிளிட்டின் அல்காரிதம், முதல் பதிப்பு, அங்கு நாம் M மற்றும் N இன் GCD, N மற்றும் M கழித்து N இன் GCD மாற்ற முடியும் என்று கவனிக்கிறோம். இந்த குறிப்பிட்ட நடைமுறைப்படுத்தலில் நாம் பார்த்தது இரண்டு விஷயங்கள். 

00:11:19.826 --> 00:11:21.304
ஒன்று, மூன்று விஷயங்கள். 

00:11:21.304 --> 00:11:23.872
ஒரு கருத்தை நமது குறியீட்டில் எவ்வாறு வைக்க வேண்டும் என்பதை நாம் பார்த்திருக்கிறோம். 

00:11:23.872 --> 00:11:30.042
பைதான் இரண்டு மாறிகளை ஒரே நேரத்தில் புதுப்பிக்கும் வகையில் செயல்படுகிறது என்பதை நாம் கண்டிருக்கிறோம். 

00:11:30.042 --> 00:11:39.833
எனவே M கோமா N M கோமா N க்கு சமம். மேலும் தற்போதைய செயல்பாட்டை கணக்கிட அதே செயல்பாட்டை புதிய வாதங்களுடன் பயன்படுத்தலாம் என்பதை நாம் கண்டோம். 

00:11:39.833 --> 00:11:49.263
எனவே M மற்றும் N இன் GCD ஐ கணக்கிட, நான் வேறு சில மதிப்புகளின் GCD ஐ கணக்கிட வேண்டும் என்று சொல்ல எந்த பிரச்சனையும் இல்லை, மற்றும் அந்த பதிலை என் பதிலை திரும்ப பயன்படுத்த. 

00:11:49.263 --> 00:11:57.757
எனவே இந்த அல்காரிதம் ஒரு வித்தியாசமான பதிப்பைப் பார்ப்போம், அங்கு நாம் ஒரு சைட் சுழற்சியால் மீள் அழைப்பை மாற்றுகிறோம். 

00:11:57.757 --> 00:12:06.175
எனவே நாம் எமது நிலையான வழிமுறைகளின் கடைசி பதிப்பில் M புள்ளி N முதல் 1 வரை குறைந்தது இருந்து பின் எண்ணும் போது பார்த்தோம். 

00:12:06.575 --> 00:12:10.650
எனவே நான் 0 க்கு மேல் இருக்கிறேனா என்று தொடர்ந்து சரிபார்த்து, தொடர்ந்து குறைந்து கொண்டோம். 

00:12:10.650 --> 00:12:13.281
சரி, இங்கே நாம் ஒரு சில நேரம் பயன்படுத்தி மீள்வினை செய்கிறோம். 

00:12:13.281 --> 00:12:20.168
முதலில் நான் கவனிக்க வேண்டியது, நான் ஒரு வரி, இறுதியில் ஒரு தனி வரிசையில் இருந்த இந்த கருத்தை நகர்த்தியுள்ளேன். 

00:12:20.168 --> 00:12:27.340
எனவே பைதான் என்ன சொல்கிறது என்றால், ஒரு ஹாஷ் இருந்தால், மற்ற வரிகளை புறக்கணிக்க முடியும். 

00:12:27.340 --> 00:12:31.307
எனவே இந்த வரி படித்து, அது ஒரு செல்லுபடியாகும் நிபந்தனை மற்றும் பின்னர் அது ஒரு ஹாஷ் பார்க்கிறது. 

00:12:31.307 --> 00:12:35.720
எனவே, இந்த அறிக்கை Python நிரலில் செயல்படும் போது ஒரு பகுதியாக இல்லை. 

00:12:35.720 --> 00:12:39.203
ஒரு கருத்து தனி வரிசையில் இருக்கலாம் அல்லது ஒரு வரிசையின் முடிவாக இருக்கலாம். 

00:12:39.203 --> 00:12:46.758
நிச்சயமாக, நீங்கள் Python செயல்படுத்த வேண்டும் என்று எதையும் இந்த பிறகு வைக்க முடியாது என்பதை நினைவில் கொள்ள வேண்டும், ஏனெனில் அது ஒரு ஹாஷிங் பார்க்க ஒருமுறை, மற்ற வரி புறக்கணிக்கப்படும். 

00:12:46.758 --> 00:12:48.340
எனவே அது ஒரு வரி முடிவாக இருக்க முடியாது. 

00:12:48.340 --> 00:12:49.823
மீதமுள்ள வரிசையை புறக்கணிக்கப் போகிறோம். 

00:12:49.823 --> 00:12:51.205
எனவே அது ஒரு வரிசையின் நடுவில் இருக்க முடியாது. 

00:12:51.205 --> 00:12:53.340
ஒரு வரிசையின் நடுவில் ஒரு கருத்தை வைக்க முடியாது. 

00:12:53.340 --> 00:12:57.200
ஆனால் நீங்கள் அதை ஒரு தனி வரிசையில் வைக்கலாம், அல்லது நீங்கள் அதை ஒரு வரி இறுதியில் வைக்கலாம். 

00:12:57.200 --> 00:12:59.816
எப்படியோ, இது எங்கள் கருத்து, முன்பு போல. 

00:12:59.816 --> 00:13:04.441
எனவே, இதுவரை நான் கருத்துகளை மாற்றியமைத்ததைத் தவிர வேறு எந்த மாற்றமும் இல்லை. 

00:13:04.441 --> 00:13:09.316
இப்போது நாம் ஒரு கணக்கீட்டைச் செய்ய வேண்டிய கட்டத்தில் இருக்கிறோம். 

00:13:09.316 --> 00:13:17.987
எனவே, இந்த கட்டத்தில், N M ஐப் பிரிக்கும் N ஐ நாம் கண்டால், நாம் முடித்து N ஐ நேரடியாக திருப்பிக் கொடுக்கலாம். எனவே, நமது மறுபரிசீலனைக் குறியீடு இதைச் செய்யும். 

00:13:17.987 --> 00:13:21.340
நாம் இதுபோன்ற Nஐ கண்டுபிடிக்கவில்லை என்றால், நாம் சில வேலைகளைச் செய்ய வேண்டும். 

00:13:21.340 --> 00:13:26.806
எனவே M பிரிக்கப்பட்ட N உண்மையில் ஒரு மீதமுள்ள உற்பத்தி செய்கிறதா என்பதை சரிபார்க்க வேண்டும். 

00:13:26.806 --> 00:13:31.482
எனவே இந்த அடையாளம் இந்த உச்சரிப்பு அடையாளத்துடன் எழுதப்பட்டுள்ளது. 

00:13:31.482 --> 00:13:35.038
எனவே இது கணித சமம் அல்ல. 

00:13:35.038 --> 00:13:40.187
இந்த இரட்டை சமம் என்பது சமத்துவத்தின் கணித அடையாளமாக நாம் பயன்படுத்தியதாக நினைவில் கொள்ளுங்கள். 

00:13:40.187 --> 00:13:43.010
எனவே இது சமமாக இல்லை என்பதற்கான அடையாளம். 

00:13:43.010 --> 00:13:49.700
எஞ்சியிருக்கும் வரை, எஞ்சியிருக்கும் எண் M பிரிக்கப்பட்டால் N என்பது 0 ஆகாது, நாம் முன்பு செய்ததைச் செய்வோம். 

00:13:49.700 --> 00:13:59.173
நாம் வித்தியாசத்தை கணக்கிட்டு M ஐ இரண்டு மதிப்புகளில் அதிகபட்சமாகவும், N ஐ இரண்டு மதிப்புகளில் சிறியதாகவும் மாற்றுவோம். 

00:13:59.173 --> 00:14:11.340
எனவே நாம் ஒரு ஜோடி M, N அதன் GCD நாம் M. N விட பெரியது என்று வைத்து கண்டுபிடிக்க முயற்சி. ஒவ்வொரு அடியிலும், நாம் N மற்றும் வித்தியாசத்தின் பெரிய M மற்றும் N மற்றும் வித்தியாசத்தின் சிறிய N மற்றும் சிறிய N மூலம் மாற்ற. 

00:14:11.340 --> 00:14:14.071
எனவே, இந்த மறுபரிசீலனை குறியீட்டில் நாம் செய்வது இதுதான். 

00:14:14.071 --> 00:14:16.803
நாம் சொல்லும் போதே நாம் கணக்கிடும் என்று GCD என்று. 

00:14:16.803 --> 00:14:41.828
எனவே இந்த போது சுழற்சியில், நாம் M, N இன் கணக்கீட்டை M, N இன் GCD உடன் மாற்ற வேண்டும் என்று சொல்கிறோம், N இன் அதிகபட்ச N வேறுபாடு மற்றும் குறைந்தபட்ச N இன் கணக்கீட்டை N உண்மையில் N ஐப் பிரிக்கும் நிலை வரும் வரை இதைச் செய்யத் தொடங்குவோம். நாம் சொன்னது போலவே, மறுபரிசீலனை வழக்கில், ஒரு எல்லை வழக்கு இருக்கும், இதில் மிக மோசமான வழக்கில் N 1 ஆக மாறும், 1 எல்லாவற்றையும் பிரிக்கும். 

00:14:41.828 --> 00:14:44.362
அதேபோல், இங்கே வித்தியாசம் தொடர்ந்து குறைந்து கொண்டே இருக்கும். 

00:14:44.362 --> 00:14:48.363
வித்தியாசம் பூஜ்ஜியமாக இருக்க முடியாது, ஏனெனில் வித்தியாசம் பூஜ்ஜியமாக இருந்தால், அது பிரிக்கப்படும். 

00:14:48.363 --> 00:14:52.710
எனவே வித்தியாசம் அதிகபட்சம் 1 ஆக குறைந்து 1 ஆக இருக்கும் போது முடிந்துவிடும். 

00:14:52.710 --> 00:14:57.408
எனவே இது நாம் முன்பு எழுதிய அதே மறுபரிசீலனை செயல்பாட்டின் ஒரு சமகால பதிப்பு. 

00:14:57.408 --> 00:15:06.785
எனவே, அது உதவுகிறது என்றால், நீங்கள் இந்த பக்கங்களுடன் பார்க்கலாம் மற்றும் மறுபரிசீலனை செய்யும் பொருள் என்ன செய்கிறது மற்றும் இடைநிலை என்ன செய்கிறது என்பதை புரிந்து கொள்ள முயற்சி செய்யலாம் மற்றும் அவர்கள் அடிப்படையில் அதே விஷயத்தை செய்கிறார்கள் என்பதை பார்க்கலாம். 

00:15:06.785 --> 00:15:19.744
இந்த மறுபடியும் முடிவடையும் என்ற கருத்து, நாம் முன்பு கூறியது போலவே உள்ளது. நீங்கள் ஒரு பிட் எழுதும்போது, நீங்கள் ஒரு பிட் தவறான பிட் நிலைக்கு முன்னேறுவதை உறுதி செய்ய வேண்டும். 

00:15:19.744 --> 00:15:36.340
எனவே நீங்கள் கவனமாக இல்லாவிட்டால் மற்றும் நீங்கள் அதை நிறுத்த உத்தரவாதம் வாதங்கள் மூலம் பயன்படுத்தி இல்லை என்றால், மீண்டும் மீண்டும் எப்போதும் நீடிக்கும் போலவே, நீங்கள் முன்னேற்றம் செய்யவில்லை என்றால் இடைவெளி நிலை இறுதியில் தவறாக மாறும் உறுதி செய்ய. 

00:15:41.340 --> 00:15:43.054
எனவே நாம் இதை விட சிறப்பாக செய்ய முடியும். 

00:15:43.054 --> 00:15:46.787
எனவே, ஒரு கை மரணதண்டனை செய்வதன் மூலம் ஒரு பிரச்சினையை பார்க்கலாம். 

00:15:46.787 --> 00:15:52.537
எனவே நாம் 101 மற்றும் 2 இன் GCD போன்ற எண்களுடன் தொடங்குவோம் என்று வைத்துக்கொள்வோம். 

00:15:52.537 --> 00:16:00.944
பின்னர் நமது அல்காரிதம், இது இப்போது வித்தியாசத்தின் gcd ஆகவும் n ஆகவும் மாற வேண்டும் என்று கூறுகிறது. 

00:16:00.944 --> 00:16:04.966
வித்தியாசம் 99 ஆகும், எனவே நமக்கு 99 மற்றும் 2 இருக்கும். 

00:16:04.966 --> 00:16:09.167
பின்னர் இது 97 மற்றும் 2 மற்றும் பலவற்றின் GCD ஆக மாறும். 

00:16:09.167 --> 00:16:18.661
எனவே நாம் 50 படிகள் தொடர்ந்து செய்ய வேண்டும். பின்னர் இறுதியில் நாம் 5 மற்றும் 2 மற்றும் பின்னர் 3 மற்றும் 2 ஆகியவற்றின் GCD ஆக வரும். 

00:16:18.661 --> 00:16:24.081
இப்போது நாம் வித்தியாசத்தை கணக்கிடுகிறோம், நாம் 2 மற்றும் 1 க்ஜிடி கிடைக்கும். 

00:16:24.081 --> 00:16:26.856
எனவே இப்போது வித்தியாசம் குறைவாகிவிடும். 

00:16:26.856 --> 00:16:30.482
இந்த நேரத்தில் நாம் பதிலை 1 என்று தெரிவிப்போம். 

00:16:30.482 --> 00:16:35.090
எனவே, 101 மற்றும் 2 இன் GCD செய்ய சுமார் 50 படிகள் ஆகும். 

00:16:35.090 --> 00:16:42.506
எனவே, இந்த புத்திசாலித்தனமான அணுகுமுறையை விமர்சிப்பது, எண்களே நேரத்தை ஒத்ததாக எடுக்கும். 

00:16:42.506 --> 00:16:47.898
நாம் m மற்றும் n எண்களை சேர்த்தால், நாம் m மற்றும் n இன் குறைந்தபட்சத்திற்கு சமமான பொதுவான படிகளின் எண்ணிக்கையை எடுப்போம். 

00:16:47.898 --> 00:16:52.592
இப்போது நாம் குறைந்தபட்சத்தை விட பெரிய படிகளை எடுத்து வருகிறோம், ஏனெனில் குறைந்தபட்சமானது 2 ஆகும். 

00:16:52.592 --> 00:16:59.603
நாம் கணக்கிடும் காரணிகள் என்றால், 2 என்ற ஒரே காரணி 2 என்று நாம் கூறலாம், அது 101 என்ற காரணி அல்ல, நாம் ஆரம்பத்தில் நிறுத்தப்பட்டிருப்போம். 

00:16:59.603 --> 00:17:04.901
எனவே இது சில சந்தர்ப்பங்களில் நமது முந்தைய வழிமுறைகளை விட மோசமாக நடக்கிறது. 

00:17:04.901 --> 00:17:07.931
எனவே, இங்கே ஒரு சிறந்த கவனிப்பு உள்ளது. 

00:17:07.931 --> 00:17:10.870
எனவே n. m. ஐப் பிரிக்கவில்லை என்று வைத்துக்கொள்வோம். 

00:17:10.870 --> 00:17:17.735
வேறு வார்த்தைகளில் கூறுவதானால், m. ஐ. n. ஆல் பிரிக்கினால், எனக்கு ஒரு விகிதமும் மீதமுள்ள விகிதமும் கிடைக்கும். 

00:17:17.735 --> 00:17:22.885
எனவே நான் n என எழுத முடியும். q x, n, + r அங்கு q என்பது குவாசகம் மற்றும் r என்பது மீதமுள்ள. 

00:17:22.885 --> 00:17:26.006
நீங்கள் உயர்நிலைக் கணிதத்தில் இருந்து இந்த சொற்களை நினைவில் வைத்திருக்கலாம். 

00:17:26.006 --> 00:17:32.188
எனவே n. m. q முறைக்கு சென்று, மீதமுள்ள r ஐ விட்டு விடுகிறது, r. n. ஐ விட சிறியதாக இருப்பதை உறுதி செய்கிறோம். 

00:17:32.188 --> 00:17:35.451
இல்லையெனில் அது ஒரு முறை செல்லும், அது q + 1 ஆக இருக்கும். 

00:17:35.451 --> 00:17:37.673
எனவே எஞ்சியுள்ள எண் r. n. ஐ விட சிறியதாக உள்ளது. 

00:17:37.673 --> 00:17:45.095
உதாரணமாக 7 எனில் 3ல் பிரிக்க விரும்பினால், இது 2 x 3 + 1 ஆகும். 

00:17:45.095 --> 00:17:47.731
எனவே இது எனது குவாசிண்டாகும், இது எனது மீதமுள்ளதாக இருக்கும். 

00:17:47.731 --> 00:17:53.090
முக்கியமானது என்னவென்றால், மீதமுள்ளவை நான் பகிர்ந்து கொள்ளும் அளவை விட எப்போதும் சிறியவை. 

00:17:53.090 --> 00:17:59.845
இப்போது நாம் முன் போல் நாம் m மற்றும் n இருவரும் ஒரு பொதுவான வகுப்பாளர் என்று வைத்துக்கொள்வோம். 

00:17:59.845 --> 00:18:10.756
வேறு வார்த்தைகளில் கூறுவதானால், முன்பு நாம் m தன்னை ஒரு முறை d மற்றும் n என b முறை d என எழுதலாம். சில எண்களுக்கு a மற்றும் b ஏனெனில் m என்பது d இன் பலமாகும், எனவே n ஆகும். 

00:18:10.756 --> 00:18:22.803
எனவே இதை மேலே உள்ள சமன்பாட்டில் இணைத்தால், m என்பது a x d என்பது q x n ஆகும். b x d plus r. 

00:18:22.803 --> 00:18:27.598
எனவே d இடது மற்றும் d வலது ஒரு பகுதியை பிரிக்கின்றன. 

00:18:27.598 --> 00:18:32.148
எனவே d க்கு r ஐப் பிரிக்க வேண்டும் என்று நீங்கள் எளிதாக உங்களை நம்பலாம். 

00:18:32.148 --> 00:18:47.862
எனவே, இதைப் பற்றி யோசிக்க ஒரு வழி, நீங்கள் விரும்பினால், நான் இந்த எண் m ஐக் கொண்டுள்ளேன், அதை n இன் அலகுகளாக பிரிக்க முடியும், பின்னர் இங்கே ஒரு சிறிய பிட் உள்ளது. 

00:18:47.862 --> 00:18:54.081
மற்றபடி, d, d எல்லாவற்றையும் சமமாகப் பிரிக்கிறது. 

00:18:54.081 --> 00:18:57.565
எனவே இது இந்த தொகுதிகளை ஒவ்வொன்றையும் பிரிக்கின்றது. 

00:18:57.565 --> 00:19:00.473
அது முழு விஷயத்தையும் பிளவுபடுத்துகிறது. 

00:19:00.473 --> 00:19:08.316
ஆனால் இப்போது நான் d உடன் தொடரினால், அது இந்த எல்லையில் நிறுத்தப் போகிறது, ஏனென்றால் d n ஐப் பிரிக்கவும். 

00:19:08.316 --> 00:19:12.045
எனவே d என்பது இந்த கடைசி பிட் ஆகும். 

00:19:12.045 --> 00:19:17.857
எனவே, நாம் எளிதாக r என்பது d இன் பெருக்காக இருக்க வேண்டும் என்று வாதிடலாம். 

00:19:17.857 --> 00:19:20.753
எனவே d க்கு r க்கும் பிளவு வேண்டும். 

00:19:20.753 --> 00:19:28.179
எனவே d m மற்றும் d n ஐப் பிரித்தால், d மீதமுள்ள m. ஐ. n ஆல் பிரிக்க வேண்டும். 

00:19:28.179 --> 00:19:33.959
நாம் முன்பு பார்த்தபடி, வித்தியாசத்தை, எனவே கடைசியாக நாம் சொல்லியிருந்தோம். நாம் பார்க்க வேண்டும் வித்தியாசம் m பிரிக்கப்பட்ட n. 

00:19:33.959 --> 00:19:42.361
இப்போது நாம் சொல்கிறோம், மீதமுள்ள m, ஐ, n மற்றும் d க்கு பிரிக்க வேண்டும், அது n மற்றும் இந்த மீதமுள்ள GCD ஆக இருக்கும். 

00:19:42.361 --> 00:19:52.351
எனவே இது ஒரு மேம்படுத்தப்பட்ட மற்றும் நீங்கள் முன்மொழிய முடியும் என்று அல்கோரிதம் உண்மையான பதிப்பு ஆகும், வித்தியாசம் ஒன்று, ஆனால் மீதமுள்ள ஒன்று. 

00:19:52.351 --> 00:19:56.885
m மற்றும் n இன் GCD ஐ. m. n ஐ விட பெரியது என்று கருதிக் கொள்ளுங்கள். 

00:19:56.885 --> 00:19:59.135
இப்போது n. m. ஐப் பிரித்தால், நாம் முடித்துவிட்டோம். 

00:19:59.135 --> 00:20:00.673
நாம் n ஐ திருப்பிக் கொடுக்கிறோம். 

00:20:00.673 --> 00:20:03.340
இது முன்னதாக இருந்தது போலவே உள்ளது. 

00:20:03.340 --> 00:20:06.673
இல்லையெனில், R தான் மீதமுள்ளதாக இருக்கட்டும். 

00:20:06.673 --> 00:20:17.911
n என்ற மதிப்பை n என்ற எண்ணில் பிரிக்கினால் மீதமுள்ளதைப் பெற்று, n மற்றும் r என்ற GCD ஐ திருப்பித் தருகிறோம். 

00:20:17.911 --> 00:20:20.362
எனவே இந்த நிலை குறித்து நாம் கவலைப்பட வேண்டியதில்லை. 

00:20:20.362 --> 00:20:25.909
நாம் வித்தியாசத்திற்காக செய்ததைப் போல அதிகபட்ச மற்றும் குறைந்தபட்சத்தை எடுக்க வேண்டியதில்லை. ஏனென்றால் மீதமுள்ளது n க்கும் குறைவாக இருக்கும் என்று உத்தரவாதம் அளிக்கப்படுகிறது. 

00:20:25.909 --> 00:20:28.956
இல்லையெனில் n இன்னும் ஒரு முறை செல்லும். 

00:20:28.956 --> 00:20:39.202
எனவே, முன்னதாக, நாம் ஒரு மிக எளிய மறுபரிசீலனை செயல்படுத்த வேண்டும், மேலும் இது மிகவும் எளிமையானது, ஏனெனில் நாம் இந்த அதிகபட்ச குறைந்தபட்ச வணிக செய்ய வேண்டியதில்லை. 

00:20:39.202 --> 00:20:46.340
எனவே, முந்தைய முறை போல, நாம் முதலில் m மற்றும் n ஐ திருப்புகிறோம், அவை சரியான வரிசையில் இல்லை என்றால். 

00:20:46.340 --> 00:20:52.680
பின்னர் n m ஐப் பிரிக்கினால், மீதமுள்ள m. n ஐப் பிரிக்கினால், நாம் n ஐத் திருப்பிக் கொடுத்து முடிக்கிறோம். 

00:20:52.680 --> 00:20:56.294
இல்லையெனில், n மற்றும் மீதமுள்ளவற்றின் GCD ஐ திருப்பித் தருகிறோம். 

00:20:56.294 --> 00:20:58.067
எனவே இதுவே மீதமுள்ளவை. 

00:20:58.067 --> 00:21:01.057
மீதமுள்ள எண் எப்போதும் n க்குக் குறைவாக இருப்பதை நினைவில் கொள்ளுங்கள். 

00:21:01.057 --> 00:21:07.060
எனவே நாம் அதை திருப்பி, அதிகபட்சமாக எடுத்துக்கொள்ள கவலைப்பட வேண்டியதில்லை. 

00:21:07.060 --> 00:21:17.452
முந்தைய வழக்கு போல, நாம் இந்த முழு விஷயத்தையும் செய்ய முடியும் ஒரு y பயன்படுத்தி அதை செய்ய பதிலாக ஒரு மறுபரிசீலனை விஷயம். 

00:21:17.452 --> 00:21:21.506
எனவே நாம் முதலில் m மற்றும் n ஐ மாற்றுகிறோம், அவை தவறான வரிசையில் இருந்தால். 

00:21:21.506 --> 00:21:29.340
பின்னர் மீதமுள்ள எண் 0 ஆக இல்லாத வரை, நாம் m ஐ இரண்டு எண்களில் சிறிய எண் மூலம் மாற்றுவோம். n ஐ மீதமுள்ள எண் மூலம் மாற்றுவோம். 

00:21:29.340 --> 00:21:34.249
இப்போது நாம் இந்த மீதமுள்ள அல்லது 0 செல்லும் என்று உத்தரவாதம் ஆனால் அது 0 செல்லும் என்றால் அது பிளவு என்று பொருள். 

00:21:34.249 --> 00:21:39.564
அல்லது அது 0 ஆக இல்லையென்றால், எஞ்சிய எண் தொடர்ந்து குறைந்து கொண்டே இருக்கும், ஏனென்றால் அது நாம் தொடங்கிய எண்ணை விட எப்போதும் சிறியதாக இருக்கும். 

00:21:39.564 --> 00:21:42.928
அது தொடர்ந்து குறைந்து 1 ஆக இருக்கும். அடுத்த கட்டத்தில் அது பிளவுபடும். 

00:21:42.928 --> 00:21:45.218
இறுதியாக, நாம் குறைந்தது 1 திரும்ப வேண்டும். 

00:21:45.218 --> 00:21:58.565
நாம் பார்த்த உதாரணத்திற்கு திரும்பிச் சென்றால், GCD 101.2 ஐ பார்த்தால், வித்தியாசத்தை பயன்படுத்தி அதை செய்தால், நாம் சுமார் 50 படிகளை எடுத்தோம் என்று சொன்னோம். 

00:21:58.565 --> 00:22:03.409
இப்போது நாம் மீதமுள்ளதைச் செய்தால், r என்பது 1 ஆகும் என்பதை நான் நேரடியாகக் கண்டுபிடிப்பேன். 

00:22:03.409 --> 00:22:06.753
நான் 101 ஐ 2 ஆகப் பிரித்தால், அது 50 முறை மீதமுள்ள 1 ஆகப் போகிறது. 

00:22:06.753 --> 00:22:10.329
எனவே ஒரு படி, நான் GCD 2, இன் 1 மற்றும் நான் 1 கிடைக்கும். 

00:22:10.329 --> 00:22:19.952
எனவே, நீங்கள் காட்ட முடியும் என்னவென்றால், மீதமுள்ள இந்த பதிப்பு உண்மையில் எண்களின் எண்ணிக்கையுடன் விகிதமான நேரத்தை எடுக்கும். 

00:22:19.952 --> 00:22:24.788
எனவே நான் ஒரு 100 இலக்க எண்ணைக் கூறினால், அது சுமார் 100 படிகள் எடுக்கும். 

00:22:24.788 --> 00:22:33.047
உதாரணமாக, ஒரு பில்லியன் எண் இருந்தால், ஒரு பில்லியன் 10 முதல் 9 வரை இருக்கும், அது 10 இலக்கங்கள் இருக்கும். 

00:22:33.047 --> 00:22:40.731
நான் ஒரு முட்டாள்தனமான வழிமுறையை செய்தால், அது ஒரு பில்லியன் படிகளின் எண்ணிக்கையை ஒரு பில்லியன் படிகள் என்ற எண்ணிக்கையுடன் ஒரு நிலையான முறை எடுக்கும். 

00:22:40.731 --> 00:22:50.340
ஆனால் இந்த அல்காரிதம், 10 முதல் 9 வரை 10 இலக்கங்கள் இருப்பதால், அது 10 படிகள் மட்டுமே எடுக்கும் என்று கூறுவதால், 

00:22:50.340 --> 00:22:53.911
எனவே இந்த பதிப்பில் செயல்திறன் கணிசமாக மேம்படுத்தப்பட்டுள்ளது. 

00:22:53.911 --> 00:22:57.638
எனவே இந்த பாடத்தை நாம் செய்யும் போது இதைப் பற்றி பேசலாம். 

00:22:57.638 --> 00:23:00.921
எனவே இந்த பாடத்திட்டம் நிரலாக்க, தரவு அமைப்பு மற்றும் வழிமுறைகள் பற்றி. 

00:23:00.921 --> 00:23:11.457
எனவே, ஒரு திட்டத்தில் ஒரு குறிப்பிட்ட யோசனையை விரிவுபடுத்துவதற்கான சிறந்த வழி என்னவென்று நிரலாக்கப் பகுதியில் பேசப்படுகிறது, அது சரியானது மற்றும் படிக்கவும் பராமரிக்கவும் எளிதானது என்பதை உறுதிப்படுத்த எளிதான வழி. 

00:23:11.457 --> 00:23:13.212
எனவே, இதுவே நிரலாக்கப் பகுதி. 

00:23:13.212 --> 00:23:17.951
எப்படி எழுதுகிறீர்கள், உங்கள் கருத்துக்களை மிக தெளிவாக வெளிப்படுத்துகிறீர்கள்? 

00:23:17.951 --> 00:23:23.293
ஆனால் யோசனை தெளிவாக இருக்க வேண்டும், அதுதான் தரவு அமைப்புகளும் வழிமுறைகளும் வருகின்றன. 

00:23:23.293 --> 00:23:30.340
எனவே நீங்கள் அழகான நாவல் எழுதலாம், ஆனால் உங்களுக்கு எந்த யோசனைகளும் இருக்காது அல்லது உங்களுக்கு மிகவும் பிரகாசமான யோசனைகள் இருக்கலாம், ஆனால் நீங்கள் உங்களைத் தொல்லை தராமல் வெளிப்படுத்தலாம். 

00:23:30.340 --> 00:23:31.928
அவற்றில் எதுவுமே உகந்தவை அல்ல. 

00:23:31.928 --> 00:23:34.692
இது வேறு எந்த மொழியிலும் எழுதுவது போல. 

00:23:34.692 --> 00:23:41.098
எனவே நீங்கள் வெளிப்படுத்தும் சிறந்த யோசனைகள் இருக்கலாம், ஆனால் அவற்றை நீங்கள் பேசும் நபருக்கு தெரிவிக்க முடியாவிட்டால், யோசனைகள் அவற்றின் தாக்கத்தை இழக்கின்றன. 

00:23:41.098 --> 00:23:44.340
எனவே உங்களுக்கு யோசனைகள் தேவை, அவற்றை வெளிப்படுத்த ஒரு மொழி தேவை. 

00:23:44.340 --> 00:23:50.340
எனவே நிரலாக்கமானது இந்த யோசனைகளை வெளிப்படுத்துவதுதான், ஆனால் யோசனைகள் தங்களை அல்காரிதம்களிலிருந்தும் தரவு அமைப்புகளிலிருந்தும் வருகின்றன.

2024-01-26 18:05:26,452 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-26 18:05:26,452 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-26 18:05:26,453 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:05:32,708 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:05:32,736 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:06:07,000 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-26 18:06:08,781 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:06:11,281 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:06:11,299 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:06:22,409 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-26 18:06:22,409 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-26 18:06:22,410 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:06:24,887 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:06:24,911 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:06:34,957 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:07:06,398 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:08:32,857 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-26 18:08:33,485 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:08:36,007 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:08:36,028 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:08:36,702 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:09:14,326 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-26 18:09:14,951 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:09:17,424 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:09:17,446 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:09:43,195 - INFO - _log - Line 224 - 127.0.0.1 - - [26/Jan/2024 18:09:43] "[35m[1mPOST /vtt_to_speech HTTP/1.1[0m" 500 -
2024-01-26 18:10:02,793 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-26 18:10:03,439 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:10:05,908 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:10:05,941 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:10:12,789 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:11:55,795 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-26 18:11:56,460 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:11:58,930 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:11:58,953 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:12:29,185 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-26 18:12:29,820 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:12:32,316 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:12:32,337 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:12:42,419 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-26 18:12:43,045 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:12:46,000 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:12:46,027 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:12:49,383 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:13:04,274 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:13:12,236 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-26 18:13:12,939 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:13:15,413 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:13:15,471 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:13:15,498 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:14:18,920 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-26 18:14:18,920 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-26 18:14:18,921 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:14:24,150 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:14:24,175 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:14:37,914 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:15:04,285 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:16:39,105 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-26 18:16:39,105 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-26 18:16:39,106 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:16:41,579 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-26 18:16:41,602 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-26 18:17:02,344 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-26 18:21:25,730 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-26 18:21:26,363 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-26 18:24:20,038 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: sequence item 0: expected str instance, numpy.int16 found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', '..', 'यह तीसरा कैप्शन है। '] || TRACEBACK : Error in File /speech/abdullah/tts_api/api.py, Line 199 Error TypeError : sequence item 0: expected str instance, numpy.int16 found
2024-01-27 21:04:03,011 - ERROR - synthesize - Line 256 - Exception occurred: CUDA out of memory. Tried to allocate 6.96 GiB (GPU 1; 23.69 GiB total capacity; 7.44 GiB already allocated; 812.94 MiB free; 7.60 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-01-29 20:48:56,228 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-29 20:48:56,228 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-29 20:48:56,229 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-29 20:49:02,477 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-29 20:49:02,507 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-29 20:49:08,170 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 20:50:51,310 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-29 20:50:53,171 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-29 20:50:59,421 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-29 20:50:59,454 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-29 20:51:05,462 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 20:51:37,748 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-29 20:51:39,520 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-29 20:51:45,818 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-29 20:51:45,851 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-29 20:51:48,590 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 20:53:36,908 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-29 20:53:36,908 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-29 20:53:36,908 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-29 20:53:43,123 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-29 20:53:43,155 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-29 20:53:49,900 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 20:56:22,331 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-01-29 20:56:33,004 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-29 20:56:33,004 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-29 20:56:37,152 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 20:56:38,176 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 20:59:47,839 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-29 20:59:47,840 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-29 21:00:11,237 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 21:01:43,022 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 21:03:13,837 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-29 21:03:13,838 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-29 21:03:19,554 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 21:04:12,762 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-29 21:04:12,762 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-29 21:04:17,878 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 21:04:18,779 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 21:04:19,628 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: sequence item 0: expected str instance, list found. Input text: ['और यहाँ है दूसरा utkarsh कैप्शन।', 'यह तीसरा कैप्शन है।']
2024-01-29 21:08:59,686 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-29 21:08:59,686 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-29 21:08:59,687 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-29 21:09:05,922 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-29 21:09:05,951 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-29 21:09:32,138 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-29 21:09:33,904 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-29 21:09:40,164 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-29 21:09:40,194 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-29 21:10:08,415 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-29 21:10:10,214 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-29 21:10:10,972 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: 'TextNormalizer' object has no attribute 'num2text_lis1t'. Input text: ['And here is the second caption.', 'This is the third caption.']
2024-01-29 21:10:16,524 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-29 21:10:16,555 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-29 21:11:04,924 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-01-29 21:11:06,680 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-29 21:11:11,559 - ERROR - extract_text_from_vtt - Line 188 - Exception occurred: 'TextNormalizer' object has no attribute 'num2text_lis1t'. Input text: ['And here is the second caption.', 'This is the third caption.']
2024-01-29 21:11:12,946 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-29 21:11:12,979 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-29 21:17:40,190 - ERROR - extract_text_from_vtt - Line 204 - Exception occurred: text_synthesis() missing 1 required positional argument: 'alpha'. Input text: ['And here is the second caption.', 'This is the third caption.']
2024-01-29 21:18:19,703 - ERROR - extract_text_from_vtt - Line 204 - Exception occurred: text_synthesis() missing 1 required positional argument: 'alpha'. Input text: ['And here is the second caption.', 'This is the third caption.']
2024-01-29 21:19:27,120 - ERROR - extract_text_from_vtt - Line 204 - Exception occurred: name 'alpha' is not defined. Input text: ['And here is the second caption.', 'This is the third caption.']
2024-01-30 14:16:41,147 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-01-30 14:16:41,147 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-01-30 14:16:41,147 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:16:47,404 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:16:47,436 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:27:17,986 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:27:19,823 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:27:26,016 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:27:26,041 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:27:32,099 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:27:33,916 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:27:40,260 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:27:40,292 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:29:39,168 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:29:40,973 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:29:47,295 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:29:47,324 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:31:05,903 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:31:07,690 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:31:13,928 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:31:13,959 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:31:47,219 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:31:49,001 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:31:55,259 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:31:55,290 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:32:13,435 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:32:15,226 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:32:21,454 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:32:21,484 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:32:34,592 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:32:36,373 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:32:42,618 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:32:42,648 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:34:35,470 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:34:37,318 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:34:43,593 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:34:43,622 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:37:06,660 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:37:08,468 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:37:14,665 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:37:14,693 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:37:35,858 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:37:37,611 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:37:44,078 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:37:44,106 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:38:16,354 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:38:18,105 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:38:24,366 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:38:24,396 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:40:14,194 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:40:16,042 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:40:22,264 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:40:22,293 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:42:05,050 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:42:06,876 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:42:13,137 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:42:13,164 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:43:23,691 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:43:25,519 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:43:31,796 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:43:31,825 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:44:05,077 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:44:06,893 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:44:13,210 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:44:13,238 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:45:29,808 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:45:31,632 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:45:37,936 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:45:37,964 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:45:56,117 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:45:57,926 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:46:04,182 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:46:04,212 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:52:16,910 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:52:18,796 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:52:25,040 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:52:25,073 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:52:57,327 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:52:59,134 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:53:05,403 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:53:05,442 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:56:19,893 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:56:21,831 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:56:28,032 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:56:28,061 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:58:08,801 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:58:10,665 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:58:16,896 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:58:16,926 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:58:20,970 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:58:22,789 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:58:29,003 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:58:29,033 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 14:59:30,492 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 14:59:32,290 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 14:59:38,604 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 14:59:38,638 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 15:00:06,857 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 15:00:08,633 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 15:00:14,917 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 15:00:14,949 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 15:03:58,578 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 15:04:00,356 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 15:04:06,659 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 15:04:06,691 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 15:04:13,758 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 15:04:15,567 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 15:04:21,827 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 15:04:21,858 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 15:07:48,360 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 15:07:50,186 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 15:07:56,425 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 15:07:56,458 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 15:11:29,004 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 15:11:30,826 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 15:11:37,089 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 15:11:37,122 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 15:12:36,563 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 15:12:38,388 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 15:12:44,659 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 15:12:44,690 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-01-30 15:13:06,873 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-01-30 15:13:08,686 - INFO - _log - Line 224 -  * Restarting with stat
2024-01-30 15:13:14,963 - WARNING - _log - Line 224 -  * Debugger is active!
2024-01-30 15:13:14,994 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-01 11:31:06,975 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-01 11:31:08,805 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-01 11:31:15,142 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-01 11:31:15,174 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-01 11:31:33,325 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-01 11:31:35,072 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-01 11:31:41,296 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-01 11:31:41,336 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-01 11:32:11,579 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/inference_new.py', reloading
2024-02-01 11:32:13,526 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-01 11:32:19,762 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-01 11:32:19,794 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-01 11:32:28,874 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-01 11:32:30,671 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-01 11:32:36,942 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-01 11:32:36,974 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-01 11:32:46,057 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-01 11:32:47,862 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-01 11:32:54,201 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-01 11:32:54,234 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-01 11:32:57,271 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-01 11:32:59,077 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-01 11:33:05,355 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-01 11:33:05,385 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-01 13:51:43,630 - ERROR - synthesize - Line 273 - Exception occurred: CUDA out of memory. Tried to allocate 9.35 GiB (GPU 0; 23.69 GiB total capacity; 19.21 GiB already allocated; 528.94 MiB free; 19.36 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-02-01 13:56:16,468 - ERROR - synthesize - Line 273 - Exception occurred: CUDA out of memory. Tried to allocate 9.35 GiB (GPU 0; 23.69 GiB total capacity; 19.21 GiB already allocated; 528.94 MiB free; 19.36 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-02-01 14:13:48,379 - ERROR - synthesize - Line 273 - Exception occurred: CUDA out of memory. Tried to allocate 9.35 GiB (GPU 0; 23.69 GiB total capacity; 19.21 GiB already allocated; 556.94 MiB free; 19.28 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-02-01 14:19:17,995 - ERROR - synthesize - Line 273 - Exception occurred: CUDA out of memory. Tried to allocate 9.35 GiB (GPU 5; 23.69 GiB total capacity; 9.86 GiB already allocated; 5.67 GiB free; 9.93 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-02-01 14:31:53,661 - ERROR - synthesize - Line 273 - Exception occurred: CUDA out of memory. Tried to allocate 9.35 GiB (GPU 5; 23.69 GiB total capacity; 9.86 GiB already allocated; 5.67 GiB free; 9.93 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-02-01 14:41:35,903 - ERROR - synthesize - Line 275 - Exception occurred: [Errno 5] Input/output error. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-02-01 14:42:48,710 - ERROR - synthesize - Line 275 - Exception occurred: CUDA out of memory. Tried to allocate 9.35 GiB (GPU 5; 23.69 GiB total capacity; 19.21 GiB already allocated; 2.73 GiB free; 19.28 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-02-01 14:50:38,840 - ERROR - synthesize - Line 275 - Exception occurred: CUDA out of memory. Tried to allocate 9.35 GiB (GPU 5; 23.69 GiB total capacity; 19.20 GiB already allocated; 2.73 GiB free; 19.28 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF. Input text: WEBVTT

00:00:00.000 --> 00:00:10.300
आइए हम प्रोग्रामिंग से जुड़े अधिक मुद्दों का पता लगाने के लिए जीसीडी के अपने चल रहे उदाहरण के साथ जारी रखें।

00:00:10.300 --> 00:00:29.640
हमने gcd की मूल परिभाषा के साथ शुरुआत की, जिसमें कहा गया था कि हमें पहले m के सभी कारकों की गणना करनी चाहिए, इसे एक सूची में संग्रहीत करना चाहिए, n के सभी कारकों की गणना करनी चाहिए, इसे दूसरी सूची में संग्रहीत करना चाहिए, इन दो सूचियों से सामान्य कारकों की सूची निकालें, और इस सामान्य कारक सूची में सबसे बड़े की रिपोर्ट करें।

00:00:29.680 --> 00:00:53.580
हमारा पहला सरलीकरण यह देखना था कि हम वास्तव में 1 से न्यूनतम m और n तक एक एकल पास कर सकते हैं और पहले m के कारकों और n के कारकों की अलग से गणना किए बिना सीधे सामान्य कारकों की सूची की गणना कर सकते हैं। हमने तब देखा कि हमें सामान्य कारकों की इस सूची की भी आवश्यकता नहीं है क्योंकि हमारी रुचि केवल सबसे बड़े सामान्य कारक या सबसे बड़े सामान्य भाजक में है।

00:00:53.580 --> 00:01:03.040
इसलिए हम एक ही नाम में अब तक देखे गए सबसे बड़े सामान्य कारक पर नज़र रख सकते हैं और अंत में इसकी रिपोर्ट कर सकते हैं।

00:01:03.040 --> 00:01:11.320
हमारा अंतिम सरलीकरण यह देखना था कि यदि हम सबसे बड़े सामान्य कारक में रुचि रखते हैं, तो हमें अंत से शुरू करना चाहिए न कि शुरुआत से।

00:01:11.320 --> 00:01:20.140
इसलिए 1 से शुरू करने और न्यूनतम m और n तक ऊपर की ओर काम करने के बजाय, न्यूनतम m और n से शुरू करना और 1 तक पीछे की ओर काम करना बेहतर है।

00:01:20.140 --> 00:01:25.200
और जैसे ही हमें एक सामान्य कारक मिलता है, हम इसकी रिपोर्ट करते हैं और बाहर निकलते हैं।

00:01:25.440 --> 00:01:29.760
हमेशा याद रखें कि 1 एक सामान्य कारक होने की गारंटी है।

00:01:29.760 --> 00:01:41.320
इसलिए जब हम न्यूनतम m और n से शुरू करते हैं और पीछे की ओर जाते हैं, अगर हम कोई अन्य सामान्य कारक नहीं देखते हैं, तो हम अभी भी गारंटी देते हैं कि जब हम 1 हिट करेंगे तो हम सही ढंग से बाहर निकलेंगे।

00:01:41.320 --> 00:02:07.180
इसलिए हमने जो देखा वह यह था कि हालांकि ये अलग-अलग संस्करण पहले के संस्करणों की तुलना में सरल हैं, वे सभी गणना के संदर्भ में समान दक्षता रखते हैं, जो कि वे हमें सबसे खराब स्थिति में 1 और न्यूनतम के बीच सभी संख्याओं के माध्यम से चलाने के लिए मजबूर करेंगे।

00:02:07.220 --> 00:02:23.540
इसलिए प्राचीन यूनानियों के समय, संभवतः आधुनिक शब्दावली में पहला एल्गोरिथ्म यूक्लिड द्वारा खोजा गया था, और यह इस समस्या जीसीडी के लिए था। तो यूक्लिड ने जो कहा वह निम्नलिखित था।

00:02:23.740 --> 00:03:20.940
मान लीजिए कि हमारे पास एक भाजक d है, जो m और n दोनों को विभाजित करता है। तो यह एक सामान्य भाजक है और हम इस तरह के सबसे बड़े d की तलाश कर रहे हैं। आइए हम तर्क के लिए भी मान लें कि m n से बड़ा है। इसलिए यदि d m और n दोनों को विभाजित करता है, तो हम कुछ मानों a और b के लिए m को एक बार d और n को b बार d के रूप में लिख सकते हैं। तो m d का गुणक है और इसलिए n है। इसलिए यदि हम बाएं हाथ की ओर, समीकरणों को घटाते हैं, तो बाएं हाथ की ओर m माइनस n है। तो हम m लेते हैं और m से n घटाते हैं। तो तदनुसार, हम ad से bd घटाते हैं। तो m माइनस n, ad माइनस bd के बराबर है। लेकिन चूंकि d एक सामान्य शब्द है, इसका मतलब है कि m माइनस n एक माइनस b गुना d है। तो यह वह जगह है जहाँ हम इस धारणा का उपयोग कर रहे हैं कि m n से बड़ा है। तो a माइनस b एक धनात्मक संख्या होगी।

00:03:20.940 --> 00:04:05.589
लेकिन ध्यान देने वाली महत्वपूर्ण बात यह है कि m माइनस n भी d का गुणक है। तो दूसरे शब्दों में, यदि d m और n दोनों को विभाजित करता है, तो यह n माइनस n को भी विभाजित करता है। और चूंकि d m और n का सबसे बड़ा भाजक है, यह पता चलेगा कि d भी सबसे बड़ा भाजक है, जो n और n माइनस n के लिए सामान्य है। दूसरे शब्दों में, m और n का gcd दोनों की छोटी संख्या के gcd के समान है, अर्थात् n, और दो, m और n, m माइनस n का अंतर। तो हम इसका उपयोग जीसीडी खोजने की प्रक्रिया को काफी सरल बनाने के लिए कर सकते हैं। तो यहाँ यूक्लिड के एल्गोरिथ्म का पहला संस्करण है।

00:04:05.589 --> 00:04:20.673
तो m, n के मान gcd पर विचार करें, यह मानते हुए कि m n से अधिक है। इसलिए यदि n पहले से ही m का भाजक है, तो हम कर चुके हैं और हम एक n लौटाते हैं। अन्यथा, हम समस्या को एक नए में बदल देते हैं।

00:04:20.713 --> 00:04:33.740
और m और n के gcd की गणना करने के बजाय, हम n और m माइनस n के gcd की गणना करते हैं और इसके बजाय उस मान को वापस करते हैं।

00:04:33.780 --> 00:04:37.039
तो यहाँ इस विचार का एक पायथन कार्यान्वयन है।

00:04:37.039 --> 00:04:46.620
तो कुछ नई सुविधाएँ हैं जो यहाँ पेश की गई हैं। तो आइए हम उन्हें देखें। पहला यह विशेष कथन है, जो

00:04:48.380 --> 00:04:55.380
प्रतीक हैश से शुरू होता है। तो पायथन में, इस तरह के कथन को टिप्पणी कहा जाता है।

00:04:57.780 --> 00:05:04.137
तो एक टिप्पणी एक बयान है जिसे आप एक कार्यक्रम में यह समझाने के लिए डालते हैं कि कार्यक्रम पढ़ने वाले व्यक्ति के साथ क्या हो रहा है।

00:05:04.137 --> 00:05:08.015
लेकिन प्रोग्राम को निष्पादित करने वाले कंप्यूटर द्वारा इसे नजरअंदाज कर दिया जाता है।

00:05:08.015 --> 00:05:15.220
तो यह कथन कहता है कि हम मान रहे हैं कि m n से बड़ा या बराबर है। तो यह हमें बताता है कि जब

00:05:16.260 --> 00:05:20.424
प्रोग्राम जारी रहता है, तो यह धारणा है।

00:05:20.424 --> 00:05:25.349
बेशक, यह संभव है कि जीसीडी का आह्वान करने वाले व्यक्ति को इसका एहसास न हो।

00:05:25.349 --> 00:05:29.413
तो वे इसे n से छोटे m के साथ आह्वान कर सकते हैं। और हम इसे ठीक कर रहे हैं।

00:05:29.413 --> 00:05:34.100
तो यह एक विशेष प्रकार का असाइनमेंट है जो पायथन के लिए विशिष्ट है।

00:05:34.140 --> 00:05:37.003
यह अधिकांश अन्य प्रोग्रामिंग भाषाओं में मौजूद नहीं है।

00:05:37.003 --> 00:05:44.257
तो हम क्या करना चाहते हैं मूल रूप से हम m और n मान लेना चाहते हैं और हम उनका आदान-प्रदान करना चाहते हैं।

00:05:44.257 --> 00:05:56.528
इसलिए हम m के नए मान को n का पुराना मान और n के नए मान को m का पुराना मान बनाना चाहते हैं ताकि m और n गलत क्रम में हों, हम उन्हें उलट दें।

00:05:56.728 --> 00:06:02.963
तो यह पायथन स्टेटमेंट क्या करता है यह मानों की एक जोड़ी लेता है और यह एक साथ असाइनमेंट करता है।

00:06:02.963 --> 00:06:19.588
तो यह कहता है कि n का मान m के मान में जाता है और m का मान n के मान में जाता है। अब यह महत्वपूर्ण है कि यह एक साथ हो क्योंकि यदि आप इसे किसी भी क्रम में करते हैं, यदि आप पहले n के मान को m में कॉपी करते हैं, तो m का पुराना मान खो जाता है।

00:06:19.588 --> 00:06:25.834
तो आप m के पुराने मान को n के नए मान में कॉपी नहीं कर सकते क्योंकि आपने इसे खो दिया है।

00:06:25.834 --> 00:06:35.400
तो कल्पना कीजिए कि आपके पास पानी के दो मग हैं और अब आप उनकी सामग्री का आदान-प्रदान करना चाहते हैं। अब आपको जगह बनानी है। आप इससे छुटकारा पाए बिना

00:06:36.960 --> 00:06:39.832
इसे उसमें नहीं डाल सकते।

00:06:39.832 --> 00:06:42.571
और एक बार जब आप उससे छुटकारा पा लेते हैं, तो आप उसे उसमें नहीं डाल सकते।

00:06:42.571 --> 00:06:43.899
तो आपको सामान्य रूप से एक तीसरे मग की आवश्यकता है।

00:06:43.899 --> 00:06:46.411
इसलिए आपको पहले इसे यहां स्थानांतरित करने और इसे सुरक्षित रखने की आवश्यकता है।

00:06:46.411 --> 00:06:49.703
फिर आपको इसे वहां स्थानांतरित करने की आवश्यकता है और फिर आपको इसे वापस कॉपी करने की आवश्यकता है।

00:06:49.703 --> 00:06:54.140
तो यह सामान्य तरीका है कि अधिकांश प्रोग्रामिंग भाषाएं आपको दो मूल्यों का आदान-प्रदान करने के लिए कहेंगी।

00:06:54.140 --> 00:06:59.354
लेकिन पायथन में यह निफ्टी सुविधा है जिसके द्वारा आप मूल्यों की एक जोड़ी ले सकते हैं और साथ ही उन्हें अपडेट कर सकते हैं।

00:06:59.394 --> 00:07:08.634
और विशेष रूप से, यह एक साथ अद्यतन हमें इस अतिरिक्त अस्थायी स्थान को भाग एक मान के बारे में चिंता किए बिना मूल्यों का आदान-प्रदान करने की अनुमति देता है।

00:07:08.634 --> 00:07:16.565
तो वैसे भी, यह पहला भाग यह सुनिश्चित करने के लिए कर रहा है कि यह शर्त जो हमने मान ली है वह संतुष्ट है।

00:07:16.565 --> 00:07:19.620
तो अब हम एल्गोरिथ्म के मूल में आते हैं।

00:07:19.620 --> 00:07:33.480
इसलिए यदि n m को विभाजित करता है, तो m का शेष भाग n से विभाजित 0 है, तो हमने n को gcd पाया है और हम n लौटाते हैं। यदि ऐसा नहीं है, तो हम पिछली स्लाइड में

00:07:34.120 --> 00:07:35.440
जो खोज की थी, उस पर वापस जाते हैं।

00:07:35.440 --> 00:07:47.280
और अब हम n के gcd और m माइनस n के अंतर की गणना करने जा रहे हैं। तो हम आदर्श रूप से n और n माइनस n के gcd की गणना करना चाहेंगे। तो हम अंतर की गणना m

00:07:48.640 --> 00:07:52.820
माइनस n के रूप में करते हैं। और हम सिर्फ यह आह्वान कर सकते हैं।

00:07:52.820 --> 00:08:02.240
लेकिन यह संभव है, उदाहरण के लिए, यदि m 97 है और n 2 है, तो अंतर 95 होगा। तो अंतर बहुत अच्छी तरह से

00:08:03.400 --> 00:08:08.922
n से बड़ा हो सकता है। और हम आदर्श रूप से इस फ़ंक्शन को बड़ी संख्या से बड़ी पहली संख्या के साथ कॉल करना चाहेंगे।

00:08:08.922 --> 00:08:12.780
इसलिए हम इसे सुनिश्चित करेंगे भले ही हमारा फ़ंक्शन इसका ध्यान रखे।

00:08:12.780 --> 00:08:23.109
हम क्या करना चाहते हैं कि हम gcd को n और m माइनस n के साथ कॉल करना चाहते हैं। इसके बजाय, हम gcd को n के अधिकतम मान और अंतर के साथ पहले तर्क और n के न्यूनतम मान और अंतर के रूप में कॉल करेंगे।

00:08:23.109 --> 00:08:28.180
तो यह सुनिश्चित करेगा कि दो मानों में से बड़ा पहले जाता है और दो मानों में से छोटा जाता है।

00:08:28.220 --> 00:08:33.781
और जो भी यह जीसीडी (gcd), नया जीसीडी (gcd) रिटर्न (return) है, यह फ़ंक्शन (function) वापस आएगा।

00:08:33.781 --> 00:08:42.460
तो यह एक उदाहरण है कि हम बाद में क्या देखेंगे, जो काफी स्वाभाविक है, जिसे रिकर्शन कहा जाता है। रिकर्शन (recursion) का मतलब है कि हम एक छोटी समस्या को हल करके इस समस्या को हल करने जा रहे

00:08:43.060 --> 00:08:52.878
हैं और उस उत्तर का उपयोग करके, इस मामले में सीधे, हमारी वर्तमान समस्या के उत्तर की रिपोर्ट करने के लिए।

00:08:52.878 --> 00:09:06.496
तो हम m और n के gcd को हल करना चाहते हैं। लेकिन m और n का gcd, इसके बजाय हम n और m माइनस n के gcd को हल करते हैं। और जो भी उत्तर हमें देता है, हम सीधे इस संख्या के लिए जीसीडी के रूप में वापस रिपोर्ट करते हैं।

00:09:06.536 --> 00:09:11.881
इसलिए हम केवल छोटे मानों के साथ फ़ंक्शन का आह्वान करते हैं और फिर हम इसे वापस करते हैं।

00:09:11.881 --> 00:09:16.233
अब जब भी आप इस तरह एक पुनरावर्ती कॉल करते हैं, तो यह एक लूप की तरह है।

00:09:16.233 --> 00:09:17.996
यह फ़ंक्शन को फिर से लागू करेगा।

00:09:17.996 --> 00:09:20.474
कि बदले में एक छोटे फ़ंक्शन का आह्वान करेगा और इसी तरह।

00:09:20.474 --> 00:09:31.390
और आपको यह सुनिश्चित करना होगा कि यह अनुक्रम जिसमें जीसीडी विभिन्न मूल्यों के साथ जीसीडी को कॉल करता रहता है, बिना किसी ठहराव बिंदु के अनंत प्रगति में नहीं आता है।

00:09:31.430 --> 00:09:40.300
इसलिए औपचारिक रूप से, हमें यह सुनिश्चित करना है कि एक n खोजने की यह गारंटी जो n को विभाजित करती है। तो यह वह जगह है जहाँ gcd वास्तव

00:09:41.980 --> 00:09:43.853
में खुद को बुलाए बिना बाहर निकलता है।

00:09:43.853 --> 00:09:47.262
इसलिए हमें यह सुनिश्चित करना होगा कि अंततः हम इस बिंदु पर पहुंचेंगे।

00:09:47.262 --> 00:09:54.071
अब क्या हो रहा है यदि आप यहां देखते हैं कि जीसीडी (gcd) को दिए गए मान छोटे और छोटे होते जा रहे हैं।

00:09:54.071 --> 00:09:56.222
अब हमारे पास m माइनस n के लिए क्या हो

00:09:56.222 --> 00:09:57.717
सकता है? मूल्य क्या हो सकता है? क्या यह शून्य

00:09:57.717 --> 00:09:58.960
हो सकता है? ठीक है, अगर m माइनस n शून्य

00:09:58.960 --> 00:10:10.508
है, तो इसका मतलब है कि m n के बराबर है। यदि m n के बराबर है, तो निश्चित रूप से m n से विभाज्य है। तो अगर m माइनस n शून्य है, तो यह बाहर निकल गया होगा।

00:10:10.508 --> 00:10:11.843
तो यह शून्य नहीं हो सकता।

00:10:11.843 --> 00:10:13.542
तो कम से कम एक होना चाहिए।

00:10:13.542 --> 00:10:17.478
इसलिए जब भी हम इस फ़ंक्शन m माइनस n को कम से कम एक कहते हैं।

00:10:17.478 --> 00:10:21.589
दूसरी ओर, हर बार हम छोटे मूल्यों तक पहुंच रहे हैं।

00:10:21.589 --> 00:10:25.443
तो हम कुछ मान से शुरू करते हैं और m माइनस n घटता रहता है।

00:10:25.443 --> 00:10:27.990
क्या होता है जब यह वास्तव में एक तक पहुंचता है? खैर, जब

00:10:27.990 --> 00:10:31.700
यह एक तक पहुंचता है, तो एक हर दूसरी संख्या को विभाजित करता है।

00:10:31.700 --> 00:10:37.330
तो m प्रतिशत n या m को n से विभाजित करें, शेष एक होगा, शून्य होगा।

00:10:37.330 --> 00:10:39.420
तो यह आपका शून्य लौटा देगा।

00:10:39.420 --> 00:10:52.180
दूसरे शब्दों में, हमें गारंटी है कि यह फ़ंक्शन, क्योंकि यह उस संख्या को कम करता रहता है जिसके साथ हम फ़ंक्शन का आह्वान करते हैं, अंततः एक कॉल उत्पन्न करेगा जहां gcd समाप्त होता है।

00:10:55.020 --> 00:10:57.199
तो यह महत्वपूर्ण है और हम बाद में इस पर वापस आएंगे।

00:10:57.199 --> 00:11:06.389
लेकिन जब भी आप इस तरह का फ़ंक्शन लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि एक बेस केस है जो सीमित संख्या में चरणों में पहुंच जाएगा, चाहे आप कहीं से भी शुरू करें।

00:11:06.429 --> 00:11:19.826
तो यह यूक्लिड का एल्गोरिथ्म है, पहला संस्करण, जहां हम देखते हैं कि m और n के gcd को n और m माइनस n के gcd से बदला जा सकता है। और हमने इस विशेष कार्यान्वयन में जो देखा है वह दो चीजें हैं।

00:11:19.826 --> 00:11:21.304
एक, तीन चीजें बल्कि।

00:11:21.304 --> 00:11:23.872
हमने देखा है कि हमारे कोड में टिप्पणी कैसे डालें।

00:11:23.872 --> 00:11:30.042
हमने देखा है कि पायथन एक ही समय में दो चरों के इस तरह के एक साथ अद्यतन की अनुमति देता है।

00:11:30.042 --> 00:11:39.833
तो m कॉमा n m कॉमा n के बराबर है। और हमने यह भी देखा है कि हम करंट फ़ंक्शन की गणना करने के लिए नए आर्ग्यूमेंट्स के साथ एक ही फ़ंक्शन का उपयोग कर सकते हैं।

00:11:39.833 --> 00:11:49.263
इसलिए यह कहने में कोई समस्या नहीं है कि m और n के gcd की गणना करने के लिए, मैं इसके बजाय किसी अन्य मूल्य के gcd की गणना करूंगा और अपने उत्तर को वापस करने के लिए उस उत्तर का उपयोग करूंगा।

00:11:49.263 --> 00:11:57.757
तो आइए हम इस एल्गोरिथ्म के एक अलग संस्करण को देखें जहां हम रिकर्सिव कॉल को एक वाइल लूप द्वारा प्रतिस्थापित करते हैं।

00:11:57.757 --> 00:12:06.175
इसलिए हमने मानक एल्गोरिथ्म के अपने अंतिम संस्करण में देखा जब हम न्यूनतम m कॉमा n से एक तक गिन रहे थे।

00:12:06.575 --> 00:12:10.650
इसलिए हम जाँच करते रहे कि क्या i शून्य से अधिक था और हम घटते रहे।

00:12:10.650 --> 00:12:13.281
खैर, यहाँ हम कुछ समय का उपयोग करके पुनरावृत्ति कर रहे हैं।

00:12:13.281 --> 00:12:20.168
इसलिए यहां ध्यान देने वाली पहली बात यह है कि मैंने इस टिप्पणी को स्थानांतरित कर दिया है जो एक पंक्ति के अंत में एक अलग पंक्ति में हुआ करती थी।

00:12:20.168 --> 00:12:27.340
तो पायथन क्या कहता है कि यदि कोई हैश है, तो बाकी लाइन को अनदेखा किया जा सकता है।

00:12:27.340 --> 00:12:31.307
तो यह इस पंक्ति को पढ़ता है, यह एक वैध स्थिति देखता है और फिर यह एक हैश देखता है।

00:12:31.307 --> 00:12:35.720
तो यह ऐसा है जैसे कि यह कथन पायथन प्रोग्राम का हिस्सा नहीं था जब यह निष्पादित हो रहा था।

00:12:35.720 --> 00:12:39.203
तो एक टिप्पणी या तो एक अलग पंक्ति में हो सकती है या यह एक पंक्ति का अंत हो सकता है।

00:12:39.203 --> 00:12:46.758
बेशक, याद रखें कि आप इसके बाद कुछ भी नहीं रख सकते हैं जिसे आप पायथन निष्पादित करना चाहते हैं क्योंकि एक बार हैश देखने के बाद, बाकी लाइन को अनदेखा कर दिया जाएगा।

00:12:46.758 --> 00:12:48.340
तो यह एक रेखा का अंत नहीं हो सकता है।

00:12:48.340 --> 00:12:49.823
शेष रेखा को नजरअंदाज किया जा रहा है।

00:12:49.823 --> 00:12:51.205
तो यह एक रेखा के बीच में नहीं हो सकता है।

00:12:51.205 --> 00:12:53.340
आप एक पंक्ति के बीच में एक टिप्पणी नहीं डाल सकते।

00:12:53.340 --> 00:12:57.200
लेकिन आप इसे एक अलग लाइन पर रख सकते हैं या आप इसे एक लाइन के अंत में रख सकते हैं।

00:12:57.200 --> 00:12:59.816
तो वैसे भी, तो यह पहले की तरह हमारी टिप्पणी है।

00:12:59.816 --> 00:13:04.441
तो यहाँ तक, कोई बदलाव नहीं है सिवाय इसके कि मैंने टिप्पणी की स्थिति को स्थानांतरित कर दिया है।

00:13:04.441 --> 00:13:09.316
तो अब हम इस बिंदु पर पहुंच गए हैं जहां हमें वास्तव में कुछ गणना करनी है।

00:13:09.316 --> 00:13:17.987
तो इस बिंदु पर, अगर हमने n पाया है कि n m को विभाजित करता है, तो हम कर चुके हैं और हम सीधे n वापस कर सकते हैं। तो यह वही है जो हमारा रिकर्सिव कोड करेगा।

00:13:17.987 --> 00:13:21.340
अगर हमें ऐसा n नहीं मिला है, तो हमें कुछ काम करना होगा।

00:13:21.340 --> 00:13:26.806
तो स्थिति यह जांचना है कि क्या m को n से विभाजित करने से वास्तव में एक शेष उत्पन्न होता है।

00:13:26.806 --> 00:13:31.482
तो यह प्रतीक के बराबर नहीं है इस विस्मयादिबोधक चिह्न के साथ लिखा गया है।

00:13:31.482 --> 00:13:35.038
तो यह गणितीय के बराबर नहीं है।

00:13:35.038 --> 00:13:40.187
याद रखें कि यह डबल बराबर था जिसे हमने समानता के गणितीय प्रतीक के लिए इस्तेमाल किया था।

00:13:40.187 --> 00:13:43.010
तो यह बराबर नहीं के लिए हमारा प्रतीक है।

00:13:43.010 --> 00:13:49.700
जब तक एक शेष है, वह है शेष m को n से विभाजित करना शून्य नहीं है, हम वही करते हैं जो हमने पहले किया था।

00:13:49.700 --> 00:13:59.173
हम अंतर की गणना करते हैं और हम m को दो मूल्यों के अधिकतम और n को दो मूल्यों के छोटे से प्रतिस्थापित करते हैं।

00:13:59.173 --> 00:14:11.340
तो हमारे पास एक जोड़ी m, n है जिसका gcd हम इस धारणा के साथ खोजने की कोशिश कर रहे हैं कि m n से बड़ा है। प्रत्येक चरण में, हम m को n के बड़े और अंतर और n को n के छोटे और अंतर से बदलते हैं।

00:14:11.340 --> 00:14:14.071
तो यह ठीक वही है जो हम इस रिकर्सिव कोड में कर रहे हैं।

00:14:14.071 --> 00:14:16.803
हम कह रहे हैं कि हम इसकी जीसीडी की गणना कर रहे हैं।

00:14:16.803 --> 00:14:41.828
तो यहाँ इस लूप में प्रभावी रूप से, हम कह रहे हैं कि m, n की गणना को m के gcd से प्रतिस्थापित करें, n को अधिकतम n डिफ और न्यूनतम n की गणना से प्रतिस्थापित करें। और हम ऐसा तब तक करते रहते हैं जब तक हम एक ऐसी स्थिति को हिट नहीं करते हैं जहां n वास्तव में n को विभाजित करता है। और ठीक उसी तरह जैसे हमने रिकर्सिव केस में कहा था कि एक बाउंड्री केस होगा जहां सबसे खराब स्थिति में n 1 हो जाएगा और 1 सब कुछ विभाजित कर देगा।

00:14:41.828 --> 00:14:44.362
इसी तरह यहाँ, अंतर कम होता रहेगा।

00:14:44.362 --> 00:14:48.363
अंतर शून्य नहीं हो सकता क्योंकि यदि अंतर शून्य होता, तो यह विभाजित हो जाता।

00:14:48.363 --> 00:14:52.710
तो अंतर अधिक से अधिक 1 तक जा सकता है और जब यह 1 से टकराता है, तो हम कर चुके हैं।

00:14:52.710 --> 00:14:57.408
तो यह उसी रिकर्सिव फ़ंक्शन (recursive function) का एक जबकि संस्करण है जिसे हमने पहले लिखा था।

00:14:57.408 --> 00:15:06.785
इसलिए यदि यह मदद करता है, तो आप इन्हें साथ-साथ देख सकते हैं और यह समझने की कोशिश कर सकते हैं कि पुनरावर्ती चीज क्या कर रही है और क्या कर रही है और देखें कि वे मूल रूप से एक ही काम कर रहे हैं।

00:15:06.785 --> 00:15:19.744
और यह विचार कि पुनरावृत्ति को समाप्त होना चाहिए, उस दावे के समान है जो हमने पहले कहा था कि जब आप कुछ समय लिखते हैं, तो आपको यह सुनिश्चित करना चाहिए कि आप समय की स्थिति को गलत बनाने की दिशा में प्रगति करें ताकि समय मौजूद हो।

00:15:19.744 --> 00:15:36.340
इसलिए जैसे पुनरावृत्ति हमेशा के लिए चल सकती है यदि आप सावधान नहीं हैं और आप इसे उन तर्कों के साथ लागू नहीं करते हैं जो समाप्ति की गारंटी देते हैं, जबकि हमेशा के लिए भी चल सकता है यदि आप यह सुनिश्चित करने के लिए समय के भीतर प्रगति नहीं करते हैं कि समय की स्थिति अंततः गलत हो जाती है।

00:15:41.340 --> 00:15:43.054
तो हम वास्तव में इससे थोड़ा बेहतर कर सकते हैं।

00:15:43.054 --> 00:15:46.787
तो आइए हाथ से निष्पादन करके इसके साथ एक समस्या देखें।

00:15:46.787 --> 00:15:52.537
तो मान लीजिए कि हम 101 और 2 के gcd जैसे कुछ नंबर से शुरू करते हैं।

00:15:52.537 --> 00:16:00.944
तब हमारा एल्गोरिथ्म (algorithm) कहेगा कि यह अब अंतर और n का gcd बन जाना चाहिए।

00:16:00.944 --> 00:16:04.966
अंतर 99 है, तो हमारे पास 99 और 2 होगा।

00:16:04.966 --> 00:16:09.167
और फिर यह 97 और 2 का gcd बन जाएगा और इसी तरह।

00:16:09.167 --> 00:16:18.661
तो हम इसे लगभग 50 चरणों में करते रहेंगे और फिर अंततः हम 5 और 2 के जीसीडी और फिर 3 और 2 के जीसीडी पर आ जाएंगे।

00:16:18.661 --> 00:16:24.081
और अब जब हम अंतर की गणना करते हैं, तो हमें 2 और 1 का gcd मिलेगा।

00:16:24.081 --> 00:16:26.856
तो अब अंतर छोटा हो जाएगा।

00:16:26.856 --> 00:16:30.482
और फिर इस बिंदु पर हम रिपोर्ट करेंगे कि उत्तर 1 है।

00:16:30.482 --> 00:16:35.090
तो यह वास्तव में हमें 101 और 2 के जीसीडी करने के लिए लगभग 50 कदम लेता है।

00:16:35.090 --> 00:16:42.506
इसलिए नादान दृष्टिकोण की हमारी आलोचनाओं में से एक यह है कि इसमें संख्याओं के आनुपातिक समय लगता है।

00:16:42.506 --> 00:16:47.898
यदि हम संख्या m और n जोड़ते हैं, तो हम न्यूनतम m और n के बराबर चरणों की सामान्य संख्या लेंगे।

00:16:47.898 --> 00:16:52.592
अब यहाँ वास्तव में हम न्यूनतम से भी बड़े कदम उठा रहे हैं क्योंकि न्यूनतम 2 है।

00:16:52.592 --> 00:16:59.603
अगर हम सिर्फ कंप्यूटिंग कारक होते, तो हम कहेंगे कि 2 का एकमात्र कारक 2 है और यह 101 का कारक नहीं है, हम शुरुआत में ही रुक जाते।

00:16:59.603 --> 00:17:04.901
तो यह वास्तव में कुछ मामलों में हमारे पहले के एल्गोरिथ्म से भी बदतर कर रहा है।

00:17:04.901 --> 00:17:07.931
तो यहाँ एक बेहतर अवलोकन है।

00:17:07.931 --> 00:17:10.870
तो मान लीजिए कि n m को विभाजित नहीं करता है।

00:17:10.870 --> 00:17:17.735
दूसरे शब्दों में, अगर मैं m को n से विभाजित करता हूं, तो मुझे एक भागफल और शेष मिलेगा।

00:17:17.735 --> 00:17:22.885
इसलिए मैं n को q गुना n प्लस r के रूप में लिख सकता हूं जहां q भागफल है और r शेष है।

00:17:22.885 --> 00:17:26.006
तो आप हाई स्कूल अंकगणित से इन शब्दों को याद कर सकते हैं।

00:17:26.006 --> 00:17:32.188
तो यह n m q बार में जाता है और एक शेष r छोड़ देता है और हमें गारंटी है कि r n से छोटा है।

00:17:32.188 --> 00:17:35.451
अन्यथा यह एक बार और चला जाएगा, यह q प्लस 1 बन जाएगा।

00:17:35.451 --> 00:17:37.673
तो हमारे पास एक शेष r है जो n से छोटा है।

00:17:37.673 --> 00:17:45.095
इसलिए उदाहरण के लिए अगर मैं 7 कहता हूं और मैं इसे 3 से विभाजित करना चाहता हूं, उदाहरण के लिए, यह 2 गुना 3 प्लस 1 होगा।

00:17:45.095 --> 00:17:47.731
तो यह मेरा भागफल होगा और यह मेरा शेष होगा।

00:17:47.731 --> 00:17:53.090
महत्वपूर्ण बात यह है कि शेष हमेशा उससे छोटा होता है जिससे मैं विभाजित कर रहा हूं।

00:17:53.090 --> 00:17:59.845
तो अब हम पहले की तरह मान लेते हैं कि हमारे पास m और n दोनों के लिए एक सामान्य भाजक है।

00:17:59.845 --> 00:18:10.756
दूसरे शब्दों में, पहले की तरह हम m को स्वयं एक बार d और n को कुछ संख्याओं a और b के लिए b बार d के रूप में लिख सकते हैं क्योंकि m d का गुणक है और इसलिए n है।

00:18:10.756 --> 00:18:22.803
तो अगर हम इसे यहाँ ऊपर दिए गए समीकरण में प्लग करते हैं, तो हम देखते हैं कि m जो a टाइम्स d है q टाइम्स n के बराबर है जो b टाइम्स d प्लस r है।

00:18:22.803 --> 00:18:27.598
तो d बाएं को विभाजित करता है और d दाएं के एक हिस्से को विभाजित करता है।

00:18:27.598 --> 00:18:32.148
तो आप आसानी से खुद को आश्वस्त कर सकते हैं कि d को भी r को विभाजित करना चाहिए।

00:18:32.148 --> 00:18:47.862
इसलिए इसके बारे में सोचने का तरीका यदि आप सचित्र रूप से चाहते हैं कि मेरे पास यह संख्या m है और मैं इसे n की इकाइयों में तोड़ सकता हूं और फिर यहां एक छोटा सा है।

00:18:47.862 --> 00:18:54.081
दूसरी ओर अगर मैं d को देखता हूं, d सब कुछ समान रूप से विभाजित करता है।

00:18:54.081 --> 00:18:57.565
तो यह इन ब्लॉकों में से प्रत्येक को विभाजित करता है।

00:18:57.565 --> 00:19:00.473
यह पूरी बात को भी विभाजित करता है।

00:19:00.473 --> 00:19:08.316
लेकिन अब अगर मैं d के साथ जारी रखता हूं, तो यह ठीक इस सीमा पर रुकने वाला है क्योंकि d भी n को विभाजित करता है।

00:19:08.316 --> 00:19:12.045
इसलिए d को इस अंतिम बिट को भी विभाजित करना चाहिए जो कि r बिल्कुल है।

00:19:12.045 --> 00:19:17.857
तो दूसरे शब्दों में, हम बहुत आसानी से बहस कर सकते हैं कि r भी d का गुणक होना चाहिए।

00:19:17.857 --> 00:19:20.753
तो d को r को भी विभाजित करना चाहिए।

00:19:20.753 --> 00:19:28.179
इसलिए यदि d m को विभाजित करता है और d n को विभाजित करता है, तो d को m के शेष भाग को n से विभाजित करना चाहिए।

00:19:28.179 --> 00:19:33.959
और जैसा कि हमने पहले अंतर के साथ देखा था, इसलिए पिछली बार हमने कहा था कि हम अंतर m को n से विभाजित करेंगे।

00:19:33.959 --> 00:19:42.361
अब हम कह रहे हैं कि हम m के शेष भाग को n से विभाजित करते हैं और d को इसे विभाजित करना चाहिए और d वास्तव में n का gcd होगा और यह शेष।

00:19:42.361 --> 00:19:52.351
तो यह एक बेहतर है और यह एल्गोरिथ्म का वास्तविक संस्करण है जिसे आप प्रस्ताव कर सकते हैं, अंतर एक नहीं बल्कि शेष एक।

00:19:52.351 --> 00:19:56.885
यह कहता है कि m और n के gcd पर विचार करें यह मानते हुए कि m n से बड़ा है।

00:19:56.885 --> 00:19:59.135
अब अगर n m को विभाजित करता है, तो हम कर चुके हैं।

00:19:59.135 --> 00:20:00.673
हम सिर्फ n लौटते हैं।

00:20:00.673 --> 00:20:03.340
यह पहले की तरह ही है।

00:20:03.340 --> 00:20:06.673
अन्यथा, आर को शेष होने दें।

00:20:06.673 --> 00:20:17.911
यदि m को n से विभाजित करने का मान शेष प्राप्त करता है और n और r का gcd लौटाता है और इस बिंदु पर, याद रखने वाली एक महत्वपूर्ण बात यह है कि r निश्चित रूप से n से कम है।

00:20:17.911 --> 00:20:20.362
इसलिए हमें यहां इस स्थिति के बारे में चिंता करने की ज़रूरत नहीं है।

00:20:20.362 --> 00:20:25.909
हमें अधिकतम और न्यूनतम नहीं लेना है जैसा कि हमने अंतर के लिए किया था क्योंकि शेष n से कम होने की गारंटी है।

00:20:25.909 --> 00:20:28.956
अन्यथा n एक बार और जाएगा।

00:20:28.956 --> 00:20:39.202
इसलिए पहले की तरह, हमारे पास इसका एक बहुत ही सरल पुनरावर्ती कार्यान्वयन है और यह और भी सरल है क्योंकि हमें यह अधिकतम न्यूनतम व्यवसाय नहीं करना है।

00:20:39.202 --> 00:20:46.340
इसलिए पिछली बार की तरह, हम पहले m और n को फ़्लिप करते हैं यदि वे सही क्रम में नहीं हैं।

00:20:46.340 --> 00:20:52.680
फिर यदि n m को विभाजित करता है, यदि m का शेष भाग n से विभाजित 0 है, तो हम n लौटाते हैं और हम कर चुके हैं।

00:20:52.680 --> 00:20:56.294
अन्यथा, हम n और शेष का gcd वापस करते हैं।

00:20:56.294 --> 00:20:58.067
तो यह शेष है।

00:20:58.067 --> 00:21:01.057
और याद रखें कि शेष हमेशा n से कम होता है।

00:21:01.057 --> 00:21:07.060
इसलिए हमें इसे फ़्लिप करने और इस बिंदु पर अधिकतम और न्यूनतम लेने के बारे में चिंता करने की ज़रूरत नहीं है।

00:21:07.060 --> 00:21:17.452
और पिछले मामले के अनुरूप, हम इस पूरी चीज़ को रिकर्सिव चीज़ के साथ करने के बजाय y का उपयोग करके कर सकते हैं।

00:21:17.452 --> 00:21:21.506
इसलिए हम पहले m और n का आदान-प्रदान करते हैं यदि वे गलत क्रम में हैं।

00:21:21.506 --> 00:21:29.340
फिर जब तक शेष 0 नहीं है, हम m को दो संख्याओं में से छोटे से बदलते हैं और हम n को शेष से बदलते हैं और हम आगे बढ़ते हैं।

00:21:29.340 --> 00:21:34.249
अब हमें गारंटी है कि यह शेष या तो 0 पर जाएगा, लेकिन अगर यह 0 पर जाता है, तो इसका मतलब है कि यह विभाजित हो जाता है।

00:21:34.249 --> 00:21:39.564
या अगर यह सबसे खराब स्थिति में 0 नहीं है, तो शेष घटता रहता है क्योंकि यह हमेशा उस संख्या से छोटा होता है जिसके साथ हमने शुरुआत की थी।

00:21:39.564 --> 00:21:42.928
तो यह घटता रहता है और यह 1 तक पहुंच जाता है, फिर अगले चरण में यह विभाजित हो जाएगा।

00:21:42.928 --> 00:21:45.218
तो अंत में, हम कम से कम 1 वापस करेंगे।

00:21:45.218 --> 00:21:58.565
तो अगर हम उस उदाहरण पर वापस जाते हैं जिसे हम देख रहे थे, तो अगर हमने gcd 101 देखा। 2, जब हमने इसे अंतर का उपयोग करके किया, तो हमने कहा कि हमने लगभग 50 कदम उठाए।

00:21:58.565 --> 00:22:03.409
अब यहाँ अगर हम शेष करते हैं, तो मैं सीधे यह पता लगाने जा रहा हूँ कि r 1 के बराबर है।

00:22:03.409 --> 00:22:06.753
अगर मैं 101 को 2 से विभाजित करता हूं, तो यह शेष 1 में 50 बार जाता है।

00:22:06.753 --> 00:22:10.329
तो एक चरण में, मैं 2, 1 के gcd पर जाऊंगा और मुझे 1 मिलेगा।

00:22:10.329 --> 00:22:19.952
तो वास्तव में, आप जो दिखा सकते हैं वह यह है कि शेष के साथ यह संस्करण वास्तव में अंकों की संख्या के समानुपाती समय लेता है।

00:22:19.952 --> 00:22:24.788
इसलिए अगर मेरे पास 100 अंकों की संख्या है, तो इसमें लगभग 100 कदम लगेंगे।

00:22:24.788 --> 00:22:33.047
उदाहरण के लिए, यदि हमारे पास हमारी संख्या के रूप में एक बिलियन है, तो एक बिलियन में लगभग 10 से 9 होंगे, लगभग 10 अंक होंगे।

00:22:33.047 --> 00:22:40.731
फिर अगर मैं नादान एल्गोरिथ्म करता हूं, तो यह कुछ निरंतर बार एक अरब कदम ले सकता है, तो एक अरब कदम कहें।

00:22:40.731 --> 00:22:50.340
लेकिन यह एल्गोरिथ्म इस दावे के कारण है कि यह अंकों की संख्या के आनुपातिक समय लेता है, क्योंकि 10 से 9 में लगभग 10 अंक हैं, यह केवल लगभग 10 कदम उठाएगा।

00:22:50.340 --> 00:22:53.911
इसलिए इस संस्करण में दक्षता में नाटकीय सुधार हुआ है।

00:22:53.911 --> 00:22:57.638
तो यह कुछ ऐसा है जिस पर हम इस पाठ्यक्रम को करते समय स्पर्श करेंगे।

00:22:57.638 --> 00:23:00.921
तो यह पाठ्यक्रम प्रोग्रामिंग, डेटा संरचनाओं और एल्गोरिदम के बारे में है।

00:23:00.921 --> 00:23:11.457
इसलिए प्रोग्रामिंग भाग इस बारे में बात करता है कि किसी दिए गए विचार को प्रोग्राम में इस तरह से विस्तारित करने का सबसे अच्छा तरीका क्या है जो यह सुनिश्चित करना आसान है कि यह सही है और इसे पढ़ने और बनाए रखने में आसान है।

00:23:11.457 --> 00:23:13.212
तो यह प्रोग्रामिंग भाग है।

00:23:13.212 --> 00:23:17.951
तो आप कैसे लिखते हैं, आप अपने विचारों को सबसे स्पष्ट तरीके से कैसे व्यक्त करते हैं?

00:23:17.951 --> 00:23:23.293
लेकिन विचार स्वयं स्पष्ट होना चाहिए और यही वह जगह है जहां डेटा संरचनाएं और एल्गोरिदम आते हैं।

00:23:23.293 --> 00:23:30.340
तो आप सुंदर गद्य लिख सकते हैं, लेकिन आपके पास कोई विचार नहीं हो सकता है या आपके पास बहुत शानदार विचार हो सकते हैं, लेकिन आप खुद को अनाड़ी तरीके से व्यक्त कर सकते हैं।

00:23:30.340 --> 00:23:31.928
उनमें से कोई भी इष्टतम नहीं है।

00:23:31.928 --> 00:23:34.692
तो यह किसी भी अन्य भाषा में लिखने जैसा है।

00:23:34.692 --> 00:23:41.098
इसलिए आपके पास व्यक्त करने के लिए शानदार विचार हो सकते हैं, लेकिन यदि आप उन्हें उस व्यक्ति तक नहीं पहुंचा सकते हैं जिससे आप बात कर रहे हैं, तो विचार अपना प्रभाव खो देते हैं।

00:23:41.098 --> 00:23:44.340
तो आपको विचारों की आवश्यकता है और आपको उन्हें व्यक्त करने के लिए एक भाषा की आवश्यकता है।

00:23:44.340 --> 00:23:50.340
इसलिए प्रोग्रामिंग इन विचारों को व्यक्त करने के बारे में है, लेकिन विचार स्वयं एल्गोरिदम और डेटा संरचनाओं से आते हैं।

2024-02-01 14:54:46,161 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 9.35 GiB (GPU 5; 23.69 GiB total capacity; 19.19 GiB already allocated; 3.33 GiB free; 19.26 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 81 Error RuntimeError : CUDA out of memory. Tried to allocate 9.35 GiB (GPU 5; 23.69 GiB total capacity; 19.19 GiB already allocated; 3.33 GiB free; 19.26 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-01 18:55:33,293 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 142, in extract_text_from_vtt
    vtt_content = json_data.get("input")
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    return jsonify(status="failure", reason = "Error due to language-port mismatch: Language given is- " + str(err) + "and language on port is- " + language)
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-02-01 18:55:48,490 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 142, in extract_text_from_vtt
    vtt_content = json_data.get("input")
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    return jsonify(status="failure", reason = "Error due to language-port mismatch: Language given is- " + str(err) + "and language on port is- " + language)
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-02-01 18:55:57,218 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech/ [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 142, in extract_text_from_vtt
    vtt_content = json_data.get("input")
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    return jsonify(status="failure", reason = "Error due to language-port mismatch: Language given is- " + str(err) + "and language on port is- " + language)
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-02-01 19:18:40,205 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech [POST]
Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 152, in extract_text_from_vtt
    segments = [caption.text for caption in vtt.captions]
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/webvtt.py", line 68, in read_buffer
    parser = WebVTTParser().read_from_buffer(buffer)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 33, in read_from_buffer
    self._parse(content)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 214, in _parse
    self._parse_blocks(blocks)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 251, in _parse_blocks
    'Standalone cue identifier in line {}.'.format(block.line_number))
webvtt.errors.MalformedCaptionError: Standalone cue identifier in line 3.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    return jsonify(status="failure", reason = "Error due to language-port mismatch: Language given is- " + str(err) + "and language on port is- " + language)
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-02-01 19:19:00,811 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech [POST]
Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 152, in extract_text_from_vtt
    segments = [caption.text for caption in vtt.captions]
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/webvtt.py", line 68, in read_buffer
    parser = WebVTTParser().read_from_buffer(buffer)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 33, in read_from_buffer
    self._parse(content)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 214, in _parse
    self._parse_blocks(blocks)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 251, in _parse_blocks
    'Standalone cue identifier in line {}.'.format(block.line_number))
webvtt.errors.MalformedCaptionError: Standalone cue identifier in line 3.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    return jsonify(status="failure", reason = "Error due to language-port mismatch: Language given is- " + str(err) + "and language on port is- " + language)
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-02-01 19:19:32,295 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech [POST]
Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 152, in extract_text_from_vtt
    segments = [caption.text for caption in vtt.captions]
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/webvtt.py", line 68, in read_buffer
    parser = WebVTTParser().read_from_buffer(buffer)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 33, in read_from_buffer
    self._parse(content)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 214, in _parse
    self._parse_blocks(blocks)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 251, in _parse_blocks
    'Standalone cue identifier in line {}.'.format(block.line_number))
webvtt.errors.MalformedCaptionError: Standalone cue identifier in line 3.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    return jsonify(status="failure", reason = "Error due to language-port mismatch: Language given is- " + str(err) + "and language on port is- " + language)
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-02-06 21:10:50,749 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-02-06 21:10:50,749 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-02-06 21:10:50,750 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:10:53,491 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:10:53,511 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:11:17,716 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:11:18,406 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:11:21,129 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:11:21,155 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:21:25,697 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:21:26,368 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:21:29,069 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:21:29,093 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:22:29,564 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:22:30,240 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:22:32,923 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:22:32,950 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:22:41,027 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:22:41,700 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:22:44,392 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:22:44,419 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:22:59,550 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:23:00,300 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:23:03,028 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:23:03,055 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:25:07,024 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:25:07,676 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:25:10,391 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:25:10,419 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:25:11,443 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:25:12,203 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:25:14,921 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:25:14,948 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:26:58,741 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference_parallel.py', reloading
2024-02-06 21:26:59,345 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:27:02,047 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:27:02,076 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:27:14,183 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:27:14,921 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:27:17,636 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:27:17,666 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:27:25,742 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-06 21:27:26,494 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:27:29,323 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:27:29,354 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:27:43,476 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:27:44,221 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:27:46,964 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:27:46,995 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:27:53,057 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:27:53,792 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:27:56,528 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:27:56,561 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:28:35,867 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:28:36,581 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:28:39,333 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:28:39,363 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:28:41,393 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:28:42,153 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:28:45,019 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:28:45,049 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:28:56,148 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:28:56,859 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:29:00,000 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:29:00,031 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:29:18,155 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:29:18,874 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:29:21,589 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:29:21,619 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:32:03,857 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-06 21:32:04,541 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:32:07,303 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:32:07,336 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:32:26,516 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-06 21:32:27,210 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:32:29,914 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:32:29,946 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:34:19,754 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-06 21:34:20,463 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:34:23,185 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:34:23,217 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-06 21:34:33,308 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-06 21:34:34,045 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-06 21:34:40,625 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-06 21:34:40,663 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-07 12:29:44,190 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 10.34 GiB (GPU 1; 23.69 GiB total capacity; 1.81 GiB already allocated; 8.67 GiB free; 2.14 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 10.34 GiB (GPU 1; 23.69 GiB total capacity; 1.81 GiB already allocated; 8.67 GiB free; 2.14 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-07 15:20:29,586 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 17.40 GiB (GPU 1; 23.69 GiB total capacity; 2.70 GiB already allocated; 8.03 GiB free; 3.08 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 17.40 GiB (GPU 1; 23.69 GiB total capacity; 2.70 GiB already allocated; 8.03 GiB free; 3.08 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-08 13:03:22,536 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech [POST]
Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 152, in extract_text_from_vtt
    vtt = read_buffer(StringIO(vtt_content))
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/webvtt.py", line 68, in read_buffer
    parser = WebVTTParser().read_from_buffer(buffer)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 32, in read_from_buffer
    self._validate(content)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 258, in _validate
    raise MalformedFileError('The file does not have a valid format')
webvtt.errors.MalformedFileError: The file does not have a valid format

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    logging.error(f"Exception occurred: {err}. Input text: {extracted_text}")
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-02-08 13:03:47,051 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 33.47 GiB (GPU 1; 23.69 GiB total capacity; 4.72 GiB already allocated; 2.29 GiB free; 5.32 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 33.47 GiB (GPU 1; 23.69 GiB total capacity; 4.72 GiB already allocated; 2.29 GiB free; 5.32 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-09 15:18:04,029 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 14.88 GiB (GPU 0; 23.69 GiB total capacity; 592.64 MiB already allocated; 12.29 GiB free; 656.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 14.88 GiB (GPU 0; 23.69 GiB total capacity; 592.64 MiB already allocated; 12.29 GiB free; 656.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-09 15:20:58,029 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.73 GiB (GPU 0; 23.69 GiB total capacity; 8.61 GiB already allocated; 992.94 MiB free; 11.39 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 81 Error RuntimeError : CUDA out of memory. Tried to allocate 2.73 GiB (GPU 0; 23.69 GiB total capacity; 8.61 GiB already allocated; 992.94 MiB free; 11.39 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-09 15:24:12,825 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 11.56 GiB (GPU 0; 23.69 GiB total capacity; 3.27 GiB already allocated; 9.02 GiB free; 3.33 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 11.56 GiB (GPU 0; 23.69 GiB total capacity; 3.27 GiB already allocated; 9.02 GiB free; 3.33 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-10 18:26:35,185 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['గుడ్ మార్నింగ్ మిత్రులారా, ఈ రోజు మనం ఇప్పటివరకు మాట్లాడుతున్న వాటిని ఎలా సమీకరించాలో మరియు కొన్ని కొత్త విషయాలను ఎలా జోడించాలో చర్చిస్తాము.', 'నా విద్యార్థులలో ఒకరు, అతను అక్షరాలా ఫిర్యాదు చేశాడు, అతను నాకు చెప్పాడు సర్, మేము ఫ్లైట్ మెకానిక్స్ చేస్తున్నట్లుగా అతను నాకు ఒక అభిప్రాయాన్ని ఇస్తాడు.', 'ఆయన ప్రకటనలో నాకు ఎలాంటి తప్పు కనిపించడం లేదు.', 'మీరు డిజైన్ యొక్క అంశాలను కవర్ చేయాలనుకున్నప్పుడు, ప్రారంభంలో మేము సూత్రం, భౌతిక అవగాహన మరియు గణాంక డేటాను ఎక్కువగా ఉపయోగించకుండా మీరు సంభావిత రూపకల్పన ఎలా చేస్తారనే విధానాన్ని కవర్ చేస్తాము.', 'ఇప్పుడు, విమానానికి ఇంజిన్ ఉందని ఊహించుకోండి, మీరు ఇంజిన్ గురించి మాట్లాడాలి.', 'విమానాలలో ప్రొపెల్లర్ నుండి జెట్ ఇంజిన్ వరకు వివిధ రకాల ఇంజిన్లు ఉంటాయి.', 'మీరు జెట్ ఇంజిన్ గురించి మాట్లాడేటప్పుడు, మీరు తీసుకోవడం గురించి మాట్లాడతారు. దీనికి ఫ్యూజ్ లేజ్ ఉంది, దీనికి రెక్కలు, నిర్మాణాలు ఉన్నాయి, దీనికి లేఅవుట్ ఉంది, క్యాబిన్ లేఅవుట్ ఉంది మరియు', 'ప్రయాణీకుడు ఆ లేఅవుట్, ల్యాండింగ్ గేర్, చాలా విషయాలు కూర్చుని ఉంటాడు మరియు ఈ ఉపవ్యవస్థలో ప్రతిదానికి ప్రత్యేక చికిత్స అవసరం.', 'కానీ మొదటి స్థాయి కోర్సులో, మేము చేయడానికి ప్రయత్నిస్తున్నది విమాన రూపకల్పన వెనుక ఉన్న భౌతిక శాస్త్రాన్ని అర్థం చేసుకోవడం మరియు పరిపూరకరమైన గణాంక డేటాగా ఉపయోగించడం మరియు మీరు విమాన ఆకృతీకరణను భావించగలరా లేదా అని చూడటం.', 'అది పూర్తయిన తర్వాత, విశ్లేషణ వస్తుంది మరియు ఇది టెస్టింగ్, రీవాలిడేషన్, రీకాన్ఫిగరేషన్ జరుగుతుంది.', 'ఇది ఒక భారీ పని, కానీ మాత్రమే ఈ భారీ వ్యాయామం నిర్వహించడానికి చెయ్యగలరు వారికి, వారు ఏమి చేస్తున్నారో గురించి స్పష్టమైన ఎవరు, గణాంక డేటా వినియోగం పరంగా మరియు అలాగే పరిస్థితి యొక్క భౌతిక తో ఆ సహసంబంధం రెండు.', 'ఈ రోజు, మనం కొన్ని సమస్యలను చర్చిస్తామని నేను అనుకున్నాను మరియు ఈ ప్రక్రియ కొన్ని విషయాలను పునఃసమీక్షిస్తుంది మరియు మేము కొన్ని కొత్త విషయాలను కూడా జోడిస్తాము.', 'చూద్దాం, మన లక్ష్యం ఏమిటి? మేము', 'ఒక మిషన్ అవసరం నుండి ప్రారంభించాము.', 'బహుళ మిషన్ అవసరాలు ఉన్నాయి మరియు మేము చేసిన మొదటి విషయం ఏమిటంటే, మేము ఎంచుకున్నాము లేదా మేము బేస్లైన్ విమానం లేదా విమానాన్ని ఎంచుకోవాలి.', 'అంటే, అందుబాటులో ఉన్న విమానాల చరిత్ర నుండి చూడండి, ఏ విమానం మీ మిషన్ అవసరాలకు సరిపోతుంది.', 'కాబట్టి, అది మీ మార్గదర్శక విమానంగా మారుతుంది మరియు మీరు భావన చేస్తున్న పరిమాణాన్ని మీరు క్రాస్ చెక్ చేయవచ్చు.', 'అలా చేయడంలో, మొదట మేము చాలా స్థూల అంచనాను అంచనా వేశాము.', 'మేము ఏమి చేసాము, ప్రాథమిక మిషన్ అవసరాలు, టేకాఫ్, క్లైంబ్, క్రూయిజ్ మొదలైనవి ఉన్నాయని మేము చెప్పాము.', 'అప్పుడు మేము w నాట్ టేక్ ఆఫ్ అనేది కొంత సంఖ్య అని చెప్పాము.', 'ఈ వ్యాయామంలో, ఖాళీ బరువు భిన్నం అంటే ఏమిటి, ఇంధన భిన్నం అంటే ఏమిటి అని కూడా మేము అంచనా వేశాము.', 'కొన్నింటిని మనం గణాంకపరంగా తీసుకున్నాము, కొన్నింటిని మనం రేంజ్ కోసం, లైటర్ కోసం, ఓర్పు మొదలైన వాటి కోసం భౌతిక అవగాహనను ఉపయోగించాము.', 'మేము చేసాము మరియు చివరకు, మేము టేకాఫ్ చేయలేమని అంచనా వేశాము, స్థూల టేకాఫ్ బరువు.', 'దానిలో, ఇక్కడ ఏది అందుబాటులో లేదు, ఇక్కడ అందుబాటులో లేదు లేదా ఇక్కడ అవసరం లేదని మేము నిర్ధారించాము, మేము తిరిగి w నాట్ టేకాఫ్ అని అనువదించాము ఎందుకంటే మేము వినియోగించిన ఇంధనాన్ని జోడించాలి.', 'దీనిలో మేము నిపుణులం.', 'కాబట్టి, మేము అంచనా వేయలేదు.', 'ఇప్పుడు, తదుపరి ప్రశ్న థ్రస్ట్ లోడింగ్ పై ఉంది.', 'థ్రస్ట్ లోడింగ్ కూడా 2, 3 ప్రమాణాల నుండి, థ్రస్ట్ లోడింగ్ అంటే ఏమిటో మేము కనుగొన్నాము.', 'దీనిని 0 అని చెప్పుకుందాం. 4 కొన్ని విలువలు.', 'మేము ఇప్పటికే అంచనా వేశాము మరియు w ద్వారా t పొందడానికి మన అవగాహన ఎలా ఉండాలి అనే దాని గురించి చర్చించాము ఎందుకంటే ఇక్కడ నుండి విమానాన్ని టేకాఫ్ చేయడానికి మరియు ఆరోహణ రేటు కోసం వేగవంతం చేయడంలో t ద్వారా w ముఖ్యమైన పాత్ర పోషిస్తుంది.', 'నేను టి బై డబ్ల్యూ గురించి మాట్లాడుతున్నప్పుడు, నేను టి బై డబ్ల్యూ టేకాఫ్ అని వ్రాయడానికి ప్రయత్నించినప్పుడు, విమానం ఎక్కడం, బరువు తగ్గడం నాకు బాగా తెలుసు.', 'థ్రస్ట్ కూడా సాంద్రత ప్రభావం కారణంగా అందుబాటులో ఉన్న థ్రస్ట్ను తగ్గిస్తూనే ఉంది.', 'ఇది ప్రొపెల్లర్ నడిచే విమానం అయితే, డైనమిక్ థ్రస్ట్ గురించి మనం ఇక్కడ కూడా అదే విధంగా మాట్లాడాలి.', 'మళ్ళీ, మేము ఒక దిద్దుబాటు ఇచ్చాము మరియు w టేకాఫ్ ద్వారా t ఎలా ఉండాలి అని చెప్పాము.', 'ఈ సంఖ్య పోయిందని చెప్పండి.', 'అప్పుడు మేము w by s టేకాఫ్ గురించి మాట్లాడాము మరియు అక్కడ మాకు వేరే మిషన్ ఉంది.', 'వీ స్టాల్ విషయానికొస్తే ఆరోహణ రేటుకు సంబంధించినది.', 'క్రూయిజ్కు సంబంధించినది అని చెప్పండి.', 'కాబట్టి, మనం ఇక్కడ చదరపు మీటరుకు 50 కిలోలు పొందామని చెప్పండి.', 'ఇక్కడ మనకు చదరపు మీటరుకు 100 కిలోలు వచ్చాయి మరియు ఇక్కడ ఇది చదరపు మీటరుకు 75 కిలోలు అని చెప్పండి.', 'ఇప్పుడు, ప్రశ్న ఏమిటంటే నేను దేనిని ఎంచుకోవాలి? ఆదర్శవంతంగా చెప్పాలంటే ప్రతి', 'ఒక్కరూ మీరు అత్యల్ప w బై s తీసుకోవాలని సిఫార్సు చేస్తారు. అత్యల్ప అంటే మీ రెక్కల ప్రాంతం సాపేక్షంగా పెద్దది మరియు ఇది లిఫ్టింగ్ లక్షణాలకు మద్దతు ఇస్తుంది.', 'కానీ వింగ్ ఏరియా పెద్దది అయితే డ్రాగ్ పెనాల్టీ ఉంటుందని కూడా మీరు అర్థం చేసుకుంటారు.', 'టర్నింగ్ అనేది మనం వెతకాల్సిన మరొక సమస్య, మనం వెతకాల్సిన బరువు.', 'కానీ దానికంటే మనం వెతుకుతున్నది ఏమిటంటే, నేను విమానాన్ని రూపకల్పన చేస్తున్నప్పుడు, ఈ విమానం గరిష్ట సమయం వరకు ఏమి చేయాలి? ఒకవేళ అది ఒక రవాణా విమానం అయితే, మనం క్రూయిజ్', 'శ్రేణికి ఎక్కువ బరువు ఇస్తాము మరియు దాని నుండి నాకు చదరపు మీటరుకు 100 కిలోల క్రూయిజ్ లభిస్తే, అప్పుడు నేను ఈ విలువను చదరపు మీటరుకు 100 కిలోలు ఎంచుకోవడానికి శోదించబడ్డాను.', 'ఎందుకు? నేను v స్టాల్ ప్రమాణాల ఆధారంగా అతి తక్కువ తీసుకుంటానా అని చూద్దాం మీటర్ చదరపు', 'కిలోకు 50 మీటర్లు మరియు క్రూయిజ్ అది మీటర్ చదరపు కిలోకు 100 కిలోలు ఉండాలి అని చెబుతుంది.', 'దాని అర్థం ఏమిటి? బరువుకు సమానమైన క్రూయిజ్ లిఫ్ట్ కోసం చూద్దాం మరియు కాబట్టి సగం రో v స్క్వేర్ s c', 'l అనేది w కి సమానం లేదా w బై s అనేది సగం రో v స్క్వేర్ c l కి సమానం. ఇది క్రూయిజ్ (cruise) మరియు మనం ఈ 100 కిలోల పర్ మీటర్ స్క్వేర్ (per meter square) ను పొందినప్పుడు, క్రూయిజ్ (cruise) కి అవసరమైన థ్రస్ట్ (thrust) కనీసమని మేము భావించాము, దీని కోసం cl రూట్ (root) cd నాట్ (naught by k) కింద ఉంది మరియు మేము ఇప్పటికే కొంత కారక నిష్పత్తిని (aspect ratio) ఊహించాము మరియు cd నాట్ (naught) సాధారణంగా మీరు 0 తో ప్రారంభించాలని అనుకోవచ్చు. 021, 0. 025 కూడా.', 'సమస్య ఏమిటంటే, v స్టాల్ ప్రమాణాల నుండి వచ్చిన మీటర్ చదరపుకు 50 కిలోలకు సమానమైన w ను', 'నేను ఎంచుకుంటే దాని అర్థం ఏమిటి? అంటే నేను దీనిని ఎంచుకుంటే క్రూయిజ్ మిషన్ ఎలా సంతృప్తి చెందుతుంది.', 'కాబట్టి, చదరపు మీటరుకు 50 కిలోలు నేను ఇక్కడ ఉంచినట్లయితే, మేము 9 తో గుణిస్తాము. 8.', 'ఇప్పుడు, నేను డైనమిక్ పీడనాన్ని పెంచాలని మీరు చూడవచ్చు ఎందుకంటే c l స్థిరంగా ఉంది c l అనేది c d నాట్ బై k.', 'నేను చదరపు మీటరుకు 50 కిలోలు చేయవలసి వస్తే నేను 100 కి బదులుగా చేయవలసి ఉంటుందని అది నాకు చెబుతుంది.', 'కాబట్టి, మీరు తక్కువ డైనమిక్ పీడనం వద్ద తక్కువ వేగంతో c l కి సమానమైన c d నాట్ బై k వద్ద ప్రయాణించగలరని ఇది డిమాండ్ చేస్తుంది.', 'అప్పుడు మీరు ఆ ఒత్తిడిని అవసరమైన కనీస స్థితిలో ఉంచవచ్చు.', 'నేను పునరావృతం చేస్తున్నాను, క్రూయిజ్ కోసం w by s మనకు థ్రస్ట్ అవసరమైన కనీస పరిస్థితి కోసం మీటర్ చదరపుకు 100 కిలోలు లభిస్తున్నాయని అనుకుందాం, కాని మేము స్టాల్ పరిస్థితులను సంతృప్తిపరిచే మీటర్ చదరపుకు 50 కిలోలు తీసుకున్నాము.', 'మరియు నేను దానిని ఉపయోగిస్తే, ఇప్పుడు అదే పరిస్థితిని కలిగి ఉండటానికి నేను తక్కువ డైనమిక్ పీడనం వద్ద ఎగరాలి.', 'తక్కువ డైనమిక్ పీడనం అంటే అధిక ఎత్తు మరియు తక్కువ వేగం లేదా రెండూ అప్పుడు మీరు ట్వీకింగ్ చేయాలి.', 'కానీ బదులుగా మీరు రివర్స్ పని చేస్తే మీరు w బై s క్రూయిజ్ విలువను తీసుకుంటారు ఎందుకంటే నా ప్రధాన మిషన్ క్రూయిజ్ అని మీరు అంటున్నారు.', 'కాబట్టి, నేను ఈ w బై s క్రూయిజ్ 100 కిలోల పర్ మీటర్ స్క్వేర్ తీసుకుంటాను మరియు ఈ పరిస్థితిపై దాని ప్రభావం ఏమిటి.', 'దీని అర్థం w/sకి బదులుగా ఇది 50 kg/m2 చదరపు ఇప్పుడు ఇది 100 kg/m2 చదరపుగా మారుతోంది.', 'కానీ దయచేసి స్థిరమైన యూనిట్లో w బై s ను అర్థం చేసుకోండి, ఇది మీటర్ చదరపుకు న్యూటన్ గా ఉండాలి, మీరు g ద్వారా గుణించాలి. 50 కి బదులుగా మనం 100 తీసుకున్నాము అంటే దాని అర్థం v స్టాల్ అంటే 2 w by s by rho c l max.', 'మీటర్ చదరపుకు 50 కిలోల ఈ షరతు మీటర్ చదరపుకు 50 కిలోల ద్వారా w తో వచ్చింది మరియు v స్టాల్ మనకు c l max యొక్క నిర్దిష్ట విలువ కోసం వచ్చింది.', 'ఎందుకంటే v s పై పరిమితి ఉంది, అంటే v s ఏదో ఒక సంఖ్యలో 50 నాట్ల కంటే తక్కువగా ఉండాలి.', 'నేను ఇప్పుడు విమానాన్ని రూపకల్పన చేస్తే, మీ V స్టాల్ పెరుగుతుంది మరియు V స్టాల్ పెరుగుతుంది అంటే V టేకాఫ్ పెరుగుతుంది V ల్యాండింగ్ పెరుగుతుంది, మీరు దీన్ని చేయలేరు.', '8. కాబట్టి, ఆలోచనా ప్రక్రియ ఏమిటి, నేను ఈ 100 కిలోల పర్ మీటర్ స్క్వేర్ ను 9 తో గుణించడం ద్వారా న్యూటన్ పర్ మీటర్ స్క్వేర్ గా మారుస్తాను.', 'కానీ అప్పుడు నాకు 50 నాట్ల కంటే తక్కువగా ఉండటానికి v s పరిమితి ఉంది.', 'కాబట్టి, నేను సిఎల్ మాక్స్ విలువను మారుస్తాను మరియు సిఎల్ మాక్స్ విలువను పెంచుతాను, అంటే నేను సిఎల్ మాక్స్ ఎక్కువగా ఉన్న ఏరోఫాయిల్ కోసం వెతకాలి మరియు టేకాఫ్ సమయంలో మరియు తరువాత స్థానికంగా సిఎల్ మాక్స్ ను మెరుగుపరచగల మరొక హై లిఫ్ట్ పరికరాల కోసం నేను వెతకాలి.', 'కాబట్టి, ఈ కలయికలన్నీ ప్రయత్నిస్తాయి మరియు మీరు ప్రతి కారకాన్ని ఎలా రాజీపడతారు మరియు ఇది నాకు సరైనది లేదా నాకు సరిపోతుందని తెలుసుకోండి.', 'ఈ విధమైన సంఘర్షణ వస్తుంది మరియు డిజైనర్ యొక్క పని ఏమిటంటే వివిధ విభాగాలకు వెయిటేజ్ ఇవ్వడం మరియు రాజీకి తిరిగి రావడం లేదా ప్రజలందరూ ఇది మంచిదని అంగీకరిస్తారు.', 'మొదట నేను మీకు వివరిస్తాను.', 'కాబట్టి, అక్కడ w 0 అంచనా వేసిన తరువాత మరియు ఒకసారి మనం స్తంభింపజేసి, సమర్థన ఇచ్చిన తర్వాత w 0 బై s నేను ఒక సంఖ్యను ఎంచుకున్నాను మరియు నేను ఇప్పటికే w 0 అంటే ఏమిటో ఎంచుకున్నాను.', 'కాబట్టి, S అంటే ఏమిటో నాకు తెలుసు. కాబట్టి, s వింగ్ అంటే ఏమిటో నాకు తెలుసు, ఇది నాకు తెలుసు మరియు మనం w 0 ను లెక్కించేటప్పుడు గుర్తుంచుకోండి, మనం వింగ్ యొక్క కొంత కారక నిష్పత్తిని కూడా ఊహిస్తాము మరియు ఆ కారక నిష్పత్తిని నేను 8 చుట్టూ తీసుకున్నాను అని చెప్పనివ్వండి, తేలికైన సమయంలో లేదా పరిధి అంచనా సమయంలో ఇంధన వినియోగాన్ని లెక్కించేటప్పుడు మీరు ఇప్పటికే ఉపయోగించిన సంఖ్యను ఇస్తున్నాను.', 'ఒకసారి మీకు కారక నిష్పత్తి 8 తెలిస్తే, మీరు స్పాన్ ఎలా ఉండాలి, తీగ ఎలా ఉండాలి, ఇవన్నీ సంభావితమైనవి, ఆపై నేను ప్రేరేపిత డ్రాగ్ ను తగ్గించాలనుకుంటున్నాను అని మీరే ప్రశ్నించుకోండి.', 'కాబట్టి, నా రెక్కకు ఒక విధమైన టేపర్ నిష్పత్తి ఉండాలి, రెక్క యొక్క టేపర్ నిష్పత్తి కావచ్చు, నేను 0 చుట్టూ ఉంచుతాను. 5 సంభావిత స్థాయిలో చెడ్డ ఊహ కాదు.', 'అప్పుడు సంభావిత స్థాయిలో నేను ఒక రెక్కను రూపొందించాల్సిన అవసరం ఉందని నాకు తెలుస్తుంది.', 'కాబట్టి, రూట్ భాగం కొన భాగం కంటే ముందుగానే నిలిచిపోతుందని నేను నిర్ధారిస్తాను.', 'కాబట్టి, నేను వాష్ అవుట్ ఇవ్వగలను, అంటే నేను కొన వద్ద కొంత సెట్టింగ్ నెగటివ్ యాంగిల్ ఇస్తాను.', 'కాబట్టి, ఈ సంఖ్యలు చారిత్రక డేటా నుండి వచ్చాయి ఎందుకంటే మీరు ఇప్పుడు విశ్లేషణ చేయడం లేదు కాబట్టి ఇవి మీ ప్రారంభ సంఖ్యలు అని అర్థం చేసుకోండి.', 'అప్పుడు మీరు విశ్లేషణ చేస్తారు మరియు 3 అవసరమా లేదా 3 అవసరమా అని చూస్తారు. 5 అవసరం లేదా 4 అవసరం లేదా 2 అవసరం లేదా అస్సలు అవసరం లేదు.', 'మీకు మరొక ఎంపిక ఉన్నందున మీరు వేర్వేరు విభాగాలలో వేర్వేరు సిఎల్ మాక్స్ మరియు ఆల్ఫా స్టాల్ లక్షణాలను కలిగి ఉన్న వేర్వేరు ఏరోఫాయిల్ లను ఎంచుకోవచ్చు.', 'అప్పుడు కూడా మీరు మీరే ప్రశ్నించుకోండి, అది స్వీప్ అయితే నేను నిజంగా స్వీప్ ఇస్తున్నానా, అప్పుడు టిప్ స్టాల్ ను నివారించడానికి మీరు ఇక్కడ అడిగే ప్రశ్నలన్నింటినీ నేను ఏమి చేయాలి.', 'కాబట్టి, క్లుప్తంగా సంభావిత స్థాయిలో వింగ్ ఏరియా అంటే ఏమిటి మరియు మీన్ ఏరోడైనమిక్ కార్డ్ అంటే ఏమిటి అనే దాని గురించి మీకు ఆలోచన వచ్చింది, మీకు టేపర్ నిష్పత్తి తెలిసిన తర్వాత మీన్ ఏరోడైనమిక్ కార్డ్ ను ఎలా లెక్కించాలో మీకు తెలుసు.', 'ఇప్పుడు మీ రెక్కల వైశాల్యం కారక నిష్పత్తి మొదలైనవి మీకు తెలిసిన తదుపరి ప్రశ్న ఫ్యూజ్ పెద్ద పొడవు ఎలా ఉండాలి అనే తదుపరి ప్రశ్న మీకు వస్తుంది ఫ్యూజ్ పెద్ద పొడవు ఏమిటి.', 'మరియు మీకు చివరి తరగతి తెలుసు, మేము చాలా మంచి సహసంబంధం ఫ్యూజ్ పెద్ద పొడవును w 0 గా చూపించాము, శక్తి c స్థూల బరువుతో చాలా మంచి సహసంబంధం మరియు మేము సెక్షన్ 206 మరియు సైనస్ 912 కోసం ప్రదర్శించాము, ఇది ఎంత ఖచ్చితంగా అంచనా వేస్తుంది మరియు మీకు కొంత ఫ్యూజ్ పెద్ద పొడవు ఉందని మీకు తెలుసు.', 'కాబట్టి, సుమారుగా ఇది ఫ్యూజ్ పెద్ద పొడవు అని మీకు తెలుసు, నేను ఆపరేట్ చేస్తాను, తదుపరి ప్రశ్న ఈ ఫ్యూజ్ పెద్ద పొడవు నుండి వస్తుంది, సాధారణంగా నేను సంప్రదాయ విమానం కోసం చివరి తరగతిలో మీకు చూపించాను, ఇక్కడ నుండి మొత్తం పొడవులో 25 నుండి 30 శాతం వరకు cg ఉంటుందని అనుకోవడం చెడ్డ ఆలోచన కాదు.', 'ఎందుకంటే cg చాలా ముఖ్యం ఎందుకంటే మీ విమానం వింగ్ టెయిల్ యొక్క మొత్తం సంస్థాపన ప్రతిదీ cg ఎందుకు ఆధారపడి ఉంటుంది ఎందుకంటే ఇది కొన్ని స్థిరత్వ ప్రమాణాలను నిర్వచించాలి.', 'ఇది కొన్ని స్థిరత్వ ప్రమాణాలను సంతృప్తిపరుస్తుంది, పనిలో ఎక్కువ భాగం ఇటరేషన్ ఇక్కడ పనిచేస్తుంది ఎందుకంటే ఈ దశలో ఏ విధమైన బరువు పంపిణీ జరుగుతుందో మీకు తెలియదు.', 'కాబట్టి, ఒకసారి మీరు భావన చేసిన తర్వాత మీరు సుమారుగా పరస్పర సంబంధం ఉన్న డేటా గణాంక డేటాను ఉపయోగిస్తారు మరియు cg ఎక్కడ ఉండాలో చూడండి, కానీ మీరు దీనిని తీసుకుంటే చెడ్డ ఆలోచన కాదు cg మొత్తం పొడవులో శాతం.', 'ఇప్పుడు నేను దీన్ని చేసిన తర్వాత, నాకు లభించిన సమాచారం ఏమిటి, మనమందరం కాన్సెప్చువల్ డిజైన్ గురించి మాట్లాడుతున్నామని చూద్దాం.', 'వింగ్ ఏరియా అంటే ఏమిటో మనకు తెలుసు లేదా వింగ్ ఏరోడైనమిక్ కార్డ్ అంటే ఏమిటో మనకు తెలుసు మరియు తదుపరి ప్రశ్న ఏమిటంటే ఫ్యూజ్ పెద్ద పొడవు అంటే ఏమిటో కూడా మనకు తెలుసు.', 'కాబట్టి, ఇది ఫ్యూజ్ పెద్ద పొడవు అని చెప్పండి మరియు సుమారు 30 శాతం నేను cg ని ఉంచాను. నేను ఏమి చేయాలనుకుంటున్నానో నేను సిమెట్రిక్ వింగ్ రూపకల్పన చేస్తున్నానని చెప్పనివ్వండి.', 'కాబట్టి, నేను మొదట్లో ప్రయత్నిస్తాను.', 'కాబట్టి, వింగ్ యొక్క AC మరియు cg ఒకే ప్రదేశంలో ఉన్నాయి, అంటే ఈ వింగ్ లిఫ్ట్ ను ఉత్పత్తి చేయడానికి మాత్రమే బాధ్యత వహిస్తుంది, నేను సిమెట్రిక్ వింగ్ తీసుకున్నాను.', 'కాబట్టి, ప్రతికూలంగా ఉండే c m a c లేదు, నేను జీవితాన్ని సులభతరం చేస్తున్నాను, నేను రెక్క యొక్క ac మరియు విమానం యొక్క c g లను ఒకే సమయంలో ఉంచాను.', 'కాబట్టి, ఈ వింగ్ లిఫ్ట్ అస్థిరపరిచే లేదా స్థిరీకరించే క్షణాన్ని సృష్టించదు.', 'తదుపరి ప్రశ్న ఏమిటంటే, తోక పరిమాణం క్షితిజ సమాంతరంగా మరియు నిలువుగా ఎంత ఉంటుంది, ఇది మన ప్రశ్న తోక పరిమాణం అలాగే నేను తోకను ఎక్కడ గుర్తించగలను, ఫ్యూజ్ పెద్ద పొడవు ఏమిటో ఇప్పుడు మనకు తెలుసని మర్చిపోవద్దు.', 'మనకు వింగ్ ఏరియా తెలిసిన తీగ తెలుసు.', 'కాబట్టి, ప్రారంభించడానికి క్షితిజ సమాంతర తోక పరిమాణం ఎలా ఉండాలి మరియు దాని స్థానం గురించి ఒక ఆలోచన కలిగి ఉండటానికి మేము మీకు కొన్ని మార్గదర్శకాలను ఇచ్చాము, ఇక్కడ భౌతిక శాస్త్రాన్ని అర్థం చేసుకోవడం ద్వారా మనందరికీ టెయిల్ వాల్యూమ్ నిష్పత్తి తెలుసు, ఇది s t l t by s w మరియు c బార్ చాలా ముఖ్యమైన పాత్ర పోషిస్తుంది మరియు మీరు చాలా తెలివిగా చూశారు నేను రెక్క యొక్క ac మరియు c g లను ఒకే సమయంలో ఉంచాను.', 'కాబట్టి, నేను టెయిల్ క్షితిజ సమాంతర తోకను ఎక్కడ ఉంచినా క్షితిజ సమాంతర తోక యొక్క AC మరియు ఈ దూరం విమానం మరియు రెక్క యొక్క AC గా ఉంటుంది.', 'కాబట్టి, దీనిని నేను సిద్ధాంతపరంగా lt అని నిర్వచిస్తున్నాను, సంప్రదాయబద్ధంగా lt అనేది టెయిల్ యొక్క ac మరియు విమానం యొక్క cg మధ్య దూరం.', 'ఇప్పుడు, నేను vh గురించి మాట్లాడే ముందు మరియు క్షితిజ సమాంతర తోకకు సంబంధించినంతవరకు నేను నిర్ణయించేది ఏమిటంటే, మనం వింగ్ కోసం సిమెట్రిక్ ఎయిర్ ఫాయిల్ ను ఉపయోగిస్తాము, మనం ఎక్కువగా కాంబర్ ఎయిర్ ఫాయిల్ ను ఉపయోగిస్తాము, నేను సిమెట్రిక్ ఇస్తున్న అన్ని ఉదాహరణలు.', 'కాబట్టి, ప్రారంభించడానికి ఇతర సమస్యలు లేవు, కానీ క్షితిజ సమాంతర తోక ఇది సమరూపంగా ఉంటుంది మరియు క్షితిజ సమాంతర తోకలో తోక యొక్క కారక నిష్పత్తి రెక్క యొక్క కారక నిష్పత్తి కంటే తక్కువగా ఉండాలి, దీనికి కారణం మీకు తెలుసు ఎందుకంటే రెక్క తోక కంటే ముందుగానే నిలిచిపోవాలని మేము కోరుకుంటున్నాము.', 'కాబట్టి, ఇక్కడ ఒక నియంత్రణ మిగిలి ఉంది మరియు కారక నిష్పత్తి తగ్గినప్పుడు స్వీయ ప్రేరిత డౌన్ వాష్ కూడా పెరుగుతుంది.', 'కాబట్టి, మీకు ఉన్న అవగాహన అంతా తరువాత ఆగిపోతుంది.', 'కాబట్టి, నేను చారిత్రక విలువ నుండి తీసుకుంటాను అని చెప్పండి, నేను టేల్ యొక్క కారక నిష్పత్తి 4 లేదా 5 కుడి ఉంటుంది.', 'vh యొక్క ప్రాముఖ్యతను నేను అర్థం చేసుకున్న తర్వాత నేను గణాంక డేటాను ఉపయోగిస్తాను మరియు నేను ఏ రకమైన విమానాన్ని రూపకల్పన చేస్తున్నానో తనిఖీ చేస్తాను మరియు నేను సాధారణ విమానయానాన్ని రూపకల్పన చేస్తున్నానని చెప్పనివ్వండి మరియు మీరు సాధారణ విమానయానం కోసం నా చివరి ఉపన్యాసాన్ని చూస్తే రేమర్ పుస్తకంలో ఉన్న vh ఈ విలువ సుమారు 0 గా వ్రాయబడింది. 7 కొంచెం ఎక్కువ వైపు, కానీ సంభావిత దశలో మీరు ఈ అధిక విలువలను తప్పక ఉపయోగించాలి.', 'కాబట్టి, ఈ c h t యొక్క అర్థం ఏమిటి, ఇది ఏమీ కాదు, కానీ ప్రాథమికంగా v h అంటే 0. 7.', 'కాబట్టి, అది s t into l t by s wing c w wing కి సమానం, మన లక్ష్యం ఏమిటి, తోక పరిమాణం ఏమిటో చూడటం మన లక్ష్యం, కానీ ఇప్పుడు మీరు ఈ విలువను అంచనా వేశారు, మీరు దీనిని అంచనా వేశారు, మీరు ఇప్పుడు s t into l t ను అంచనా వేయాలి, మీరు ఆ విలువను 0 గా పొందుతారు. 7 ఇన్టు s w ఇన్టు c w బార్.', 'కాబట్టి, ఈ విలువ మీకు ఎంత st into lt అని కూడా తెలుసు మరియు lt కోసం మీకు గణాంక డేటా ఆధారంగా మరొక మార్గదర్శకం ఉంది, నా చివరి ఉపన్యాసం ఫ్రంట్ మౌంటెడ్ ఇంజిన్ lt కోసం మీరు 60 శాతం ఫ్యూజ్ పెద్ద పొడవును తీసుకోవచ్చని చెబుతుంది, అదేవిధంగా వింగ్ మౌంట్ కోసం 55 శాతం వైవిధ్యం ఉంది, కానీ నేను చేసినప్పుడు నేను 65 నుండి 70 శాతం ఫ్యూజ్ పెద్ద పొడవును తీసుకుంటాను.', 'కాబట్టి, మీరు దీనిని 60 లేదా 65 శాతం 70 శాతం తీసుకోవచ్చు, వాస్తవానికి మీకు వివిధ కలయికలు ఉండాలి.', 'కాబట్టి, నేను ఈ సంఖ్యలో ఒకదాన్ని ఎంచుకుంటాను మరియు ఫ్యూజ్ పెద్ద పొడవు మీకు ఇప్పటికే తెలుసు.', 'కాబట్టి, మీకు తెలుసు.', 'కాబట్టి, lt లోకి s t ఇప్పుడు lt తెలుసు.', 'కాబట్టి, మీరు s t ని పొందుతారు. కాబట్టి, క్షితిజ సమాంతర తోకను ఎక్కడ గుర్తించాలో ఇప్పుడు మీకు తెలుసు మరియు సంభావిత స్థాయిలో దాని వైశాల్యం ఎలా ఉంటుందో మేము ఇప్పుడు ఈ సమయంలో విశ్లేషణ చేస్తున్నాము, ఇది ప్రారంభ స్థానం.', 'కాబట్టి, నేను అలా చేసిన తర్వాత సహజమైన ప్రశ్న వస్తుంది, నిలువు తోక పరిమాణం ఎలా ఉంటుందో దయచేసి మళ్లీ మళ్లీ అర్థం చేసుకోండి, ఇవన్నీ సంభావిత సంఖ్యలు అని నేను పునరావృతం చేస్తున్నాను, మేము విశ్లేషణ చేయడం లేదు, ఇక్కడ నుండి విశ్లేషణకు ఎలా గ్రాడ్యుయేట్ చేయాలో నేను మీకు చెప్తాను.', 'కాబట్టి, నిలువు తోక కోసం మీ అంచనాలో మీరు పరిపూర్ణంగా ఉన్నారని మేము దానిని అనుసరిస్తాము, అక్కడ మేము సాధారణ విచలనం కోసం నేను మీకు చివరి తరగతి ఇచ్చిన గుణకం c v t ని ఉపయోగిస్తాము. 04 దయచేసి మీరు c h t లేదా తోక వాల్యూమ్ నిష్పత్తిని నిర్వచించినప్పుడు కూడా అర్థం చేసుకోండి, నిలువు తోక కోసం మేము s t l t by s c బార్ గా నిర్వచించాము, మేము s t l నిలువు తోకను s వింగ్ ద్వారా వింగ్ కుడి వైపున నిర్వచించాము.', 'కాబట్టి, అందుకే పరిమాణాల క్రమం భిన్నంగా ఉంటుంది.', 'కాబట్టి, ఒకసారి నాకు cvt తెలుసు. కాబట్టి, నేను 0 అని వ్రాస్తాను. నేను 0 ని ఎంచుకున్నానని చెప్పడానికి 04 సమానం. 04 ఇది s నిలువు తోక l నిలువు తోక ద్వారా s వింగ్ ఇన్ టూ స్పాన్ కు సమానం మరియు వింగ్ యొక్క స్పాన్ నాకు తెలుసు అని మీకు తెలుసు.', 'కాబట్టి, నేను మళ్ళీ s v l v = 0 పొందుతాను. 04 ఇన్టు s w ఇన్టు స్పాన్.', 'కాబట్టి, ఈ సంఖ్య తెలుసు.', 'కాబట్టి, నాకు తెలుసు s v into l v ఇప్పుడు ప్రశ్న l v = l t మరియు ఒక విమానం కోసం ఇది ఎంపెనేజ్ అయితే కొన్ని కాన్ఫిగరేషన్ ఇక్కడ క్షితిజ సమాంతర తోకను కలిగి ఉంటుందని మరియు నిలువు తోక ఇక్కడ నుండి ప్రారంభమవుతుందని మీరు చూడవచ్చు.', 'కాబట్టి, సహజంగానే ఇది నిలువు తోక యొక్క a c అయితే మరియు c g ఇక్కడ ఉంటే lv మరియు lt ఒకేలా ఉండవు, కానీ సంభావిత స్థాయిలో రెండూ ఒకేలా ఉన్నాయని మేము చెబుతాము.', 'కాబట్టి, ఒక కోణంలో నేను lv అని కూడా చెబుతున్నాను.', 'కాబట్టి, నేను సులభంగా పొందుతాను.', 'కాబట్టి, నేను ఈ సంఖ్యను పొందిన తర్వాత s v నిలువు తోక ప్రాంతం ఏమిటో కూడా నాకు సులభంగా తెలుస్తుంది, అప్పుడు మనం ఇచ్చిన విమానం కోసం క్రాస్ చెక్ చేస్తాము, రెక్కల ప్రాంతానికి సంబంధించి నిలువు తోక వైశాల్యం నిష్పత్తి ఏమిటి, అంటే నిలువు తోక నుండి రెక్కల వైశాల్యం నిష్పత్తి ఏమిటి రెక్కల వైశాల్యంతో క్షితిజ సమాంతర తోక నిష్పత్తి ఏమిటి మరియు ఈ రకమైన విమానం కోసం ఈ నిష్పత్తి దగ్గరగా వస్తుందా లేదా అని నేను చూడాలి.', 'మేము క్షితిజ సమాంతర తోక మరియు నిలువు తోక గురించి మాట్లాడాము, కానీ మీరు క్షితిజ సమాంతర తోకను చూస్తే, ఇచ్చిన క్షితిజ సమాంతర తోక ప్రాంతానికి ఎలివేటర్ పరిమాణం ఎంత అనే ప్రశ్న ఉంటుంది.', 'ఈ విమానంలో చాలా వరకు మీరు ఈ ఎలివేటర్ మరియు చుక్కానిని', 'కనుగొంటారు, ఇది నిలువు తోక అయితే మీకు ఇక్కడ మరికొన్ని చుక్కాని ఉన్నాయి.', 'కాబట్టి, సాధారణంగా ఎలివేటర్ మరియు చుక్కాని 25 శాతం నుండి 50 శాతం తోక తీగ అంటే ఇది నా క్షితిజ సమాంతర తోక అయితే మీరు ఈ 50 శాతం రేఖను కనుగొంటారు.', 'కాబట్టి, ఎలివేటర్ కోసం సుమారు 25 నుండి 50 శాతం ప్రాంతం ఉంచబడుతుంది.', 'మేము విశ్లేషించిన తర్వాత మీరు చూసే సూక్ష్మమైన విషయాలు ఉన్నాయి, అవును నేను తీసుకుంటున్నాను, నేను కార్డ్ పరంగా 50 శాతం క్షితిజ సమాంతర తోకను తీసుకుంటున్నాను అని చెప్పనివ్వండి, ఈ భాగం నా ఎలివేటర్, నాకు ఎలివేటర్ ఇలా ఉండవచ్చు, నేను ఇందులో 90 శాతం మాత్రమే ఎలివేటర్ గా ఉపయోగించగలను ఎందుకంటే ఇక్కడ చిట్కా నష్టాలు ఉన్నాయని నాకు తెలుసు, నేను దానిని సరిగ్గా ఉపయోగించలేను.', 'మరియు ఎలివేటర్ లో ఇతర సమస్యలు ఉన్నాయి, అధిక వేగంతో ఫ్లట్టర్ అని పిలువబడేది ఉందని మీరు కనుగొంటారు, ఇది ఈ భారీ లైన్ చుట్టూ కదలాల్సిన ఎలివేటర్ అయితే దాని cg వెనుక ఉందని మీరు చూడవచ్చు.', 'కాబట్టి, ఇది ఇలా చేసే ధోరణిని కలిగి ఉంటుంది.', 'కాబట్టి, దాని కోసం మనం ఏరోడైనమిక్ బ్యాలెన్స్ మాస్ బ్యాలెన్స్ అని పిలువబడే కొన్ని ఇతర బ్యాలెన్స్ లను కూడా చేస్తాము, ఈ ప్రభావం తటస్థీకరించబడిందని మనం చూడాలనుకుంటున్నాము, మన స్టెబిలిటీ తరగతులలో మనం ఇంతకు ముందు మాట్లాడిన విషయాల గురించి మాట్లాడుతాము, కానీ ఇది భావన కోసం మీరు ఆ విషయాల గురించి బాధపడాల్సిన అవసరం లేదు, నాకు క్షితిజ సమాంతర స్టెబిలైజర్ ప్రాంతం వచ్చిన తర్వాత ఎలివేటర్ ప్రాంతం ఎంత ఉండాలి అనే దాని గురించి మీరు ఎక్కువగా బాధపడతారు.', 'కాబట్టి, సమాధానం సులభం, మీరు 50 శాతం లైన్ తీసుకోండి, కోర్ 25 నుండి 50 శాతం మధ్య ఉండాలి.', 'కాబట్టి, ప్రారంభంలో మీరు 40 శాతం తీసుకుంటారు లేదా మూడు కాన్ఫిగరేషన్లను ఎలా తయారు చేస్తారు, ఒకటి 25 శాతం 140 శాతం 150 శాతం మరియు ఏమైనప్పటికీ ఏది బాగా సరిపోతుందో చూడటానికి మేము విశ్లేషణ చేస్తాము.', 'అదేవిధంగా, చుక్కాని కోసం హై స్పీడ్ చుక్కాని కోసం హై స్పీడ్ ఎయిర్ ప్లేన్ చుక్కాని చుట్టూ ఉంటుందని మనం చూస్తాము, ఇది స్పాన్ లో 50 శాతం ఉంటుంది మరియు తీగకు సంబంధించిన తరువాత నేను ఇంతకు ముందు చెప్పినది ఏమిటంటే 25 నుండి 50 శాతం నిలువు తోక తీగ, కానీ మీరు అధిక వేగం కోసం కనుగొంటారు ఆ నిలువు స్పాన్ లో 50 శాతం నిలువు స్టెబిలైజర్ ను చుక్కానిగా ఉపయోగిస్తారు.', 'ఒక చుక్కానిలో మెరుగైన స్పిన్ రికవరీ లక్షణాలను ఎలా కలిగి ఉండాలో మనం చర్చించబోయే అనేక ఇతర విషయాలు ఉన్నాయి, ఇది తుది రూపకల్పనలోకి లేదా సంభావిత దశలో రెండవ దశ రూపకల్పనలోకి వస్తుంది, నేను ఆ సంఖ్యలను సరిగ్గా కలిగి ఉండాలి.', 'ఒక సంభావిత దశలో ఇతర నియంత్రణ ఉపరితలాలకు తిరిగి వెళితే మనకు రెక్కలు ఉన్నాయి మరియు రోల్ నియంత్రణ ఐలెరాన్ ద్వారా జరుగుతుందని మీకు తెలుసు మరియు ఐలెరాన్ లో ఐలెరాన్ స్పాన్ 90 శాతం మొత్తం 90 శాతం ఉంటుందని మీరు కనుగొంటారు, మీరు విమానాన్ని చూడటానికి ఖర్చు చేయవచ్చు, ఇక్కడ 90 శాతం స్పాన్ ఐలెరాన్ గా ఉపయోగించబడుతుంది, ఈ శాతం మళ్లీ ఉపయోగించబడదు ఎందుకంటే చిట్కా స్టాల్స్ ఉన్నాయని మీకు తెలుసు, శీర్షాలు ఉంటాయి.', 'కాబట్టి, ప్రభావం మంచిది కాకపోవచ్చు, కానీ అధిక లిఫ్ట్ పరికరాలు అయిన ఫ్లాప్ ల కోసం మీకు స్థలం ఉండాలని కూడా మీరు గుర్తుంచుకుంటారు.', 'కాబట్టి, ఇప్పుడు ఏమి జరుగుతుంది, అప్పుడు మీ వింగ్ లేఅవుట్ మధ్యలో కొంత భాగాన్ని మీరు హై లిఫ్ట్ పరికరాల కోసం ఉపయోగిస్తున్నారని మరియు ఫ్లాప్స్ మరియు మిగిలిన భాగాన్ని మీరు ఎయిలెరాన్ గా ఉపయోగిస్తున్నారని చెప్పడానికి మారుతుంది.', 'కాబట్టి, ఇది ఐలెరాన్ మరియు ఇవి హై లిఫ్ట్ పరికరాలు ప్రశ్న ఏమిటంటే, ఒక సంభావిత దశలో ఐలెరాన్ పరిమాణాన్ని మీరు రేమర్ నుండి మళ్లీ చారిత్రక ధోరణిని ఉపయోగించవచ్చని నేను ఎలా నిర్ణయిస్తాను, మీరు వాటిని గ్రహించే సాధారణ విమానం కోసం నేను మీకు కొంత సంఖ్యను ఇస్తాను.', 'కాబట్టి, నేను ఈ పాయింట్ 2, పాయింట్ 4, పాయింట్ 6, పాయింట్ 8 గీయడానికి అనుమతిస్తే ఇది వింగ్ స్పాన్ ద్వారా ఐలెరాన్ స్పాన్ మరియు ఇది వింగ్ కార్డ్ ద్వారా ఐలెరాన్ కార్డ్, చారిత్రక ధోరణి ఇలా ఉంటుంది.', 'దీన్ని ఎలా ఉపయోగించాలో, ఈ విలువలు దయచేసి పుస్తకం నుండి లేదా మరే ఇతర సాహిత్యం నుండి ఆ పటాలను ఇక్కడ చూడండి, మేము వెతుకుతున్నది నేను నా ఐలెరాన్ను ఎలా పరిమాణం చేయగలను ఇది వింగ్ ఒక విషయం నేను మొదట నిర్ణయించుకుంటాను ఒకసారి ఫ్లాప్ స్థలం ఏమి ఉంచాలి.', 'కాబట్టి, మనకు ఐలెరాన్ కోసం చాలా స్థలం వచ్చింది మరియు సాధారణంగా మీరు సాధారణంగా ఐలెరాన్ స్పాన్ 50 శాతం నుండి 90 శాతం వరకు ఉంటుందని మీరు కనుగొంటారు, నేను 90 శాతం చెప్పినప్పుడు మీరు సులభంగా అర్థం చేసుకోగలరు అంటే హై లిఫ్ట్ పరికరాలు లేవు అంటే ఇక్కడ 5 శాతం మిగిలి ఉంది ఐలెరాన్, కానీ నేను ఫ్లాప్ ఉపయోగిస్తున్నప్పుడు మీరు 50 శాతానికి దగ్గరగా ఉంటారు.', 'కాబట్టి, నేను ఈ నిష్పత్తిని కలిగి ఉంటే, నేను ఇక్కడ నుండి ఒక సంఖ్యను ఎంచుకున్న తర్వాత నాకు తెలుస్తుంది, అప్పుడు నాకు ఈ నిష్పత్తి తెలుసు మరియు నిష్పత్తి 6 పాయింట్ కు వెళ్తుందని నేను సులభంగా అనుకోగలను.', 'కాబట్టి, నేను ఇక్కడకు వచ్చాను మరియు ఎక్కడో ఇక్కడ నేను ఐలెరాన్ కార్డ్ మరియు వింగ్ కార్డ్ నిష్పత్తి ఏమిటో చూస్తున్నాను మరియు వింగ్ కార్డ్ నాకు తెలుసు కాబట్టి ఇక్కడ నుండి ఐలెరాన్ కార్డ్ అంటే ఏమిటో కూడా నేను కనుగొనగలను, ఇది మీకు మంచి అంచనాలను కూడా ఇస్తుంది సంభావిత దశలో హై స్పీడ్ ఎయిర్ ప్లేన్ కోసం కూడా అర్థం చేసుకోండి మీరు అధిక వేగంతో ఇలాంటి సంప్రదాయ ఐలెరాన్ను ఉపయోగిస్తుంటే మీరు ఇక్కడ ఒక విక్షేపణను ఇస్తున్నట్లయితే ఇది జరగవచ్చు, కానీ అధిక వేగం కారణంగా ఈ రెక్క క్రిందికి కుడివైపుకు తిరగవచ్చు, ఇది ట్విస్టింగ్ క్షణాన్ని ఉత్పత్తి చేస్తుంది మరియు తరువాత బ్యాంకుకు బదులుగా అది వదిలివేయబడింది, అది బ్యాంకును ప్రారంభించవచ్చు, మనం దానిని ఐలెరాన్ రివర్సల్ అని పిలుస్తాము.', 'కాబట్టి, హై స్పీడ్ ఎయిర్ ప్లేన్ కోసం ప్రజలు స్పాయిలర్ లను ఉపయోగించడాన్ని మీరు చూస్తారు, లిఫ్ట్ ను చెడగొట్టడానికి స్పాయిలర్లు అవసరం, సాంప్రదాయకంగా అవి ల్యాండింగ్ కోసం ఉపయోగించబడతాయి, కానీ ఇప్పుడు నేను రెక్కకు ఒక వైపు లిఫ్ట్ ను తగ్గిస్తే మీరు చూడవచ్చు.', 'కాబట్టి, నేను బ్యాంక్ కోణాన్ని ఉత్పత్తి చేయగలను మరియు హై స్పీడ్ ఐలెరాన్ రివర్సల్ ను నివారిస్తాను.', 'కాబట్టి, ఈ కలయికలన్నీ ఉపయోగించబడతాయి మరియు సాధారణంగా ఈ స్పాయిలర్లు వ్యవస్థాపించబడతాయి ఇది రెక్క మరియు ఇది గరిష్ట మందం యొక్క లైన్ గరిష్ట మందం తర్వాత స్పాయిలర్లు వ్యవస్థాపించబడతాయి.', 'కాబట్టి, ఆ వివరాలన్నీ మనం తరువాత మాట్లాడుతాము.', 'అయితే, మీరు తప్పక అర్థం చేసుకోవాలి ఎందుకంటే రోలింగ్ మొమెంట్ ఇచ్చే స్పాయిలర్ల వెనుక ఉన్న భౌతికశాస్త్రం లిఫ్ట్ను పాడు చేయడంపై ఆధారపడి ఉంటుంది, ఆ ప్రభావం నాన్-లీనియర్.', 'కాబట్టి, ఇవి చిన్న దిద్దుబాట్ల కోసం, దానిని సజావుగా నిర్వహించడానికి చాలా మంచి ఫ్లైట్ కంట్రోల్ సిస్టమ్ ఉండాలి.', 'నేటి ఉపన్యాసం ద్వారా నేను ఒక సంభావిత స్థాయిలో సంగ్రహించడానికి ప్రయత్నించాను, సూత్రం లేకుండా మీరు విమానం గురించి ఎలా ఆలోచించగలరు, కానీ అదే సమయంలో మీరు అర్థం చేసుకోవాలి, నా ఎలివేటర్ లేదా చుక్కాని ఎంత ప్రభావవంతంగా ఉండాలో కూడా నేను తెలుసుకోవాలి.', 'కాబట్టి, నేను విమానాన్ని ఒక పరిస్థితి నుండి మరొక పరిస్థితికి కత్తిరించగలను, నా ఎలివేటర్ పరిమాణం ఎలా ఉండాలి.', 'కాబట్టి, నేను సరైన రకమైన ఎలివేటర్ నియంత్రణ శక్తిని పొందుతాను.', 'కాబట్టి, ఈ భాగం నేను రేపు మాట్లాడతాను, నేను ఒక ఉదాహరణ సంఖ్యా సమస్యతో ప్రారంభిస్తాను, ఆపై తిరిగి వచ్చి ఈ అవగాహనను ఎలివేటర్ రూపకల్పనలో ఎలా అనువదించవచ్చో చూడటానికి ప్రయత్నిస్తాము.', 'ధన్యవాదాలు తెలిపారు.']
2024-02-10 19:22:32,165 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['గుడ్ మార్నింగ్ మిత్రులారా, మేము థ్రస్ట్ లోడింగ్ పై చర్చను కొనసాగిస్తాము.', 'దయచేసి నేను థ్రస్ట్ లోడింగ్ t బై w గురించి మాట్లాడుతున్నప్పుడు గుర్తుంచుకోండి, మరొక పరామితి వింగ్ లోడింగ్ కూడా ముఖ్యమైన పాత్ర పోషిస్తుందని నేను గుర్తుంచుకోవాలి.', 'మరియు ఒక మంచి డిజైనర్ తుది మిషన్ అవసరం ఆధారంగా సరైన కలయికను ఎంచుకుంటాడు.', 'డిజైనర్ గా నేను వింగ్ లోడింగ్ ను గ్రహించాలనుకున్నప్పుడు మీరు గుర్తుచేసుకుంటే, w by s తక్కువగా ఉంటే, అంటే బరువును సమతుల్యం చేయడానికి లిఫ్ట్ ను ఉత్పత్తి చేయడానికి చాలా ప్రాంతం అందుబాటులో ఉందని నాకు తెలుసు.', 'కాబట్టి, సహజంగానే బరువుకు సమానమైన లిఫ్ట్ ను నిర్వహించడానికి అవసరమైన మీ కనీస వేగం తగ్గుతుంది, మీ టేకాఫ్ వేగం కూడా పెరుగుతుంది, కానీ అదే సమయంలో వింగ్ యొక్క తక్కువ వింగ్ లోడింగ్ ఏరియా సాపేక్షంగా పెద్దదని మనం తెలుసుకోవాలి.', 'కాబట్టి, పెద్ద ఉపరితల వైశాల్యం ఎక్కువ చర్మం ఘర్షణ, ఎక్కువ లాగడం.', 'కాబట్టి, ఎక్కువ శక్తి.', 'కాబట్టి, అది ఒక సంఘర్షణ.', 'మీరు ఒక డిజైనర్ కోసం చూడవచ్చు, సాధారణ కారణాల వల్ల t by w మరియు w by s కలయికకు రావడానికి చాలా సార్లు సంఘర్షణ ఉంటుంది.', 'నేను w by s తక్కువగా ఉండాలని కోరుకుంటున్నాను, అంటే, s సాపేక్షంగా ఎక్కువగా ఉంటుంది మరియు ఇది నా v స్టాల్ కు సమానం, ఇది 2 w by s rho c l తక్కువగా ఉంటుంది లేదా w by s తక్కువగా ఉంటే తక్కువగా ఉంటుంది.', 'డిజైనర్ దృక్పథం నుండి రెక్కల విస్తారమైన ప్రాంతం ఉంటే.', 'కాబట్టి, అది ఇచ్చిన డైనమిక్ పీడనం మరియు దాడి కోణం కోసం పెద్ద లిఫ్ట్ ను ఉత్పత్తి చేస్తుంది.', 'w by s తక్కువగా ఉన్న క్షణం మనకు ప్రతికూలత ఉంది, మనకు v స్టాల్ యొక్క ప్రయోజనం లేదా v స్టాల్ ఆధారంగా ఏదైనా కార్యాచరణ అవసరం ఉంది.', 'ఉదాహరణకు, టేకాఫ్, ల్యాండింగ్, వారు కూడా v స్టాల్ తక్కువగా ఉండటం వల్ల ప్రయోజనం పొందుతారు, తక్కువ టేకాఫ్ వేగం, తక్కువ ల్యాండింగ్ వేగం ఉంటుంది, కానీ w by s తక్కువగా ఉన్నందున మనకు తెలుసు.', 'కాబట్టి, s ఎక్కువగా ఉంటుంది.', 'కాబట్టి, పెద్ద ప్రాంతం, చర్మం పెద్ద ఘర్షణ.', 'కాబట్టి, పెద్ద డ్రాగ్ మరియు మళ్లీ భర్తీ చేయడానికి మనకు అధిక థ్రస్ట్ ఉండాలి.', 'ఇది చాలా ప్రయత్నం చేయకుండా వెళుతుంది, అంటే w బై s పెద్దది అయితే, రెండు కాన్ఫిగరేషన్ లు ఒకే బరువును కలిగి ఉన్నాయని నేను అనుకుంటే వైశాల్యం చాలా తక్కువగా ఉంటుంది.', 'ఏరియా తక్కువ అంటే అవును v స్టాల్ పెరుగుతుంది, కానీ చర్మం ఘర్షణ డ్రాగ్ తక్కువగా ఉండటం వల్ల నేను చూడగలిగే ప్రయోజనం తక్కువగా ఉంటుంది.', 'కాబట్టి, నా థ్రస్ట్ అవసరం తక్కువగా ఉండవచ్చు.', 'హై స్పీడ్ ఎయిర్ ప్లేన్ కోసం మనం w బై s పెద్దదిగా ఉంటుందని కనుగొంటాము.', 'మీరు వేగంగా వేగవంతం చేయాలనుకుంటే w బై s పెద్దదిగా ఉంటుంది.', 'వాస్తవానికి, మీకు పెద్ద ప్రాంతం ఉన్నందున మరియు మీరు దానిని పెద్ద కారక నిష్పత్తితో కలిపితే నిర్మాణాత్మక సమస్య కూడా వస్తుంది.', 'నేను ఇప్పుడు ఆ వివరాల్లోకి వెళ్ళడం లేదు, కానీ నేను t బై w థ్రస్ట్ లోడింగ్ గురించి మాట్లాడుతున్నప్పుడల్లా మీరు ఒకటి లేదా రెండు ఉపన్యాసాల తర్వాత సమగ్రంగా వ్యవహరించే వింగ్ లోడింగ్ w బై s ను మీ మనస్సులో ఉంచుకోవాలి.', 'కాబట్టి, నేను కొన్ని ప్రధాన పాయింట్లను లోడ్ చేస్తూ థ్రస్ట్ కు తిరిగి వస్తాను.', 'మీరు చూస్తే ఇది మా వార్మ్ అప్ మరియు టేకాఫ్ మరియు ఇది క్లైంబ్ మరియు ఈ భాగం క్రూయిజ్.', 'ఇది మిషన్ ప్రొఫైల్ మరియు నేను 0 1 మరియు 2 ను ఉంచినట్లయితే, ఈ సందర్భంలో w 0 అంటే w టేకాఫ్ అని మీరు చూశారు.', 'ఒక డిజైనర్ కోసం కొంత సంఖ్యలో W టేకాఫ్ కు చేరుకోవడం చాలా ముఖ్యం ఎందుకంటే అది బరువు అవుతుంది మరియు అప్పుడు అతను W బై S టేకాఫ్ అంటే ఏమిటో తెలుసుకోవడానికి ప్రయత్నిస్తాడు.', 'అతను విమానాన్ని రూపొందించడం ప్రారంభించే ప్రాథమిక పరామితి అదే.', 'అదేవిధంగా, ఇప్పుడు మనం t బై w టేకాఫ్ గురించి మాట్లాడుతాము, అంటే ఈ టేకాఫ్ పరిస్థితులను అర్థం చేసుకోండి.', 'ఇది ఎందుకు ముఖ్యమైనది? నేను మీకు w బై s టేకాఫ్ తో ఒక', 'సాధారణ ఉదాహరణ ఇస్తే, ఈ w 0 అనేది w టేకాఫ్ అని మీకు తెలుసు.', 'కాబట్టి, w 1 బై w 0 ఈ విలువ 0 అని చెప్పవచ్చు. 97 అంటే ఈ విభాగంలో ఈ రంగంలో కొంత ఇంధనం వినియోగించబడిందని, ఆపై w 2/w 1 పైకి ఎక్కండి మరియు ఆ నిష్పత్తి 0 అని చెప్పండి. 985 ఎందుకంటే 0 వరకు ఎక్కడానికి. 2 ఈ నిష్పత్తి w 2 x w 1 1 కంటే తక్కువగా ఉంటుంది ఎందుకంటే కొంత ఇంధనం వినియోగించబడుతుంది.', 'కానీ నేను w 2 బై w నాట్ అంటే ఏమిటో తెలుసుకోవాలనుకుంటే, ఇది w 2 బై w టేకాఫ్ కి సమానం, అది కేవలం w 1 బై w నాట్ ఇన్ టు w నాట్ w 2 బై w 1 అవుతుంది.', 'నేను పునరావృతం చేస్తాను w 2 ద్వారా w టేకాఫ్ లేదా w నాట్ అవి ఒకేలా ఉంటాయి, అవి w 1 ద్వారా w నాట్ లోకి w 2 ద్వారా w 1 గా ఉంటాయి ఎందుకంటే దయచేసి గుర్తుంచుకోండి w నాట్ మరియు w టేకాఫ్ ఒకేలా ఉంటాయి.', 'మరియు నేను ఇలా చేస్తే నాకు 0 ఇస్తుంది. 97ని 0తో గుణించాలి. 985 మరియు అది సుమారు 0 కావచ్చు. 956 దయచేసి సందేశం ఏమిటి అని మీరే తనిఖీ చేసుకోండి w 2 బై w నాట్ 0. 956 లేదా నేను దీనిని ఇలా వ్రాస్తాను w 2 బై w టేకాఫ్ 0. 956గా నిర్ణయించారు.', '956గా నిర్ణయించారు. ఆపై నేను ఇక్కడ w 2 ని కూడా అర్థం చేసుకున్నాను, నేను ప్రారంభంలో w క్రూయిజ్ గురించి మాట్లాడుతున్నాను, ఈ విలువ 0.', 'కాబట్టి, నాకు ఆసక్తి ఉంటే w s ద్వారా టేకాఫ్ అవుతుంది. కాబట్టి, నేను ఈ w క్రూయిజ్ ను w టేకాఫ్ అని అనువదించాలి, అదే w టేకాఫ్ అయి ఉండాలి.', 'కాబట్టి, నేను ఈ షరతులకు అనుగుణంగా ఉన్నాను మరియు ఇక్కడ నుండి మీరు అర్థం చేసుకోవాలి మీరు కేవలం w టేకాఫ్ చేయాలి ఈ 0 ద్వారా విభజించబడిన ఏ క్రూయిజ్ అయినా ఉంటుంది. 956 కారకం.', 'కాబట్టి, ఇది తరగతిలో మనం చేసే సాధారణ సాధారణ పొరపాటు మరియు ఇది కేవలం సంఖ్యాపరమైన పొరపాటు కాదు, అందుకే మీరు విమానాన్ని రూపకల్పన చేస్తున్నప్పుడు నేను దీనిని నొక్కి చెబుతున్నాను. 2 క్రూయిజ్ ప్రారంభంలో మీకు చెబుతుంది, ఇది w 1 0 ద్వారా w 2 కలిగి ఉంటుందని భావిస్తున్నారు. 985 అంటే 1 మైనస్ 0 అని అర్థం. 985 నేను గుణిస్తే నేను క్రూయిజ్ వద్ద బరువు పొందుతాను లేదా నేను నిజంగా ఏదైనా అవసరం నుండి అంతగా ఉండాలని కోరుకుంటే నేను w టేకాఫ్ తగినంతగా ఉండేలా చూసుకోవాలి.', 'కాబట్టి, ఈ ఆపరేషన్ w క్రూయిజ్ తరువాత మీరు లక్ష్యంగా పెట్టుకున్నారు, అందుకే మీరు అన్ని డేటాను టేకాఫ్ పరిస్థితులుగా మార్చాలి.', 'మీరు ఇక్కడి నుండి ఇక్కడికి క్రూజింగ్ చేస్తున్నప్పుడు ఇంధన వినియోగం మళ్లీ మూడు పాయింట్ నంబర్ మూడు అని చెప్పడం ఆసక్తికరంగా ఉంటుందని కూడా మీరు చూస్తారు.', 'కాబట్టి, మనం ఏ w బై s టేకాఫ్ చేయాలి.', 'కాబట్టి, మేము సగటున తీసుకుంటాము, డిజైనర్లు దీనిని అర్థం చేసుకోవడం చాలా సులభం.', 'ఇప్పుడు నేను ఇక్కడ నుండి మళ్లీ వెనక్కి వెళితే నేను థ్రస్ట్ కు మారుతాను ఎందుకంటే మేము w లేదా t గురించి w టేకాఫ్ గురించి కొంచెం ఎక్కువగా మాట్లాడుతామని నేను మీకు చెప్పాను మరియు నేను మీకు చెప్పినప్పటి నుండి మీరు t/w గురించి ఆలోచిస్తున్నప్పుడల్లా t/w ను విడిగా చూడకూడదు.', 'అందుకే నేను t by w నుండి w by s కి కూడా కదులుతున్నాను, మళ్ళీ t by w కి తిరిగి వస్తున్నాను, t by w విడిగా ఆలోచించే పొరపాటు ఎప్పుడూ చేయకూడదనే అనుభూతిని మీకు ఇవ్వడానికి ఎల్లప్పుడూ t by w వెంటనే w by s అంటే ఏమిటో తనిఖీ చేయండి.', 'కాబట్టి, c l బై c d మీరు చూడాలి.', 'కాబట్టి, అది ఒక డిజైనర్ కు విశ్వాసాన్ని పెంపొందించడానికి సహాయపడుతుంది మరియు అది నా అభిప్రాయం ప్రకారం సరైన విధానం.', 'నేను w టేకాఫ్ ద్వారా t కోసం చేస్తే, ఇప్పుడు w టేకాఫ్ ను ఎలా సరిదిద్దాలో మనం అర్థం చేసుకున్నాము ఎందుకంటే మీకు ఇక్కడ w క్రూయిజ్ ఉంటుంది, ఇక్కడ w టేకాఫ్ గా మార్చబడిన కొంత విలువ మీకు సముద్ర మట్టం వద్ద కొంత థ్రస్ట్ ఉంటుంది.', 'కాబట్టి, t/w ఎంత అని మీకు తెలుసు, కానీ t/w 2 వద్ద 2 t/w అవసరం, ఇది ఏమీ కాదు, కానీ క్రూయిజ్ 1/c l/c d కి సమానం మరియు ఈ విలువ 0 చుట్టూ ఉండవచ్చు. 08 నేను c l వద్ద c d ద్వారా 10 కంటే ఎక్కువ 0 చుట్టూ ఎగురుతుంటే. 08,0. 09,0. 1 సంఖ్య ఏమైనప్పటికీ.', 'కాబట్టి, ఈ సమయంలో సూచించిన అవసరం, కానీ నేను చెబుతున్నట్లుగా ఈ అవసరాలన్నింటినీ t by w టేకాఫ్ లేదా w by s టేకాఫ్ గా మార్చాలి.', 'అవగాహన ఏమిటి? ఈ', 'థ్రస్ట్ ఎత్తుతో మారుతుందని అర్థం.', 'కాబట్టి, మనం ఇంజిన్ను చూడాలి మరియు నాకు t/w కొంత సంఖ్య కావాలి, t/w క్రూయిజ్ ఎత్తులో ఉందని నేను చూస్తున్నాను, 10000 అడుగుల వద్ద గాలి సాంద్రతకు సమానమైన rho అని చెప్పండి, అది 0 కావచ్చు. దాని చుట్టూ మీటర్ క్యూబ్ కు 7 కిలోలు మరియు ఆ ఎత్తులో లభించే థ్రస్ట్ సముద్ర మట్టం వద్ద లభించే థ్రస్ట్ కాదని మీకు తెలుసు.', 'కాబట్టి, మీరు మళ్ళీ ఇక్కడ నుండి సముద్ర మట్టానికి ఎత్తు ప్రభావాన్ని తీసుకొని దానిని మార్చాలి.', 'కాబట్టి, నేను t బై w టేకాఫ్ గురించి మాట్లాడుతున్నప్పుడు నేను సముద్ర మట్టానికి సంబంధించి మాట్లాడుతున్నాను.', 'ఉదాహరణకు, మీరు విమానాన్ని టి బై డబ్ల్యూ టేకాఫ్ రూపకల్పన చేస్తుంటే, కానీ మీరు లే లేదా కొన్ని ప్రదేశాల నుండి టేకాఫ్ చేయబోతున్నట్లయితే మీరు దానిని సరిదిద్దాలి ఎందుకంటే అది సముద్ర మట్టం పరిస్థితులు కాదు.', 'కాబట్టి, మీరు ఏమి చేస్తారు? మీరు చార్ట్ ను ఉపయోగించి థ్రస్ట్ ను సరిచేస్తారు, సాధారణంగా ఇది సముద్ర మట్టం వద్ద సాంద్రత ద్వారా ఎత్తులో సాంద్రతను అనుసరిస్తుంది ఎందుకంటే మీరు పైకి మరియు పైకి వెళ్ళేటప్పుడు', 'గాలి సాంద్రత తగ్గుతుంది మరియు అందువల్ల మీ థ్రస్ట్ కూడా మారుతుంది, ఇంజిన్ తయారీదారు మీకు ఈ చార్ట్ ను ఇస్తారు మరియు ఆ విషయాలు అందుబాటులో ఉన్నాయి, కానీ మీకు తెలిసిన డిజైనర్ దానిని అనుసరిస్తారు.', 'కాబట్టి, మీరు దీని ఆధారంగా మీ ప్రారంభ కాన్సెప్ట్ కాన్సెప్చువల్ డిజైన్ను ఎంచుకోండి, ఆపై మీరు ఎల్లప్పుడూ అందుబాటులో ఉన్న చార్ట్ ను చూడవచ్చు.', 'కాబట్టి, క్లుప్తంగా నేను ఈ అవగాహనతో కొంచెం లాంఛనప్రాయంగా చేయడానికి ప్రయత్నిస్తే, నేను క్రూయిజ్ గురించి మాట్లాడుతుంటే t బై w టేకాఫ్ అనేది t బై w క్రూయిజ్ కు సమానం అని వ్రాయగలను, నేను క్రూయిజ్ ను t బై w నుండి t బై w టేకాఫ్ గా మారుస్తున్నాను ఎందుకంటే క్రూయిజ్ వద్ద థ్రస్ట్ మరియు w రెండూ నాకు తెలుసు పరిస్థితులను టేకాఫ్ చేయడానికి అనువదించాల్సిన అవసరం ఉంది.', 'కాబట్టి, ఇది w క్రూయిజ్ ద్వారా w టేకాఫ్ ఇన్టు t టేకాఫ్ ఇన్టు t క్రూయిజ్ ద్వారా గుణించబడుతుంది, ఇది మీ మనస్సులో తిరిగి ఉండాలి మరియు దీని కోసం డిజైనర్ గా దీనికి కొంత సంఖ్య ఉండాలి మరియు ఇంజిన్ సముద్ర మట్టం పరిస్థితులలో ఎంత t by w టేకాఫ్ చేయగలదో మీకు తెలుసు.', 'ఇది నేను అనుకున్నది మరియు చివరి తరగతిలో నేను ప్రస్తావించిన రెండవ విషయం, మనం v max గురించి మాట్లాడుతున్నాము, విమానం v max వద్ద ఎగరగలిగేంత బలంగా ఉందని భావించి మేము ఒక ప్రశ్న అడుగుతున్నాము, అంటే విమానం డైనమిక్ ఒత్తిడిని తట్టుకునేంత బలంగా ఉంటుంది.', 'కాబట్టి, ఇది థ్రస్ట్ (thrust) మరియు డ్రాగ్ (drag) మరియు ఇది ఇలా ఉంటే మరియు థ్రస్ట్ (thrust) స్థిరంగా ఉందని ప్రాథమికంగా మనకు తెలుసు అని మేము కనుగొన్నాము, v థ్రస్ట్ (thrust) సాధారణంగా జెట్ ఇంజిన్ (jet engine) ప్రవర్తనను మార్చడం లేదని నేను ఊహిస్తున్నాను.', 'కానీ ఇది సముద్ర మట్టానికి సమానమైన ఎత్తులో ఉంటే గుర్తుంచుకోండి రో 1 నేను రో 2 కి సమానమైన రో కోసం v మాక్స్ కలిగి ఉండాలనుకుంటే, ఆ సందర్భంలో 10000 అడుగులు అని చెప్పనివ్వండి, ఈ రెండూ ఏమి జరుగుతాయి మరియు ఇది మారుతుంది ఈ మనిషి క్రిందికి రావడానికి ప్రయత్నిస్తాడు మరియు ఇది ఈ విధంగా మార్చడానికి ప్రయత్నిస్తుంది గాలి సాంద్రత తక్కువ గాలి సాంద్రత తక్కువ అంటే డ్రాగ్ భాగం తక్కువగా ఉంటుంది.', 'అయితే అదే సమయంలో ఇంజిన్ నుండి లభించే థ్రస్ట్ కూడా తక్కువగా ఉంటుంది, అది తగ్గుతుంది.', 'కాబట్టి, ఈ పాయింట్ మారుతుంది.', 'కాబట్టి, అవి మీరు జాగ్రత్తగా చూడవలసిన ముఖ్య విషయాలు మరియు మీరు అదే c l వద్ద ఎగరాలనుకుంటే, సమానమైన వేగం ఎలా పొందాలో మీకు తెలుస్తుంది.', 'చివరి తరగతిలో నేను ఇంకా ఏమి చెబుతున్నాను, మేము డ్రాగ్ కు సమానమైన థ్రస్ట్ అని మీరు చెప్పినట్లు నేను ఎలా కనుగొంటానో చూడటానికి ప్రయత్నిస్తున్నప్పుడు వెంటనే దానికి తిరిగి రావాలనుకుంటున్నాను.', 'కాబట్టి, అది c d నాట్ ప్లస్ k c l స్క్వేర్.', 'కాబట్టి, c l స్క్వేర్ బై పై కారక నిష్పత్తి e కుడి మరియు c l మీకు డైనమిక్ పీడనం ద్వారా w కి సమానమని తెలుసు సగం rho v స్క్వేర్ ఇంటు s. ఇప్పుడు నేను డ్రాగ్ పోలార్ ఎక్స్ పాండ్ డ్రాగ్ పోలార్ ఇలా వ్రాసిన తర్వాత నేను కొన్ని అంచనాలు చేసాను మరియు అవి తక్కువ వేగవంతమైన విమానం, రెక్క దీర్ఘవృత్తాకార రెక్కకు దగ్గరగా ఉండటానికి కష్టపడుతోంది మరియు ఖచ్చితంగా ఇది తక్కువ వేగంతో ఉంటుంది, కానీ నేను చూడాలనుకున్నప్పుడు ఈ డ్రాగ్ మరియు ఈ థ్రస్ట్ ఈ సమీకరణానికి సరిపోయే వేగం ఏమిటి.', 'కాబట్టి, v max కోసం నేను ఇచ్చిన q అనంతం వద్ద t max పూర్తి థొరెటల్ ఇచ్చిన ప్రశ్న అడుగుతాను, ఇది డైనమిక్ పీడనం, ఇది నేను v max అధిక వేగం గురించి మాట్లాడుతున్నప్పుడల్లా వెంటనే జాగ్రత్తగా ఉండాలని నేను ఎప్పుడూ అనుకుంటున్నాను, మీరు డైనమిక్ పీడనం పరంగా ఆలోచించడం ప్రారంభించాలి ఎందుకంటే నిర్మాణాత్మక పరిమితి డైనమిక్ పీడనం నుండి వస్తుంది.', 'కాబట్టి, నేను దీన్ని చేస్తాను, అప్పుడు ఆ వ్యక్తీకరణ వస్తుంది అని చూపించాము, ఇది t by a w max into w by s plus w by s t a by w max minus 4 c d naught by pi కారక నిష్పత్తి e మరియు ఇది పవర్ సగం.', 'నేను చెప్పినట్లుగా మీరు ఆండర్సన్ బుక్ ఇంట్రడక్షన్ టు ఫ్లైట్ ను సూచించవచ్చు.', 'వాస్తవానికి, మీకు దీని అవసరం లేదు, మీరు దీన్ని ఇక్కడ నుండి కూడా చేయవచ్చు.', 'నేను దీని గురించి చర్చిస్తున్నప్పుడు, vmax మీరు vmax t a/w పెంచాలనుకుంటే అది సరిగ్గా పెరగాలి మరియు w/s కూడా w/s పెరుగుదలను పెంచాలి అంటే s తక్కువ అని అర్థం.', 'కాబట్టి, డ్రాగ్ తక్కువగా ఉంటుంది సహజంగా v max పెరుగుతుంది.', 'కాబట్టి, ఇది స్థిరంగా ఉంటుంది, ఇది కూడా స్థిరంగా ఉంటుంది, ఈ పదం ఏమిటి అనే దాని గురించి మనం బాధపడ్డాము, సాధారణ కారణాల వల్ల మనం t/w గురించి మాట్లాడుతున్నాము, కానీ ఆ ఏరోడైనమిక్స్ ఎక్కడ ఉంది, ఆ ఏరోడైనమిక్ సామర్థ్యం ఎక్కడ ఉంది, ఇది డ్రాగ్ తక్కువగా ఉంటే మీరు వేగంగా వేగవంతం చేయవచ్చు.', 'కాబట్టి, ఎక్కడో c l by c d ఎక్కడో ఒక పాత్రను పోషించాలి, అది ఏదైనా విమాన రూపకల్పనను దాచాలి, ఏదైనా వ్యక్తీకరణ l by d max స్పష్టంగా లేదా అవ్యక్తంగా ఉంటుంది మరియు ఒక డిజైనర్ దాని యొక్క గరిష్ట ప్రయోజనాన్ని పొందుతాడు.', 'కాబట్టి, మీరు రూపకల్పన చేస్తున్నప్పుడల్లా విశ్లేషణాత్మక వ్యక్తీకరణను చూసినప్పుడల్లా l/d max ఎక్కడ ఉందో వెతకడానికి ప్రయత్నించండి, w/s అంటే ఏమిటో వారు దాచిపెడుతున్నారు, అవి ప్రారంభ రూపకల్పన పారామితులు, నేను డిజైనర్ సులభంగా ఎంచుకోగలను.', 'ప్రారంభ భాగంలో మనం సుమారుగా l/d max విలువను ఎలా పొందాలో నిర్ణయించుకున్నామని మీకు గుర్తుంది.', 'కాబట్టి, ఆ వ్యాయామం చేయమని నేను మీకు చెప్పాను, మీలో ఎంత మంది చేశారో నాకు తెలియదు, కానీ మీరు ఈ వ్యక్తీకరణ 4 c d నాట్ బై pi e కారక నిష్పత్తిని చూస్తే నన్ను చేయనివ్వండి.', 'నేను c l/c d గరిష్టంగా ఎగురుతున్నానని అనుకుందాం, నేను క్రూజింగ్ చేస్తుంటే c l/c d గరిష్టంగా ఎగురుతున్న గరిష్ట అర్థం ఏమిటి, w/c l/c d కి సమానమైన థ్రస్ట్ కి సమానం అని నాకు తెలుసు. కాబట్టి, నేను ఒక సి ఎల్ ను సి డి మాక్స్ ద్వారా ఎగురుతున్నానని చెప్పినప్పుడు, అంటే, నేను థ్రస్ట్ అవసరమైన కనీస హక్కు గురించి మాట్లాడుతున్నాను.', 'c l by c d గరిష్టంగా ఏరోడైనమిక్ గా ఉన్నప్పుడు ఏరోడైనమిక్ గా అత్యంత సమర్థవంతమైన కాన్ఫిగరేషన్ అని నేను చెబుతాను.', 'మరియు c l by c d గరిష్టంగా ఉండటానికి మీరు c l కి సమానమైన అండర్ రూట్ c d నాట్ బై k వద్ద ఫ్లై చేయాల్సిన అవసరం ఉందని మీకు తెలుసు, ఇవన్నీ మీరు మీ పనితీరు కోర్సులో కూడా చేసారు, అంటే మీరు c l వద్ద ఫ్లై చేస్తారు, అంటే మీ ప్రేరిత డ్రాగ్ గుణకం మరియు పరాన్నజీవి డ్రాగ్ అవి సమాన పరిమాణంలో ఉంటాయి.', 'కాబట్టి, c l/c d max కోసం c l = c d naught/k ఇక్కడ ఇప్పుడు c l/c d max అంటే ఏమిటో చూడండి, అది రూట్ c d naught/k/c d కింద ఉంటుంది. మరియు c l by c d గరిష్టంగా ఉన్నప్పుడు నేను c d = c d నాట్ ప్లస్ k c l స్క్వేర్ ను చూడగలిగానని కూడా మీకు తెలుసు.', 'కాబట్టి, ఇది c d నాట్ ప్లస్ c d నాట్ కు సమానం, అది 2 c d నాట్.', 'కాబట్టి, నేను ఇప్పుడు రూట్ c d నాట్ బై k డివైడెడ్ బై 2 c d నాట్ సిరీస్ కింద ఇలా వ్రాస్తాను.', 'మరియు మీ దృష్టిని ఇక్కడ ఉంచండి, ఈ సంఖ్యల సమూహం మనకు ఏరోడైనమిక్ గా ఏమి చెబుతుందో చూడాలనుకుంటున్నాము.', 'కాబట్టి ఇప్పుడు, నేను c l బై c d max అని వ్రాస్తే అది ఏమీ కాదు, కానీ l బై d max ఇది అండర్ రూట్ c d నాట్ బై k బై 2 c d నాట్ కు సమానం.', 'నేను గరిష్టంగా సి డి స్క్వేర్ ద్వారా సి ఎల్ తీసుకుంటే, ఇది ఎల్ ద్వారా డి గరిష్టంగా సమానంగా ఉంటుంది, ఇది సి డి నాట్ ద్వారా కె ద్వారా 4 సి డి నాట్ ద్వారా విభజించబడుతుంది, ఇది 4 సి డి నాట్ స్క్వేర్ కు సమానం.', 'మరియు k అంటే ఏమిటి? కాబట్టి, k అనేది 1 బై పై కారక నిష్పత్తి e దయచేసి మనం వెతుకుతున్న', 'ఆ పదాన్ని మర్చిపోవద్దు, నేను ఇక్కడ 4 c d నాట్ బై పై కారక నిష్పత్తి e ని చెరిపివేసాను.', 'నేను ఇలా చేస్తే నాకు సి డి నాట్ పైకి వెళుతుంది.', 'కాబట్టి, ఇది l/d max square అనేది pi కారక నిష్పత్తి e/4 c d కి సమానం అని సూచిస్తుంది.', 'ఇది 1 4 c d నాట్ అవుతుంది.', 'కాబట్టి, ఇది 4 c d నాట్ బై k అనేది l బై d మాక్స్ స్క్వేర్ లేదా l బై d స్క్వేర్ మాక్స్ కు సమానం.', 'మీరు c l ద్వారా c d చతురస్రానికి సమానంగా l ద్వారా d గరిష్ట చతురస్రానికి సమానంగా c d నాట్ ద్వారా k ద్వారా 4 c d నాట్ చతురస్రం అని చూస్తారు.', 'కాబట్టి, సి డి నాట్ రద్దు చేయబడుతుంది.', 'కాబట్టి, నాకు l/d చదరపు గరిష్టంగా l/d చదరపు గరిష్టంగా pi కారక నిష్పత్తి e/4 c d నాట్ కు సమానం, కానీ మేము 4 c d నాట్/pi కారక నిష్పత్తి e కోసం చూస్తున్నాము.', 'కాబట్టి, అది 1 బై l బై d మాక్స్ స్క్వేర్ క్షమించండి l బై d స్క్వేర్ మాక్స్.', 'కాబట్టి, ఆ వ్యక్తీకరణలో ఇప్పుడు నేను ఇక్కడకు వస్తే, మనం ఈ పదం కోసం చూస్తున్న ఈ వ్యక్తీకరణను పొందాము మరియు మనం చూసే ఈ పదం దీనికి రివర్స్ తప్ప మరొకటి కాదు.', 'కాబట్టి, ఇది l బై d max స్క్వేర్ తో విలోమంగా మారుతుంది మరియు ఇది ప్రతికూల పదం కాబట్టి.', 'కాబట్టి, మీరు l ను d గరిష్టంగా పెంచినప్పుడు ఈ పదం యొక్క ప్రభావం తగ్గుతుంది.', 'కాబట్టి, ఇది అధిక v max కలిగి ఉండటానికి సహాయపడుతుంది.', 'కాబట్టి, ఇప్పుడు, ఆ పజిల్ ముగిసింది అవును, v max కోసం నాకు t w బై w వీలైనంత పెద్దదిగా w బై s అవసరం.', 'కాబట్టి, వింగ్ వీలైనంత చిన్నది మరియు నేను దీని నుండి l బై d గరిష్టంగా సాధ్యమైనంత ఎక్కువగా ఉండాలి.', 'విశ్లేషణాత్మకంగా ఇది చాలా అందంగా కనిపిస్తుంది, కానీ మీ కోరికకు ఈ మూడు విషయాలను సంతృప్తిపరిచే కాన్ఫిగరేషన్ ను సాధించడం ఎల్లప్పుడూ సాధ్యం కాకపోవచ్చు మరియు ఇక్కడే ఒక డిజైనర్ దీనిని ఎలా ఆప్టిమైజ్ చేయాలో ముఖ్యమైన పాత్ర పోషించాలి.', 'అందుకే మీరు ఈ వ్యక్తీకరణను చూస్తున్నప్పుడల్లా అసైన్మెంట్ సమస్యను పరిష్కరించవద్దు.', 'మీరు tని w ద్వారా పెంచాలనుకున్న క్షణం, tని w ద్వారా పెంచడం అంటే మీరు పెద్ద ఇంజిన్ కోసం వెళుతున్నారని అర్థం.', 'పెద్ద ఇంజిన్ కూడా బరువును పెంచుతుంది, ఖర్చు పెరుగుతుంది, నిర్వహణ కష్టం కావచ్చు, నేను తక్కువ రెక్కల విస్తీర్ణాన్ని పెంచాలనుకుంటే అది బరువుకు సమానమైన లిఫ్ట్ ను సమతుల్యం చేయడానికి నాకు అధిక వేగం అధిక v స్టాల్ అవసరం మరియు l ద్వారా d గరిష్టంగా నేను నిజంగా ఎగరగలనా ఇచ్చిన కారక నిష్పత్తి కోసం అన్ని సమయాలలో l ద్వారా d గరిష్టంగా.', 'కాబట్టి, ఈ విషయాలన్నీ మీరు మీ ప్రశ్న అడగాలి మరియు నిశ్శబ్దంగా మీరు ఇక్కడ c d నాట్ విలువను చూస్తారు, మీరు l బై d మాక్స్ స్క్వేర్ తో సంబంధం కలిగి ఉండటానికి ప్రయత్నించకపోతే మీరు c d నాట్ పై సమయాన్ని వృధా చేయడం ప్రారంభించవచ్చు, కానీ దయచేసి అది తప్పుదోవ పట్టించేది కావచ్చు.', 'కాబట్టి, మీరు ఏ విశ్లేషణాత్మక వ్యక్తీకరణను ఉపయోగిస్తున్నారో అది ఎల్లప్పుడూ మంచిది, దయచేసి మీరు ఏ విధమైన సమాచారాన్ని పొందుతారో లోపల ఏమి ఉందో చూడండి.', 'నేను ఈ విషయాన్ని మీతో ప్రస్తావించాలని అనుకున్నాను.', 'ఈ విశ్లేషణాత్మక వ్యక్తీకరణలతో డిజైనర్ ఎలా ఆడాలి అని చూద్దాం.', 'నేను సంప్రదాయ విమానం కోసం ఎక్కే రేటు గురించి మాట్లాడితే ఒక ఉదాహరణ ఇస్తాను మరియు జెట్ నడిచే విమానం యొక్క ఉదాహరణ తీసుకుందాం.', 'ఈ మనిషి ఇలా వెళుతుంటే మీరు ఈ సమీకరణాన్ని వ్రాస్తే, ఇది ఒక డ్రాగ్, ఈ విధమైన వ్యక్తీకరణ గురించి మీ అందరికీ తెలుసు, ఇది ఫ్లైట్ పాత్ యాంగిల్ మరియు ఇది లిఫ్ట్.', 'కాబట్టి, నేను t మైనస్ d మైనస్ w sin gamma = m dv/dt అని వ్రాస్తాను, ఇది v దిశలో యాక్సిలరేషన్ మరియు ఇవి యాక్టివ్ ఫోర్సెస్.', 'మరియు నేను సరళీకృత విషయం చెప్తున్నాను నేను స్థిరమైన అధిరోహణ కోసం వెళుతున్నాను, అది స్థిరమైన వేగంతో సరళ కదలికను నేను 0 గా ఉంచాను.', 'కాబట్టి, నేను t మైనస్ d = w sin gamma అని చెప్తాను మరియు నేను దానిని v sin gamma = t v మైనస్ dv/w అని వ్రాయగలనని మనకు తెలుసు, ఇది క్లైంబ్ రేటు తప్ప మరొకటి కాదు.', 'ఈ వ్యక్తీకరణ t by w by s గురించి నాకు చెప్పదు, అయితే t by w మీరు ఇక్కడ చూడవచ్చు.', 'అవును, మీరు ఈ వ్యక్తీకరణను అధిరోహించే రేటును పెంచాలనుకుంటే నేను t బై w ఇన్టు v మైనస్ d బై w ఇన్టు v గా దృశ్యమానం చేయవచ్చు. కాబట్టి, t/w ఎక్కువ ఆరోహణ రేటు ఎక్కువగా ఉంటుంది, ఇది ఇచ్చిన వేగం v వద్ద వేగంగా ఎక్కగలదు, కానీ w/s ఎక్కడ దాగి ఉంది, ఎందుకంటే మీరు t/w చూసినప్పుడల్లా w/s ఎక్కడ ఉందో చూడండి అని నేను మీకు చెప్పాను.', 'కాబట్టి, ఇప్పుడు నేను ఇక్కడ చూస్తున్నాను క్లైంబ్ రేటు t బై w ఇన్టు v మైనస్ q ఇన్ఫినిటీ డైరెక్ట్ ప్రెజర్ ఇన్టు s ఇన్టు c d బై w ఇన్టు v కి సమానం. కాబట్టి, వెంటనే నేను v మైనస్ q ఇన్ఫినిటీ c d బై w బై s కు సమానమైన క్లైంబ్ రేటును చూడగలిగాను.', 'ఇది ఇప్పుడు మీరు w by s యొక్క ప్రభావం ఏమిటో చూడాలనుకుంటే, w by s పెద్దది అయితే మీరు పొందుతున్న సందేశం ఏమిటి అంటే, w by s పెద్దది అంటే రెక్క యొక్క ఏ ప్రాంతం తక్కువ వైశాల్యం తక్కువగా ఉంటుంది, అందుకే ఇచ్చిన w కోసం w by s పెద్దది. ఒకవేళ w బై s పెద్దది అయితే, ఈ పదం తక్కువగా ఉంటుంది.', 'కాబట్టి, మీ క్లైంబ్ రేటు మెరుగుపడుతుంది, w బై s చిన్నది అయితే', 'పెద్ద రెక్క ఈ పదం మరింత ప్రతికూలంగా మారుతుంది మరియు క్లైంబ్ రేటు తగ్గుతుంది. మీరు ఇప్పుడు దిద్దుబాటును చూస్తారు. ఒక డిజైనర్ దీనిని చూస్తాడు, ఒక డిజైనర్', 'తన సంశ్లేషణ కోసం అర్ధవంతమైన సమాచారాన్ని సేకరించగలగాలి. ఇది కేవలం సమీకరణాలపై ఆధారపడి ఉండకూడదు, ఆపై ప్రోగ్రామ్ కోడ్', 'రాయడం మరియు సంఖ్యా పద్ధతుల కోసం వెతకడం మీరు డిజైనర్ కాకూడదు.', 'ఇక్కడ మరియు అక్కడ కనీస అవకతవకలతో మీరు గరిష్ట సమాచారాన్ని పొందాలి, అంటే ఈ వ్యక్తికి అంతర్ దృష్టి ఉందని మీరు చెబుతారు,', 'ఈ వ్యక్తికి ఆ సంఘర్షణలన్నింటినీ నిర్వహించడానికి ఆ స్మార్ట్ నెస్ ఉంది ఎందుకంటే అతను కనీస ప్రయత్నంతో అర్థం చేసుకుంటాడు అవును ఇది జరగబోతోంది.', 'కథ ఇక్కడితో ముగియదు. నేను మీకు చెప్పినట్లుగా ఏరోడైనమిక్ సామర్థ్యం ఎక్కడ పాత్ర పోషిస్తుందో మీరు', 'చూడాలనుకుంటే, w ద్వారా s ఎల్లప్పుడూ ఈ ఏరోడైనమిక్ సామర్థ్యం ఎక్కడ', 'ఉందో మూడవ స్నేహితుడిని తనిఖీ చేయండి ఎందుకంటే ఇది ఒక ఏరోడైనమిక్ వాహనం.', 'కాబట్టి, ఒక స్థానం నుండి మరొక స్థానానికి ఎగురుతున్న మన మిషన్ను చేతితో పట్టుకుని ఏరోడైనమిక్ సామర్థ్యం ఉండాలి.', 'మనం దానిని మారువేషంలో దాచిపెట్టినప్పటికీ చూడటానికి ప్రయత్నించాలి, దాన్ని పొందడానికి ప్రయత్నించండి, మీరు మరింత సమాచారం పొందవచ్చు.', 'నేను ఈ వ్యక్తీకరణను చూస్తే, ఒక డిజైనర్ గరిష్ట సమాచారాన్ని సరిగ్గా పొందడానికి ఎలా ప్రయత్నించాలి అనే అనుభూతిని మీకు ఇవ్వడానికి నేను ఒక వ్యాయామం చేస్తున్నాను.', 'q అనంతం s c d v/w మరియు ఈ వ్యక్తీకరణ గురించి నేను ఇక్కడ మాట్లాడుతున్నాను ఎందుకంటే ఇక్కడ t/w x v ఉంది మరియు ఇక్కడ c d ఉంది. కాబట్టి, నేను మొదట ఆ పదంపై దాడి చేస్తున్నాను మరియు అధిరోహణ సమయంలో నేను', 'బరువుకు సమానమైన లిఫ్ట్ అయిన రో v స్క్వేర్ s ద్వారా 2 w', 'కి సమానం అని అనుకుంటున్నాను, కానీ లిఫ్ట్ బరువుకు సమానం కాదని మీరు అర్థం చేసుకున్నారు.', 'కాబట్టి, లిఫ్ట్ వాస్తవానికి w cos గామాకు సమానం, నేను గామా చిన్న లేదా చిన్న అధిరోహణను ఊహిస్తున్నాను. కాబట్టి, నేను cl అని వ్రాసే స్వేచ్ఛను తీసుకుంటున్నాను,', 'ఇది సరైనది, ఇది లిఫ్ట్ మరియు ఇది బరువు. కాబట్టి, ఇది w cos గామా.', 'కాబట్టి, అది రెక్టిలీనియర్ పాత్ స్థిరమైన వేగాన్ని ఎగురుతుంటే.', 'కాబట్టి, బరువును సమతుల్యం చేయడానికి లిఫ్ట్ తగినంతగా ఉండాలి మరియు ఈ లిఫ్ట్ బరువు కంటే తక్కువగా ఉంటుంది.', 'కాబట్టి, ఇది బరువు మరియు ఈ లిఫ్ట్ క్రూయిజ్ ఉన్న ప్రదేశంతో పోలిస్తే దాని బరువు కంటే తక్కువగా ఉంటుంది.', 'కాబట్టి, క్లైంబింగ్ లో ప్రేరేపిత డ్రాగ్ కూడా మీకు తెలిసిన ఈ విషయాలన్నీ తక్కువ అని మేము చెబుతాము.', 'కాబట్టి, నేను ఈ వ్యక్తీకరణను ఉపయోగిస్తే, నేను v = 2 w by s', 'rho c l అని వ్రాయగలను మరియు ఆ v ని నేను ఇక్కడ ఉపయోగిస్తాను. కాబట్టి, q ఇన్ఫినిటీ ఇన్ టు s c d ఇన్ టు 2 w బై s', 'rho c l మరియు v i ఉపయోగించుకోండి rho c l బై w మరియు వెంటనే', 'మీరు c l మరియు c d ఆ వ్యక్తీకరణ నుండి కనిపించడం చూడటం ప్రారంభిస్తారు c l కనిపించలేదు.', 'కాబట్టి, మీరు ఆ ఫీల్డ్ లో c l/c d సంబంధాన్ని పొందలేరు.', 'కాబట్టి, మీరు ఈ సంఖ్యను ఇక్కడ ఉంచడం ప్రారంభించవచ్చు, మీరు q ఇన్ఫినిటీ కోసం కూడా ఉంచవచ్చు, మీరు సగం rho v ఇన్ఫినిటీని మళ్లీ', '2 w బై s బై rho c l మరియు తరువాత s ఇంటు c d మరియు ఈ పదం ఇక్కడ వ్రాయవచ్చు. అదే నేను q ఇన్ఫినిటీ కోసం చేస్తున్నాను, నేను సగం రో', 'v ఇన్ఫినిటీని v లోకి పెడుతున్నాను, నేను కూడా చేయగలిగినట్లుగా వ్రాస్తున్నాను,', 'నేను q ఇన్ఫినిటీని సగం రో v ఇన్ఫినిటీ స్క్వేర్ గా వ్రాయగలను.', 'కాబట్టి, నేను దీన్ని విడుదల చేస్తాను, నేను ఇలా చూడగలను మరొక Cl పదం ఇక్కడ వస్తుంది. కాబట్టి, ఇక్కడ నుండి మీరు c l', 'బై c d కాంబినేషన్స్ ను ఎంచుకోవాలి.', 'మీరు చాలా ఆసక్తికరమైన ఏదో పొందుటకు ఆశ్చర్యం ఉండకూడదు. కాబట్టి, ఇది హేతుబద్ధంగా విస్తరించే అలవాటు అయితే మరియు c l బై c d', 'లేదా c l 3 బై 2 c d ఎక్కడ ఉందో చూడటానికి ప్రయత్నించండి.', 'నేను ఈ వ్యాయామాన్ని మీకు వదిలివేస్తాను మరియు ఈ వ్యక్తీకరణ నుండి నేను c l by c d లేదా c', 'l 3 by 2 by c d పై ఏదైనా వ్యాఖ్యానించవచ్చా, కొన్ని ఏరోడైనమిక్ నిష్పత్తులు డిజైనర్ ను నిర్వహించడానికి ప్రేరేపిస్తాయి. కాబట్టి, ఎక్కే', 'రేటు గరిష్టంగా ఉంటుంది. కాబట్టి, మీరు ఏ సందర్భంలోనైనా నేను తదుపరి తరగతిలో చేస్తానని నేను ఆశిస్తున్నాను, కాని నేను తదుపరి', 'తరగతికి వచ్చే ముందు మీరు కొంత హోంవర్క్ చేసి, అక్కడ కొంత వ్యక్తీకరణ పొందడానికి నేను ఎల్లప్పుడూ ఇష్టపడతాను. మీకు చాలా థ్యాంక్స్.', 'ధన్యవాదాలు తెలిపారు.']
2024-02-12 09:38:04,782 - ERROR - synthesize - Line 279 - Exception occurred: list index out of range.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/indic_unified_parser/helpers.py, Line 256 Error IndexError : list index out of range
2024-02-13 10:55:25,347 - ERROR - synthesize - Line 279 - Exception occurred: max() arg is an empty sequence.|| TRACEBACK : Error in File /speech/abdullah/tts_api/text_preprocess_for_inference.py, Line 301 Error ValueError : max() arg is an empty sequence
2024-02-13 16:05:50,053 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.46 GiB (GPU 0; 23.69 GiB total capacity; 10.46 GiB already allocated; 2.27 GiB free; 10.52 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.46 GiB (GPU 0; 23.69 GiB total capacity; 10.46 GiB already allocated; 2.27 GiB free; 10.52 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-13 20:35:24,292 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.64 GiB already allocated; 1.95 GiB free; 10.85 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.64 GiB already allocated; 1.95 GiB free; 10.85 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-13 20:45:27,574 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.62 GiB already allocated; 2.09 GiB free; 10.71 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.62 GiB already allocated; 2.09 GiB free; 10.71 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-13 20:46:21,731 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.62 GiB already allocated; 2.09 GiB free; 10.71 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.62 GiB already allocated; 2.09 GiB free; 10.71 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-13 20:52:35,061 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.30 GiB (GPU 0; 23.69 GiB total capacity; 666.65 MiB already allocated; 1.70 GiB free; 744.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.30 GiB (GPU 0; 23.69 GiB total capacity; 666.65 MiB already allocated; 1.70 GiB free; 744.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 10:44:50,556 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 8.36 GiB (GPU 0; 23.69 GiB total capacity; 8.87 GiB already allocated; 3.44 GiB free; 8.96 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 8.36 GiB (GPU 0; 23.69 GiB total capacity; 8.87 GiB already allocated; 3.44 GiB free; 8.96 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 10:48:08,510 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 4.18 GiB (GPU 0; 23.69 GiB total capacity; 8.80 GiB already allocated; 3.50 GiB free; 8.90 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 81 Error RuntimeError : CUDA out of memory. Tried to allocate 4.18 GiB (GPU 0; 23.69 GiB total capacity; 8.80 GiB already allocated; 3.50 GiB free; 8.90 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 10:52:47,326 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 8.65 GiB (GPU 0; 23.69 GiB total capacity; 9.17 GiB already allocated; 3.15 GiB free; 9.26 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 8.65 GiB (GPU 0; 23.69 GiB total capacity; 9.17 GiB already allocated; 3.15 GiB free; 9.26 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 10:56:13,663 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 4.94 GiB (GPU 0; 23.69 GiB total capacity; 10.34 GiB already allocated; 1.98 GiB free; 10.43 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 81 Error RuntimeError : CUDA out of memory. Tried to allocate 4.94 GiB (GPU 0; 23.69 GiB total capacity; 10.34 GiB already allocated; 1.98 GiB free; 10.43 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 11:06:18,282 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 7.62 GiB (GPU 0; 23.69 GiB total capacity; 8.12 GiB already allocated; 4.19 GiB free; 8.22 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 7.62 GiB (GPU 0; 23.69 GiB total capacity; 8.12 GiB already allocated; 4.19 GiB free; 8.22 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 11:09:28,924 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 3.46 GiB (GPU 0; 23.69 GiB total capacity; 10.82 GiB already allocated; 1.50 GiB free; 10.91 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 82 Error RuntimeError : CUDA out of memory. Tried to allocate 3.46 GiB (GPU 0; 23.69 GiB total capacity; 10.82 GiB already allocated; 1.50 GiB free; 10.91 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 14:36:56,499 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.55 GiB already allocated; 1.77 GiB free; 10.64 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.55 GiB already allocated; 1.77 GiB free; 10.64 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 15:07:59,981 - ERROR - synthesize - Line 278 - Exception occurred: CUDA out of memory. Tried to allocate 23.01 GiB (GPU 5; 23.69 GiB total capacity; 3.55 GiB already allocated; 14.58 GiB free; 3.63 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 23.01 GiB (GPU 5; 23.69 GiB total capacity; 3.55 GiB already allocated; 14.58 GiB free; 3.63 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 15:08:06,412 - ERROR - synthesize - Line 278 - Exception occurred: CUDA out of memory. Tried to allocate 23.01 GiB (GPU 5; 23.69 GiB total capacity; 3.55 GiB already allocated; 14.05 GiB free; 4.16 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 23.01 GiB (GPU 5; 23.69 GiB total capacity; 3.55 GiB already allocated; 14.05 GiB free; 4.16 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 15:08:32,495 - ERROR - synthesize - Line 278 - Exception occurred: CUDA out of memory. Tried to allocate 3.55 GiB (GPU 5; 23.69 GiB total capacity; 15.18 GiB already allocated; 2.36 GiB free; 15.85 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 3.55 GiB (GPU 5; 23.69 GiB total capacity; 15.18 GiB already allocated; 2.36 GiB free; 15.85 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 15:09:25,500 - ERROR - synthesize - Line 278 - Exception occurred: CUDA out of memory. Tried to allocate 23.01 GiB (GPU 5; 23.69 GiB total capacity; 13.80 GiB already allocated; 3.80 GiB free; 14.41 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 23.01 GiB (GPU 5; 23.69 GiB total capacity; 13.80 GiB already allocated; 3.80 GiB free; 14.41 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 15:09:50,121 - ERROR - synthesize - Line 278 - Exception occurred: CUDA out of memory. Tried to allocate 3.55 GiB (GPU 5; 23.69 GiB total capacity; 15.15 GiB already allocated; 2.49 GiB free; 15.72 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 3.55 GiB (GPU 5; 23.69 GiB total capacity; 15.15 GiB already allocated; 2.49 GiB free; 15.72 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-14 15:13:26,091 - ERROR - synthesize - Line 278 - Exception occurred: CUDA out of memory. Tried to allocate 12.53 GiB (GPU 5; 23.69 GiB total capacity; 13.86 GiB already allocated; 3.32 GiB free; 14.89 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 12.53 GiB (GPU 5; 23.69 GiB total capacity; 13.86 GiB already allocated; 3.32 GiB free; 14.89 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-15 18:59:20,005 - ERROR - synthesize - Line 279 - Exception occurred: list index out of range.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/indic_unified_parser/helpers.py, Line 256 Error IndexError : list index out of range
2024-02-16 22:20:27,618 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-02-16 22:20:27,618 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-02-16 22:20:27,618 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:20:33,861 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:20:33,889 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:21:14,329 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:21:16,129 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:21:22,368 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:21:22,397 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:21:28,477 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:21:30,274 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:21:36,465 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:21:36,494 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:21:59,761 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:22:01,532 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:22:07,791 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:22:07,820 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:23:10,507 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:23:12,308 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:23:18,733 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:23:18,759 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:24:26,476 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:24:28,247 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:24:34,668 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:24:34,703 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:24:37,755 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:24:39,599 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:24:46,374 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:24:46,408 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:25:29,878 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:25:31,771 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:25:37,974 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:25:38,004 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:26:07,337 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:26:09,131 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:26:15,369 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:26:15,403 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:26:16,432 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:26:18,240 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:26:24,536 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:26:24,568 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:26:48,846 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:26:50,660 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:26:56,885 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:26:56,919 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:28:02,638 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-16 22:28:04,477 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:28:10,748 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:28:10,781 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:28:18,886 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-16 22:28:20,712 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:28:27,085 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:28:27,116 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:28:42,778 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-02-16 22:28:42,778 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-02-16 22:28:42,779 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:28:49,008 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:28:49,037 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:29:53,747 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-16 22:29:55,596 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:30:01,925 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:30:01,952 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:30:31,275 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-16 22:30:33,033 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:30:39,324 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:30:39,351 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:31:01,607 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-16 22:31:03,396 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:31:09,710 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:31:09,741 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:32:33,901 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-02-16 22:32:33,901 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-02-16 22:32:33,902 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:32:40,105 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:32:40,131 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:32:58,261 - ERROR - synthesize - Line 279 - Exception occurred: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand..|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py, Line 133 Error BadRequest : 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.
2024-02-16 22:33:16,542 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-16 22:33:18,291 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:33:24,507 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:33:24,536 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:33:27,668 - ERROR - synthesize - Line 279 - Exception occurred: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand..|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py, Line 133 Error BadRequest : 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.
2024-02-16 22:34:05,993 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:34:07,797 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:34:14,000 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:34:14,028 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:34:34,257 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:34:36,042 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:34:41,070 - ERROR - synthesize - Line 279 - Exception occurred: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand..|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py, Line 133 Error BadRequest : 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.
2024-02-16 22:34:42,359 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:34:42,388 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:35:48,112 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/text_preprocess_for_inference.py', reloading
2024-02-16 22:35:49,926 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:35:56,847 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:35:56,897 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:36:20,242 - INFO - _log - Line 224 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://10.24.6.165:5002
2024-02-16 22:36:20,242 - INFO - _log - Line 224 - [33mPress CTRL+C to quit[0m
2024-02-16 22:36:20,243 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:36:26,514 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:36:26,540 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:37:00,926 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-16 22:37:02,720 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:37:09,008 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:37:09,036 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:38:01,613 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/dummy_call_copy.py', reloading
2024-02-16 22:38:03,423 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:38:09,677 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:38:09,706 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 22:39:34,620 - INFO - _log - Line 224 -  * Detected change in '/speech/abdullah/tts_api/api.py', reloading
2024-02-16 22:39:36,447 - INFO - _log - Line 224 -  * Restarting with stat
2024-02-16 22:39:42,639 - WARNING - _log - Line 224 -  * Debugger is active!
2024-02-16 22:39:42,668 - INFO - _log - Line 224 -  * Debugger PIN: 343-806-245
2024-02-16 23:33:38,800 - ERROR - synthesize - Line 279 - Exception occurred: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand..|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py, Line 133 Error BadRequest : 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.
2024-02-23 11:31:46,062 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: local variable 'firstLet' referenced before assignment. Input text: ['ഇന്ന് നാം സൾഫേറ്റ് ആക്രമണത്തെക്കുറിച്ചുള്ള ചർച്ച പുനരാരംഭിക്കും. ', 'കഴിഞ്ഞ ക്ലാസിൽ, സൾഫേറ്റുകൾ സിമന്റീഷ്യസ് സിസ്റ്റത്തിലേക്ക് എങ്ങനെ? കടക്കുന്നു, ', 'സിമന്റ് ഫാസുകൾ ജലാംശം വച്ച് ഉപരിതലത്തിൽ നിന്ന് വ്യത്യസ്ത തരം സംയുക്തങ്ങൾ രൂപപ്പെടുത്തുന്നു. ', 'അകത്തേക്കു പോകുക. ', 'എത്രിന് ഗൈറ്റ് രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുമോ എന്നതിനെക്കുറിച്ച് നമുക്ക് അല്പം സംസാരിക്കാം. ', 'തീർച്ചയായും, എത്രിന്ജിറ്റിന് വികസനത്തിന് സാധ്യതയുള്ള ഒരു ഘടനയുണ്ടെന്ന് നമുക്കറിയാം. ', 'ഈര് ന്നം കുടിച്ചുകൊണ്ട് പ്രധാനമായും ഈര് ന്നം വലിച്ചെടുക്കുന്നതിലൂടെയാണ് ഈര് ന്നം വലിച്ചെടുക്കുന്നത്. ', 'അത് തകര് ക്കാന് കാരണമാകുന്ന ഒരു പരിസ്ഥിതി, ശരിയാണ്. ', 'എന്നാൽ നേരിട്ടുള്ള തെളിവ് എന്താണെന്നും എത്രിന്ജിറ്റിന്. ', 'ബെറ്റിന് റെ സിസ്റ്റം വിപുലീകരിക്കാന് കാരണമാകുന്നു. ', 'പ്രഥമ എത്രിന്ജിറ്റ് പ്രക്രിയയുടെ ആദ്യഘട്ടത്തിൽ രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റാണ് എന്ന് നമുക്കറിയാം. ', 'സിമന്റ് ഹൈഡ്രേഷനിൽ, സിമന്റ് അല് മിനേറ്റുകൾ പോലുള്ള ഘട്ടങ്ങൾ. ', 'സിമന്റിന് ചേര് ന്ന സൾഫേറ്റ്, ആദ്യകാല എട്രിംഗിറ്റും ഈ ആദ്യകാല എട്രിംഗിറ്റും. ', 'പിന്നീട് മോണോ സൾഫേറ്റായി മാറുന്നു, കാരണം സിസ്റ്റത്തിൽ അമിതമായ അല് മിനേറ്റ് ഉണ്ട്. ', 'ഇപ്പോൾ പ്രാഥമിക എത്രിന്ജിറ്റ് രൂപീകരണത്തിന്റെ തെളിവുകളും ഉണ്ട്. അത് സിമന്റുകളിൽ സംഭവിക്കുന്നു. ', 'സൾഫേറ്റ് കൂടുതലുള്ള സ്ഥലത്ത്. ', 'അതായത്, നീ വളരെ ദീർഘകാലം എത്രിന്ജിറ്റ് നിക്ഷേപിക്കുന്നത് തുടരുന്നു. ', 'ശരി, ശരി. ', 'ഇത് സംഭവിക്കുന്നത് സൾഫാറ്റിന്റെ ആന്തരിക സ്രോതസ്സുകളാണ്. ', 'ബാഹ്യ എത്രിന്ജിറ്റ് എന്നത് ബാഹ്യ പരിസ്ഥിതികളിൽ നിന്ന് വരുന്ന സൾഫേറ്റുകൾ ഉണ്ടാകുമ്പോൾ. ', 'സൾഫാറ്റിന്റെ അകലം പുറത്ത് നിന്ന്. ', 'ഇതിനു പുറമെ, വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണം നാം വിളിക്കാം. ', 'ആന്തരികമായി അടിച്ചമർത്തപ്പെട്ട എത്രിന്ജിറ്റിന്റെ രൂപീകരണം, അത് പിന്നീട് വളരുന്നു. ', 'ഇതിനർത്ഥം ചില കാരണങ്ങളാൽ ആദ്യഘട്ടങ്ങളിൽ എട്രിംഗിറ്റ് രൂപപ്പെടുന്നില്ലെന്നും. ', 'ചില ഘടകങ്ങളുടെ കൂട്ടായ്മ അതിനെ കഠിനമായ അവസ്ഥയില് രൂപീകരിക്കാൻ കാരണമായി. ', 'വ്യക്തമായും, കഠിനമായ ബെറ്റണിന്റെ ഉള്ളിൽ ഒരു വിപുലമായ വസ്തു രൂപം കൊള്ളുമ്പോൾ. ', 'നിങ്ങൾക്കു് ഇതിലൂടെ വലിയ നാശനഷ്ടങ്ങൾ ഉണ്ടാകുന്നു. ഇത് ഡിഎഫ് അല്ലെങ്കിൽ വൈകിയ എട്രിംഗിറ്റ് എന്നും അറിയപ്പെടുന്നു. ', 'രൂപീകരണം, ശരി. ', 'ഇത് വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണത്തിന് വേണ്ടി ഉപയോഗിക്കുന്ന പൊതുവായ ഒരു പദാവലി ആണ്. ', 'പൊതുവേ പറഞ്ഞാൽ, സൾഫേറ്റ് ആക്രമണ പ്രക്രിയ ഏതൊരു വൈകി എത്രിന്ജിറ്റ് രൂപീകരണം നയിക്കുന്നു. ', 'കഠിനമായ ഘട്ടങ്ങള്. ', 'അതുകൊണ്ട് എത്രിന്ജിറ്റിന്റെ രൂപീകരണം ഒരു സെക്കൻഡറി എത്രിന്ജിറ്റിന്റെ രൂപീകരണം ആണ്. ', 'അതായത്, സാധാരണമായ ഘടകങ്ങളാൽ രൂപപ്പെടുന്ന പ്രാഥമിക എത്രിന്ജിറ്റിൽ നിന്നും നാം അതിനെ വേർതിരിക്കുന്നു. ', 'സിമന്റിന്. ജലാംശം, ശരി. ', 'ഇപ്പോൾ നിങ്ങൾ നോക്കിയാൽ ഉത്പാദനം കാരണം രൂപം കൊണ്ട ക്രിസ്റ്റലിൻ വസ്തുക്കളുടെ തരം. ', 'എത്രിന്ജിറ്റിന്റെ എത്രിന്ജിറ്റിന് നഖം രൂപം കിട്ടുന്നു. ', 'അങ്ങനെ എത്രിന്ജിറ്റ് നീണ്ട അളവിലുള്ള സൂചികളെ പോലെ രൂപപ്പെടുന്നു. ', 'എത്രിന്ജിറ്റിന്റെ നീളവും കനം അനുപാതവും ചുറ്റുമുള്ള പരിസ്ഥിതിയുടെ പിഎച്ചിനെ ആശ്രയിച്ചിരിക്കുന്നു. ', 'ഇപ്പോൾ കാണുന്നത് വളരെ ഉയർന്ന പിഎച്ച് ഉള്ളപ്പോൾ നമ്മൾ വളരെ. ', 'എത്രിന്ജിറ്റിന്റെ നീണ്ട സൂചികൾ. ', 'നമ്മൾ കുറച്ചുകൂടി ചെറിയ എത്രിന്ജിറ്റ് ക്രിസ്റ്റലുകൾ രൂപീകരിക്കുന്നു, ശരി. ', 'പക്ഷെ 12 നും 10 നും ഇടയിൽ നമ്മൾ എത്രിന്ജിറ്റ് സൂചികൾ രൂപീകരിക്കുന്നു. ', 'വളരെ ഉയർന്ന നീളമുള്ളവ. ', 'സിമന്റ് ഹൈഡ്രേറ്റേഷന്റെ ആദ്യഘട്ടങ്ങളിൽ നിങ്ങൾ. ', 'ഈ മൈക്രോക്രിസ്റ്റാലിൻ എത്രിംഗൈറ്റ് ദൈർഘ്യം വളരെ ചെറുതാണ്, ', 'വ്യാസം അല്ലെങ്കിൽ ദൈർഘ്യം കനം അനുപാതം വളരെ ചെറുതാണ്. ', 'എന്നാൽ എത്രിന്ജിറ്റ് വികസിക്കുമ്പോൾ, നിങ്ങൾക്ക് ഒരു സാഹചര്യത്തെക്കുറിച്ച് ചിന്തിക്കാം. ', 'സൾഫേറ്റ് ആക്രമണം, ഈർപ്പം ആഗിരണം ചെയ്യപ്പെടുന്ന ഒരു എത്രിന്ജിറ്റ് വികാസം, എത്രിന്ജിറ്റ് യഥാർത്ഥത്തിൽ. ', 'ഉയർന്ന നീളത്തിൽ കാണിക്കുന്ന ക്രിസ്റ്റൽ ശീലം കാണിച്ചു തുടങ്ങുക, ശരി. ', 'അതുകൊണ്ട് ഉയർന്ന പിഎച്ച് അളവിലുള്ള മൈക്രോക്രിസ്റ്റാലിൻ എത്രിംഗൈറ്റ് പുതിയ ബെറ്റിനിൽ കാണപ്പെടുന്നു. ', 'ആദ്യകാല ജലാംശം പ്രതീക്ഷിക്കുക, ശരിയാണ്. ', 'ഇപ്പോൾ ഗവേഷകരുടെ അഭിപ്രായത്തില്, ഇത് നന്നായി രേഖപ്പെടുത്തിയിട്ടുണ്ട്. ', 'ജല ആഗിരണം ചെയ്യാനുള്ള ശേഷിയുള്ള എത്രിംഗൈറ്റ് ഉയർന്ന വികാസത്തിലേക്ക് നയിക്കുന്നു, ', 'pH അവസ്ഥ വളരെ ഉയർന്നതാണെങ്കില് സംഭവിക്കും. ', 'അതിനാൽ, നിങ്ങൾ സൾഫേറ്റ് എക്സ്പോഷറുകളിലേക്ക് വന്നാൽ, pH കുറയുന്നു, ഉദാഹരണത്തിന്, നിങ്ങൾ. ', 'പരിസ്ഥിതിയിലെ പിഎച്ച് കുറവാണെങ്കിൽ, അത് എത്രിന്ജിറ്റിന്. ', 'സിസ്റ്റത്തിൽ യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുമ്പോൾ ഇത് വളരെ ആഗിരണം ചെയ്യാത്തതായിരിക്കാം. ', 'വെള്ളം ആഗിരണം ചെയ്യുകയോ കുടിക്കുകയോ ചെയ്യുന്നില്ല, അത് വളരെ ഉയർന്ന വികാസങ്ങളിലേക്ക് നയിക്കുന്നില്ല. ', 'അതിനാൽ എത്രിംഗിറ്റിന്റെ രൂപീകരണം വികസനത്തിന് കാരണമാകുന്നത് പ്രധാനമായും. ', 'പുറമേയുള്ള പിഎച്ച് ഉല് പാദവും വളരെ ഉയർന്നതാണ്. ', 'ഇത് വലിയ അളവിൽ നാം ശരിക്കും വിപുലീകരണങ്ങള് സംഭവിക്കുന്നത് കാണുന്നില്ല എന്തുകൊണ്ട് വിശദീകരിക്കുന്നു. ', 'വയല് അടിസ്ഥാനമാക്കിയുള്ള സാമ്പിളുകള്. ', 'ലാബിലെ സാമ്പിളുകളിൽ നാം വളരെ ഉയർന്ന അളവിലുള്ള വികാസത്തെ കാണുന്നു. ', 'ആക്രമണത്തിന്റെ തുടർച്ചയായ പുനരുജ്ജീവനത്തോടെയുള്ള പ്രകടനം. ', 'കാരണം, നിങ്ങള് ക്ക് നിലത്തുള്ള വെള്ളം ഉണ്ട്, അത് ആക്രമണകാരിയെ നിരന്തരം ചാർജ് ചെയ്യുന്നു. ', 'പരിഹാരം. ', 'അതിനുപുറമെ, നമുക്ക് മറ്റു ഇയോണിക് ജീവികളുടെ സാന്നിധ്യം ഉണ്ട്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിന്റെ പിഎച്ച്. ', 'അത് സംഭവിക്കുമ്പോൾ, യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എട്രിംഗിറ്റ്. ', 'സാധാരണ മുങ്ങുന്ന അവസ്ഥയില് സിസ്റ്റത്തിനുള്ളില് രൂപപ്പെടുന്നതു പോലെ പ്രതികരിക്കുന്നതോ അല്ലെങ്കില് വിശാലമായതോ ആയ. ', 'ഒരു കപ്പ് എടുത്തു സൾഫേറ്റ് പരിഹാരം ഉള്ളിൽ വച്ച് ഒരു ബെറ്റൺ. ', 'ഉള്ളില് ഒരു സാമ്പിളാണോ? ', 'ബെറ്റണിന് വളരെ ഉയർന്ന പിഎച്ച് ഉണ്ട്, 13. ', 'അപ്പോൾ അത് pH 7 അല്ലെങ്കിൽ 8 ഉള്ള സൾഫേറ്റ് പരിഹാരത്തിനുള്ളിൽ വെക്കുമ്പോൾ എന്ത് സംഭവിക്കും? ', 'നിങ്ങൾക്ക് ബെറ്റണിന്റെ പരുത്തി പുറം പരിസ്ഥിതിയിലേക്ക് ഒഴുകും. ', 'ഓക്കേ, പുറത്തെ പരിഹാരത്തിന്റെ പി. എച്ച് വളരെ ഉയർന്ന തലത്തിലേക്ക് സ്ഥിരത കൈവരിക്കുകയാണ്. ', 'ചില സന്ദർഭങ്ങളിൽ 12 ന് മുകളിലായി നാം എത്തുന്നു. ', 'ഈ സാഹചര്യത്തിൽ, രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റ് വിപുലമായ സ്വഭാവമുള്ളതാണ്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിലെ പി. എച്ച് ഉയർന്നതാണെങ്കിൽ, എത്രിന്ജിറ്റ് വ്യാപകമാണ്, അത്. ', 'ലാബോറട്ടറി പഠനങ്ങളിൽ സൾഫേറ്റ് ആക്രമണവുമായി സാധാരണയായി ബന്ധപ്പെട്ട വിപുലീകരണങ്ങളിലേക്ക്. ', 'എന്നാൽ, ഈ മേഖലയില് നാം ഒരേ തരത്തിലുള്ള വികാസങ്ങള് കാണുന്നില്ല. ', 'എത്രിംഗിറ്റിന്റെ സ്ഥിരത ഒരു പ്രത്യേക സ്ഥലത്ത് നിലവിലുള്ള പിഎച്ച് തലങ്ങളിൽ ആശ്രയിച്ചിരിക്കുന്നു. ', 'പരിസ്ഥിതി. ', 'ഉദാഹരണത്തിന്, pH വളരെ ഉയർന്നതോ 9 മുതൽ 13 വരെയുള്ള pH പരിധിയിലുള്ളതോ ആയ. ', 'ഇത് സാധാരണയായി ഒരു എത്രിന്ജിറ്റ് പരിഹാരത്തിന്റെ സ്ഥിരതയുടെ പരിധി ആണ്. ', 'അതുകൊണ്ട്, വിവിധ ഗവേഷണങ്ങളിലൂടെ വിവിധ പിഎച്ച് ശ്രേണികൾ ലഭ്യമാക്കുന്നു. ', 'സ്ഥിരതയുള്ളതാണ്. ', 'ചുറ്റുപാടിലെ അവസ്ഥ അസിഡ് ആയാൽ, ആ പരിസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ഉണ്ടാകില്ല. ', 'വളരെ സ്ഥിരതയുള്ളതാണ്. ', 'അതിനാൽ, എട്രിംഗൈറ്റ് പകരമായി പ്രവർത്തിക്കുന്നുണ്ടോ എന്ന് പരിശോധിക്കാൻ, നിങ്ങൾ ചുറ്റുമുള്ള നിലവിലുള്ള അവസ്ഥകൾ പരിശോധിക്കണം. ', 'സ്ഥിരതയുള്ളവരാകാൻ. ', 'ഉദാഹരണത്തിന്, ആസിഡ് പരിതസ്ഥിതിയിൽ, എത്രിന്ജിറ്റിന്. ', 'ഗിപ്സും, അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡും, പ്രത്യേകിച്ച് കാർബണേഷൻ സംഭവിക്കുന്നതോടെ, അത്. ', 'അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡ്, ജിപ്സം എന്നിവയുമായി ചേർന്ന് കല് സി യം കാർബണേറ്റ് ഘടകങ്ങൾ രൂപം കൊള്ളുന്നു. ', 'അസിഡ് പരിതസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ജിപ്സും ആല്യുമിനിയം ഹൈഡ്രോക്സൈഡും ആയി മാറുന്നു. ', 'വീണ്ടും, ഈ ഫീൽഡിലെ തെളിവുകൾ നോക്കിയാൽ, പൂർണ്ണമായും നിലനിൽക്കുന്ന ഘടനകൾ. ', 'ഉണങ്ങിയ കഠിനമായ ബെറ്റണിന് റെയില് എത്രിന്ജിറ്റ് കണ്ടുപിടിക്കാന് പാടില്ല. ', 'അതിനാൽ നിങ്ങൾക്ക് ഈർപ്പം ഇല്ലെങ്കിൽ, നിങ്ങൾ ശരിക്കും എട്രിംഗിറ്റിന്റെ രൂപീകരണം കാണുന്നില്ല. ', 'പിന്നീട്, നിങ്ങൾ മറ്റെവിടെയെങ്കിലും ഉണങ്ങുകയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, എത്രിന്ജിറ്റ്. ', 'ഇത് കാണാവുന്നതാണ്, പക്ഷേ ഉണക്കിയതുകൊണ്ട്, നിങ്ങൾക്ക് ഒരു അവസ്ഥ ഉണ്ടാകില്ല. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുന്നു. ', 'ഇപ്പോൾ ഞാൻ നിങ്ങളെ കാണിച്ചു തരാം അടുത്തിടെ നടന്ന ചില ലാബ് പഠനങ്ങൾ. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണവും വികാസവും. ', 'ലാബിൽ പഠിക്കുന്നതില് സാധാരണയായി നമ്മൾ പഠിക്കുന്നത് മോർട്ടാർ പ്രിസ്മാറ്റിക് സാമ്പിളുകളാണ്. ', '25 x 25 x 285 മില്ലിമീറ്റർ ഈ സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ സൂക്ഷിക്കുന്നു. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ മുങ്ങുകയും അവയിൽ നിന്ന് സാമ്പിളുകൾ ഇടയ്ക്കിടെ നീക്കം ചെയ്യുകയും ചെയ്യുന്നു. ', 'നീളം ഇവിടെ കാണിച്ചിരിക്കുന്ന നീള താരതമ്യ ഉപയോഗിച്ച് അളക്കുന്നു. ', 'അതായത്, 3 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് 50 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് സൂക്ഷിച്ചിരിക്കുന്ന മർട്ടാർ ഉപയോഗിച്ച് തയ്യാറാക്കിയ സാന്നിധ്യം. ', 'പരിഹാരങ്ങള്. ', 'ഈ കേസിൽ അത് സോഡിയം സൾഫേറ്റ് ആയിരുന്നു. ', 'അതുകൊണ്ട് നമ്മൾ ചർച്ച ചെയ്ത പോലെ കാറ്റോൺ പ്രഭാവത്തിൽ നിന്നും ഉണ്ടാകുന്ന ഏതെങ്കിലും ദ്വിതീയ സംവിധാനങ്ങൾ ഉണ്ടാകുമെന്ന് നിങ്ങൾ പ്രതീക്ഷിക്കുന്നില്ല. ', 'മഗ്നീഷ്യം ഉപയോഗിച്ച്, നിങ്ങൾക്ക് കാറ്റീന്റെ പ്രഭാവം ഉണ്ട്, അത് വളരെ ഗുരുതരമാണ്. ', 'പരിഗണനയിലാക്കണം. ', 'അതുകൊണ്ട് ഈ പ്രോജക്റ്റിൽ നാം ചെയ്തതെന്തെന്നാൽ, ദൈർഘ്യ മാറ്റം നിരന്തരം നിരീക്ഷിക്കുകയായിരുന്നു. ', 'കൂടാതെ എട്രിംഗിറ്റിന്റെ അളവ് ക്വാണ്ടിഫിക്കേഷൻ ഞങ്ങൾ എക്സ്-റേ ഡിഫ്രാക്ഷൻ വിശകലനത്തിലൂടെ ചെയ്തു. ', 'ഇവിടെ കാണിക്കുന്നത് വ്യത്യസ്തമായ വിപുലീകരണത്തിന്റെ വ്യാപ്തിയാണ്. ', '32 ആഴ്ചയിലേറെയായി എക്സ്പോഷർ ചെയ്ത മോർട്ടാർ സാമ്പിളുകൾ ഇവയാണ് 2 മിശ്രിതങ്ങൾ, ഒന്ന്. സാധാരണ. ', 'പോർട്ട്ലാന്റ് സിമന്റ്, M2 എന്നിവ പോർട്ട്ലാന്റ് പൊസോളൻ സിമന്റ് ആണ്. ', 'അതിൽ കാർബൺ പൊള്ളലേറ്റിട്ടുണ്ട്. ', '32 ആഴ്ച കഴിഞ്ഞപ്പോൾ മാത്രം കാര്യമായ വികസനം കാണിച്ച സാമ്പിളുകൾ. ', 'ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന ഒപിസി കോൺക്രീറ്റ് അല്ലെങ്കിൽ ഒപിസി മോർട്ടാർ സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'ലിറ്ററിന് 3 ഗ്രാം ലൂഷനിൽ നിങ്ങൾ വളരെ അധികം വികസനം ഉണ്ടായില്ലെങ്കിലും. ', 'സംഭരണത്തിന്റെ അവസാന ഭാഗത്തേക്കുള്ള പ്രവണത വർധിച്ചു. ', 'ഡൈനാമിക് മോഡ്യൂളിലെ മാറ്റം നോക്കുമ്പോൾ, ഇവിടെ ഡൈനാമിക് മോഡ്യൂൾ അളന്നു. ', 'വസ്തുവിന്റെ റെസോണന്റ് ആവൃത്തി പരിശോധിച്ചാണ് ഇത്. ', 'അതുകൊണ്ട് നാം പ്രിസ്മാറ്റിക് സാമ്പിളുകൾ എടുത്തു റെസോണന്റ് ഫ്രീക്വൻസി നോക്കി. ', 'ബെറ്റണിന്റെ വഷളാകുന്നതോടെ റെസോണന്റ് ഫ്രീക്വൻസി. ', 'അതുപോലെതന്നെ കുറയും. ', 'ഇത് ഒരു നാശനഷ്ടമല്ലാത്ത പരീക്ഷണത്തിലൂടെ അപ്രതീക്ഷിതമായി അളക്കുന്ന ഡൈനാമിക് മോഡുലാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് കാണാനാകുന്നതാണു ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന മോർട്ടാർ സാമ്പിൾ. ', 'സൾഫേറ്റ് പരിഹാരം, സാധാരണ പോർട്ട്ലാന്റ് സിമന്റ് അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടാർ. ', '32 ആഴ്ചയിലെ എക്സ്പോഷർ സമയത്ത് മൊഡ്യൂൾ ഗണ്യമായി കുറഞ്ഞു, മറ്റ് എല്ലാ. സാമ്പിളുകളും. ', 'ഒരു കുറവുമില്ലാതെ വളരെ സ്ഥിരമായ ഒരു ഡൈനാമിക് മോഡ്യൂളും കാണപ്പെടുന്നു. ', 'ഇനി നമുക്ക് അളവുകൾ നോക്കാം. ', 'ഇത് വീണ്ടും ഒരു കണക്കായിട്ടല്ല, ഒരു പട്ടികയായിട്ടാണ് അവതരിപ്പിച്ചിരിക്കുന്നത്. ', 'ഇപ്പോൾ നിങ്ങൾക്ക് കാണാൻ കഴിയുമെങ്കിൽ, ഒപിസി 50 ഗ്രാം ലിറ്ററിന് വിപുലീകരണം 3 ശതമാനത്തോളം. ഉയർന്നതാണ്. ', 'അതൊരു ഉയർന്ന വികസന നിലയാണ്. ', 'ഈ എ എസ് ടി എം ടെസ്റ്റ് ചെയ്യുമ്പോൾ, ഇത് എ എസ് ടി എം സി 1012 പ്രകാരം ആണ്, ഈ ടെസ്റ്റ് രീതി ചെയ്യുമ്പോൾ. ', 'സാധാരണ മോർട്ടറുകളുടെ കാര്യത്തിൽ, നിങ്ങളുടെ വികസനം 0.1% കവിയുന്നുവെങ്കിൽ, 6 മാസത്തെ ഇടവേളയിൽ. ', 'ആ മോർട്ടാർ അല്ലെങ്കിൽ ആ പ്രത്യേക ബോണ്ടറും മോർട്ടാർ സംയോജനവും പ്രതിരോധം ഇല്ലാത്തവയാണെന്ന് നിങ്ങൾ പറയും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങള് ക്ക് വേണ്ടി. ', 'അത് ഒരു സ്വമേധയാ നടപടിക്രമം മാത്രമാണ്. ', 'ഇത് യഥാർത്ഥത്തിൽ ബെറ്റണിന്റെയും സൾഫാറ്റിന്റെയും സ്വഭാവം വെളിപ്പെടുത്തുന്നില്ല. ', 'സമ്പന്നമായ പരിസ്ഥിതി, എന്നാൽ ഈ തുടർച്ചയായ മുങ്ങൽ ടെസ്റ്റ് നിങ്ങളുടെ സാമ്പിൾ ഒരു വികസനം അവസാനിക്കുന്നു എങ്കിൽ. ', 'ആറുമാസത്തിനുള്ളിൽ 0.1% ൽ കൂടുതൽ, അത് സിമന്റ് പ്രതിരോധം ഇല്ല എന്ന് കരുതപ്പെടുന്നു. ', 'സൾഫേറ്റ് ആക്രമണം. ', 'എന്നിരുന്നാലും, ഈ കേസിൽ വെറും 32 ആഴ്ചയിലേയ്ക്ക് 3% വരെ വ്യാപനം രേഖപ്പെടുത്തിയിരുന്നു. ', 'അതായത് എട്ടുമാസം, ഏഴു മുതൽ എട്ടുമാസം വരെ നിങ്ങൾക്ക് 3% വരെ എക്സ്പോഷർ ഉണ്ടായിരുന്നു. ', 'ഒരു ലിറ്ററിന് 3 ഗ്രാം ഒപിസി കണക്കിലെടുത്താൽ അത് ഇപ്പോഴും 0.1% മാർക്കിൽ എത്തിയില്ല. ', 'അതേസമയം, ഒരു ലിറ്ററിന് 50 ഗ്രാം പരിഹാരവും പിപിസി അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടറും ഉള്ളപ്പോൾ അത് ഇപ്പോഴും. ', '0.1%, വിപുലീകരണം 0.1% ൽ താഴെയാണ്. ', 'ലിറ്ററിന് 3 ഗ്രാം ഉള്ള പിപിസി, വിപുലീകരണം ഒന്നും തന്നെയില്ല. ', 'അതായത്, അത് വളരെ പ്രയാസം ശ്രദ്ധിക്കപ്പെടുന്നു. ', 'മുങ്ങുന്ന സമയത്തുനിന്ന് അവസാനത്തെ അളവിലേക്ക് മാറ്റം വരുത്താൻ പ്രയാസമാണ്. ', 'അത് കഴിഞ്ഞു. ', 'അപ്പോൾ ഇത് സിസ്റ്റത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എത്രിന്ജിറ്റ് ഉള്ളടക്കത്തിലേക്ക് എങ്ങനെ വിവർത്തനം ചെയ്യപ്പെടുന്നു? ', 'ഇപ്പോൾ ക്രസ്റ്റലിൻ മാത്രം നിലനിൽക്കുന്ന ഘട്ടങ്ങൾ കണ്ടെത്താനായി എക്സ്-റേ ഡിഫ്രാക്ഷൻ ചെയ്തു. ', '∙ എത്രിംഗിറ്റിന്റെ അളവും ക്രസ്റ്റലിൻ ഘട്ടങ്ങൾക്കിടയിലും നിർണ്ണയിച്ചു. ', 'ഇവിടെ എത്രിന്ജിറ്റ് അളവ് ഈ വരിയിൽ നൽകിയിരിക്കുന്നു. ', 'എട്രിംഗിറ്റിന്റെ അളവിൽ സ്ഥിരമായ വർധനയുണ്ടെന്ന് നിങ്ങൾക്ക് കാണാം. ', 'എക്സ്പോഷർ സമയം 9 ആഴ്ചയിൽ നിന്ന് 25 ആഴ്ച വരെ വർദ്ധിപ്പിക്കുക. ', 'അങ്ങനെ ഞങ്ങൾ ഒരു തരം രേഖപ്പെടുത്തി, അങ്ങനെ ഞങ്ങൾ രേഖപ്പെടുത്തി എട്രിംഗിറ്റ് ഉള്ളടക്കം നിർണ്ണയിച്ചു. ', 'എക്സ്-റേ ഡിഫ്രാക്ഷൻ. ', 'ഇത് യഥാർത്ഥത്തിൽ നിലവിലുണ്ടായിരുന്ന എല്ലാ ക്രിസ്റ്റലിൻ ഘടകങ്ങളുടെയും ശതമാനം മാത്രമാണ്. ', 'അത് വളരെ വ്യക്തമായ ബന്ധമാണ്. ', 'ഇത് നമുക്ക് ലഭിച്ച ഇടത്തരം വായനകളിൽ നിന്നും എടുത്ത പോയിന്റുകളുടെ ഒരു കൂട്ടം ആണ്. ', 'ഈ പ്രക്രിയയില് എടുത്തത്. ', 'അതിനാൽ തുടർച്ചയായ മുങ്ങൽ പഠനത്തിലൂടെ. ', 'സിസ്റ്റത്തിൽ യഥാർത്ഥത്തിൽ രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റിന്റെ അളവ് വളരെ കൂടുതലാണ്. ', 'എന്നാൽ ഇത് യാഥാർത്ഥ്യമാകുമോ ഇല്ലയോ എന്നത് നിലവിലുള്ള അവസ്ഥയെ ആശ്രയിച്ചിരിക്കുന്നു. ', 'ബെറ്റിന് റെ ഘടനയുടെ ചുറ്റും നാം എപ്പോഴും ഉയർന്ന പി. എച്ച് ഉള്ള ഒരു പരിസ്ഥിതിയിലാണോ. ', 'അല്ലെങ്കിൽ നമ്മൾ pH കുറവുള്ള ഒരു പരിതസ്ഥിതിയിലാണോ, അവിടെ മറ്റ് എത്രിന്ജിറ്റ് രൂപങ്ങൾ. ', 'എത്രിന്ജിറ്റിന് മറ്റു ഉൽപ്പന്നങ്ങളിലേക്ക് ചൊരിയാൻ കഴിയുമ്പോള്. ', 'അത് ത്രിന്ജിറ്റിനോട് ബന്ധപ്പെട്ടിരിക്കുന്ന വിപുലീകരണ നിലയ്ക്ക് കാരണമാകില്ല. ', 'തീർച്ചയായും, ചില മോഡലുകൾ ലീനിയറായതോ ക്വാഡ്രേറ്റിക് ആയതോ ആയ. ', 'ഡാറ്റയിലൂടെ എന്തെങ്കിലും സജ്ജീകരിച്ചിരിക്കുന്നു. ', 'അതുകൊണ്ട് ഈ ആവശ്യകത നിറവേറ്റാനാണ് ഇത്. ', 'ഇവിടെ കാണുന്നത് 50 ഗ്രാം ലിറ്ററിന് പരിഹാരം ഉപയോഗിച്ച് ഒപിസി മോർട്ടാർ. വളരെ. ', 'ഉയർന്ന വിപുലീകരണ നിലയും വീണ്ടും അത് ക്വാഡ്രാറ്റിക് തരത്തിലുള്ള ബന്ധത്തിൽ ഉൾക്കൊള്ളുന്നുവെങ്കിൽ. ', 'നിങ്ങൾക്ക് ക്വാഡ്രാറ്റിക് സമവാക്യവുമായി ബന്ധപ്പെട്ട സ്ഥിരതകൾ ലഭിക്കും. ', 'അതുപോലെ തന്നെ 3 ഗ്രാം ലിറ്ററിന് പരിഹാരം വീണ്ടും ക്വാഡ്രാറ്റിക്. ', 'പക്ഷെ, ഈ ബന്ധം നിങ്ങളെ അതിന് നയിക്കുന്നതെന്ത്? അത് നിങ്ങളെ സഹായിക്കും. ', 'വിപുലീകരണം ഒരു നിർണായക മൂല്യം കവിയുന്ന കാലഘട്ടം പ്രവചിക്കുന്നതില്. ', 'ആ നിർണായക മൂല്യം ASTM C1012 ൽ 0.1% ആയി രേഖപ്പെടുത്തിയിട്ടുണ്ടെങ്കിലും, ', 'നിങ്ങളുടെ സൈറ്റിൽ നിലനിൽക്കുന്ന അവസ്ഥയുടെ തരം നിങ്ങൾ ആഗ്രഹിക്കുന്ന ആ വിമർശനാത്മക വികസനം. ', 'അങ്ങനെ ആകണം. ', 'അതിനനുസരിച്ച്, നിങ്ങൾക്ക് പരീക്ഷണം ശരിയായി പരിഷ്ക്കരിക്കാനും മറ്റൊരു വിധത്തിൽ വ്യാഖ്യാനിക്കാനും കഴിയും. ', 'ഡാറ്റ. ', 'ഈ കേസിൽ യാതൊരു കുറവുമില്ല. ', 'ഈ സാഹചര്യത്തിൽ, നിങ്ങളുടെ സാമ്പിളുകൾ നിരന്തരം ഉള്ളിൽ ഉള്ളതിനാൽ, ചുരുങ്ങൽ പൂർണ്ണമായും ഒഴിവാക്കപ്പെടുന്നു. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'അതുകൊണ്ട് ഈ കേസിൽ ഉണക്കലും നനയലും ഇല്ല. ', 'അതിനാൽ നിങ്ങൾ ഉണക്കിയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, സാമ്പിൾ ഒരു നിശ്ചിത കാലയളവിൽ പരിഹാരത്തിനുള്ളിൽ തന്നെ തുടരുന്നു. ', 'പിന്നെ അത് ഉണക്കൽ പരിതസ്ഥിതിയിൽ വച്ച് സിസ്റ്റത്തിലേക്ക് തിരികെ വയ്ക്കുന്നു. ', 'അതുവഴി നെറ്റ് നീളത്തിലെ മാറ്റം ഉണ്ടാകാം. അത് ചുരുങ്ങിയതായിരിക്കും. ', 'തീർച്ചയായും, സൾഫേറ്റ് മൂലം നിങ്ങളുടെ മോർട്ടറുകളും കോൺക്രീറ്റുകളും സംരക്ഷിക്കപ്പെടാനുള്ള വിവിധ മാർഗങ്ങളെക്കുറിച്ച് സംസാരിക്കുന്നു. ', 'ആദ്യം, ഏറ്റവും പ്രധാനമായി, കുറഞ്ഞ C3S എംഎൻ ഉപയോഗം ആണ്, കാരണം വീണ്ടും നാം. വളരെ. ', 'വികസനവും എത്രിംഗിറ്റ് രൂപീകരണവും തമ്മിലുള്ള ബന്ധം വ്യക്തമാണ്, പക്ഷേ കുറഞ്ഞ C3S മ്നു. ', 'ആദ്യകാല ജലാംശം പ്രക്രിയയിൽ രൂപപ്പെടുന്ന പ്രാഥമിക എത്രിന്ജിറ്റ്. ', 'എല്ലായിടത്തും സ്ഥിരത പുലർത്തുന്നു. ', 'ഇത് സൾഫേറ്റ് പോലുള്ള മറ്റ് സൾഫേറ്റ് രൂപങ്ങളിലേക്ക് പരിവർത്തനം ചെയ്യുന്നില്ല, അവയ്ക്ക് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫ. ', 'ബാഹ്യ സൾഫേറ്റുകൾ ബെറ്റണിന് അകത്ത് വന്നാൽ എട്രിംഗിറ്റിലേക്കു മാറുന്നതിന്റെ. ', 'അങ്ങനെ കുറഞ്ഞ സി 3 എസ് മ്നസ് സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റിന് അടിസ്ഥാനം ആകുന്നു. ', 'അതിനെ നാം SRC എന്ന് വിളിക്കുന്നു, അല്ലെങ്കിൽ സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ്. ', 'സിമന്റ് സിമന്റ് സി3 എസ് കുറവുള്ളതും, ', 'ജലാംശം ലഭിച്ച ശേഷം കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ഉത്പാദിപ്പിക്കുന്നത്. ', 'ഒരു മോളി സി 3 എസ് ല് 3 മടങ്ങ് കല് സിം ഹൈഡ്രോക്സൈഡ് ഉല് പാദിപ്പിക്കുമെന്ന് നിങ്ങള് ക്ക് നന്നായി അറിയാം. ', 'സി. 2 എസ് ലേക്ക്. ', 'അതിനാൽ നിങ്ങൾക്ക് കൂടുതൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ഉണ്ടെങ്കിൽ ഗിപ്സം രൂപപ്പെടാനുള്ള പ്രവണത കൂടുതലാണ് കാരണം. ', 'ബാഹ്യ സൾഫേറ്റുകൾ കാൽസ്യം ഹൈഡ്രോക്സൈഡുമായി പ്രതിപ്രവർത്തനം ചെയ്യുമ്പോൾ നിങ്ങൾ ജിപ്സം രൂപീകരിക്കുന്നു. ', 'അതുകൊണ്ട് സിപ്സസ് രൂപീകരണം കുറയ്ക്കുന്നതിലൂടെ ബെറ്റണിന്റെ പ്രതിരോധം മെച്ചപ്പെടുത്താനും കഴിയും. ', 'അല്ലെങ്കിൽ സൾഫേറ്റ് ആക്രമണത്തിന് വേണ്ടി മോർട്ടാർ. ', 'ഉയർന്ന അലുമിന സിമന്റുകളും സൂപ്പർ സൾഫേറ്റ് സിമന്റുകളും വലിയ തോതിൽ ഉപയോഗിക്കാറില്ല. ', 'ഇന്ന്, പ്രധാനമായും നമ്മൾ സംസാരിച്ച മറ്റ് പ്രശ്നങ്ങളില് നിന്നും. ', 'ജലവൈദ്യുത ഘട്ടങ്ങളുടെ സ്ഥിരത. ', 'സൾഫേറ്റ് എക്സ്പോഷർ കണക്കിലെടുത്ത് ഈ സിമന്റ് രണ്ടും വളരെ നന്നായി പ്രവർത്തിക്കുന്നു. കാരണം വീണ്ടും അവിടെ. ', 'ഈ സംവിധാനങ്ങളിൽ യഥാർഥത്തിൽ സംഭവിക്കുന്ന വൈകി എട്രിംഗിറ്റിന്റെ രൂപീകരണവും ഇല്ല. ', 'ഇപ്പോൾ, തീർച്ചയായും, മിക്കവാറും എല്ലാ കാര്യങ്ങളിലും ഒരു ഭാഗമാകുന്ന രണ്ട് പ്രധാന വശങ്ങളുണ്ട്. ', 'ഈ സാഹചര്യത്തില്, ഈ പ്രശ്നങ്ങള് ക്കു് സംരക്ഷണ സംവിധാനങ്ങള് നല് കുന്നതു്. ', 'ഒന്നാമതായി, പൊസോളാനിക് വസ്തുക്കളും ധാതുഭൂമിയുടെ മിശ്രിതങ്ങളും ഉപയോഗിക്കുന്നു. ', 'ഇത് മിക്ക കേസുകളിലും ഗുണം ചെയ്യും, കാരണം ഇത് കാൽസ്യം അളവ് കുറയ്ക്കും. ', 'സിസ്റ്റത്തില് ഉള്ള ഹൈഡ്രോക്സൈഡ്. ', 'അതുകൊണ്ട്, കുറവ് ജിപ്സസ് രൂപം. കൊണ്ടിരിക്കുന്നു. ', 'ഗിപ്സും രൂപപ്പെടാൻ കുറവുണ്ടെങ്കിൽ നിലവിലുള്ളവയുടെ പരിവർത്തനം കുറവായിരിക്കും. ', 'മോണോ സൾഫേറ്റ് ഉം അല്മുനിനേറ്റ് ഉം എത്രിന്ജിറ്റായി മാറുന്നു കാരണം നേരത്തെ ചർച്ച ചെയ്തതുപോലെ ജിപ്സസ് രൂപീകരണം സംഭവിക്കുന്നു. ', 'ഈ പ്രക്രിയയിലെ ആദ്യ ചുവടുവെപ്പാണ്. ', 'അതിനാൽ ആ ചുവട് നിയന്ത്രിക്കാൻ ശ്രമിക്കുകയാണെങ്കിൽ അടുത്ത ചുവട് സ്വപ്രേരിതമായി നടക്കില്ല. ', 'അതായത്, നിങ്ങൾക്ക് കുറവ് ജിപ്സസ് ഉണ്ടെങ്കിൽ, അത് സോഡിയം സൾഫേറ്റിന് നല്ലതാണ്. ', 'ഇപ്പോൾ സിസ്റ്റത്തിൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് കുറവുണ്ടെങ്കിൽ എന്ത് സംഭവിക്കും? ', 'മഗ്നീഷ്യം സൾഫേറ്റ് പോലുള്ള ഒരു അസിഡ്. സംവിധാനം. ', 'ആ കേസിൽ എന്തു സംഭവിക്കും? ', 'അതുകൊണ്ട് പോര് റ്റ് ലാന്റിറ്റിൻറെ അളവ് കുറവുള്ള ധാതു ചേരുവകളുള്ള കോൺക്രീറ്റ് എങ്ങനെ. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് പരിഹാരങ്ങൾ നേരിടുന്നതുണ്ടോ? ', 'ഒ. പി. സി. യുമായി താരതമ്യം ചെയ്യുമ്പോൾ അവ നല്ലതോ ചീത്തയോ ആയിരിക്കും? ', 'അവള് അതിലും മോശമായിരിക്കും. ', 'മഗ്നീഷ്യം സൾഫാറ്റിനെ സംബന്ധിച്ചിടത്തോളം, ആസിഡ് ഉത്പാദിപ്പിക്കുന്ന സൾഫാറ്റിനെ അടിസ്ഥാനമാക്കിയുള്ള ഏതൊരു ആക്രമണവും. ', 'സിസ്റ്റത്തിലെ അവസ്ഥകൾ. ', 'അതുകൊണ്ട് എസ്ടിഎംഎസ് പ്രതിരോധം സംബന്ധിച്ച് മോശമായിരിക്കും. ', 'ഇപ്പോൾ നാം സംസാരിക്കുന്നത് രാസ സംവിധാനത്തെക്കുറിച്ചാണ്. ', 'സൾഫേറ്റ് നുഴഞ്ഞുകയറ്റത്തിന്റെ ഭൌതിക സംവിധാനത്തെ നാം ശരിക്കും അഭിസംബോധന. ചെയ്യുന്നില്ല. ', 'സിസ്റ്റത്തിന്റെ സുതാര്യതയെ കുറിച്ചാണ്. ', 'ഇപ്പോൾ നമ്മൾ സ്കിഎം ഉപയോഗിക്കുമ്പോൾ സൾഫേറ്റിന് വിധേയമായ വയലിൽ യഥാർത്ഥ കോൺക്രീറ്റ് സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം ഉള്ളിൽ കടന്ന് കടക്കുന്നതിനെ വലിയ തോതിൽ പ്രതിരോധിക്കാൻ സാധിക്കും. ', 'ഇപ്പോൾ രാസപരമായി മിനറൽ മിശ്രിതം അടിസ്ഥാനമാക്കിയുള്ള കോൺക്രീറ്റുകളിൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് അഭാവം. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് ആക്രമണത്തിന് റെ കാര്യത്തിൽ ഒരു നെഗറ്റീവ് വശം. ', 'എന്നാൽ ആക്രമണ പരിഹാരത്തിന്റെ ഭൌതിക ആഴത്തില് അത് സംഭവിക്കുന്നു. ', 'സിസ്റ്റത്തിലെ താഴ്ന്ന സുതാര്യത കാരണം വലിയ തോതിൽ പരിമിതപ്പെടുത്താവുന്നതാണ്. ', 'പക്ഷേ, സൾഫേറ്റ് ആക്രമണത്തെ സംബന്ധിച്ചിടത്തോളം നടക്കുന്ന രാസവിദ്യാ പഠനങ്ങൾ നോക്കിയാൽ. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് ഉപയോഗിച്ച് മിക്കപ്പോഴും നിങ്ങൾ കാണും. ', 'മിനറൽ അഡിറ്റീവുകൾ വളരെ നല്ലതല്ല, അത് ആസിഡ് ആക്രമണത്തിൽ നാം പിന്നീട് കാണും. ', 'പഠനങ്ങളും. ', 'പക്ഷെ, തീർച്ചയായും, നാം ഇപ്പോഴും ആശങ്കപ്പെടേണ്ട ഏറ്റവും പ്രധാനപ്പെട്ട സ്വഭാവം. ', 'ബെറ്റണിലെ വെള്ളം കുറഞ്ഞ സിമന്റ് അനുപാതം, ബെറ്റണിനെ അപ്രാപ്യമാക്കുന്നതും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങളുടെ നുഴഞ്ഞുകയറ്റത്തിനെതിരെ നിങ്ങള് ക്ക് നല് കാവുന്ന പ്രതിരോധത്തിന്റെ ആദ്യ വരി. ', 'സൾഫേറ്റ് ആക്രമണത്തിലെ സി. 3. എയുടെ സ്വാധീനത്തെ കുറിച്ചുള്ള ചില ലബോറട്ടറി തെളിവുകൾ ഇതാ. ', 'ഇത് കാനഡയിൽ നിന്നാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് വളരെ വ്യക്തമായി കാണാം, സിമന്റിൽ വളരെ ഉയർന്ന C3A ശതമാനം ഉണ്ടെങ്കിൽ. ', '12.3 ശതമാനം സി 3 എ. ഇവ ഏതുതരം സാമ്പിളുകളാണെന്ന് പോലും അറിയാനാവില്ല. ', 'ഈ സാമ്പിളുകൾ സൾഫേറ്റ് പരിഹാരങ്ങളിൽ പൂർണ്ണമായും മുങ്ങിപ്പോയി. ഇവിടെ നിങ്ങൾക്ക് 3.5% ', 'C3A ഉയർന്ന അളവിലുള്ള കാറ്റലക്ഷണത്തിന് ശേഷം സിലിണ്ട്രിക് സാമ്പിളുകൾ യഥാർത്ഥത്തിൽ കേടായിട്ടില്ല. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ. ', 'C3A നേരിട്ട് കാരണം നാം ചെയ്യുന്ന ലാബോറട്ടറി പഠനങ്ങളുടെ അടിസ്ഥാനത്തിൽ. ', 'C3A കുറവുള്ള ബെറ്റണിന്റെ പ്രകടനം താരതമ്യപ്പെടുത്തുമ്പോൾ വളരെ മികച്ചതാണെന്ന് നിങ്ങൾക്ക് വ്യക്തമായി കാണാം. ', 'C3A ഉയർന്ന കോൺക്രീറ്റ് പ്രകടനത്തിന്. ', 'നിങ്ങൾ യഥാർത്ഥ സൈറ്റ് അടിസ്ഥാനമാക്കിയുള്ള പഠനങ്ങൾക്ക് പോകുമ്പോൾ, ഇത്തരത്തിലുള്ള പഠനത്തിന്റെ ഏറ്റവും നല്ല ഉദാഹരണം. ', 'അമേരിക്കയിലെ പോർട്ട്ലാന്റ് സിമന്റ് അസോസിയേഷന്റെ പിസിഎ നടത്തിയ പ്രവര് ത്തനത്തെക്കുറിച്ച്. ', 'ഏതാണ്ട് മുപ്പത് മുതൽ മുപ്പത് വർഷം വരെ നീണ്ടുനിന്ന ഒരു പഠനത്തിലാണ് അവർ ഈ പഠനം നടത്തിയത്. ', 'കൊളറാഡോയിലെ ഈ കോണ്ക്രീറ്റ് സാമ്പിളുകളിൽ ശേഖരിച്ച. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണ് കൂടാതെ മഡിസിൻ തടാകത്തിനകത്ത് മുങ്ങിയ ഈ സാമ്പിളുകളും. ', 'ദക്ഷിണ ദക്കോട്ടയില് സൾഫേറ്റ് ഉള്ളടക്കം കൂടുതലായിരുന്നു. ', 'അങ്ങനെ ഇവ ഭാഗികമായി മുങ്ങിപ്പോയി. സംഭവിച്ചേക്കാവുന്ന കാര്യങ്ങളുടെ യാഥാർത്ഥ്യപരമായ ഫലങ്ങൾ. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണിലായിരിക്കുമ്പോള് ബെറ്റണിന് റെ മേല്. ', 'രസകരമെന്നു പറയട്ടെ, അവരുടെ പഠനം വ്യക്തമായി കാണിച്ചത് വെള്ളം സിമന്റ് ഉള്ള ഏതെങ്കിലും കോൺക്രീറ്റ്. ', 'ഈ എക്സ്പോഷറിൽ 0. 45 ൽ കൂടുതലുള്ള അനുപാതം കേടായി. ', 'അങ്ങനെ ഇത് ഒരു യാഥാർത്ഥ്യമായ എക്സ്പോഷർ ആയിരുന്നു സൾഫേറ്റ് പരിഹാരം വളരെ കേന്ദ്രീകരിച്ച അല്ല ആയിരുന്നു. ', 'യഥാർത്ഥത്തിൽ കണ്ടത്. ', 'ബെറ്റണിന്റെ സാമ്പിളുകൾ വളരെ ചെറുതല്ല, അവർ വളരെ വലിയ സിലിണ്ടറുകൾ ആയിരുന്നു. ', 'ഏഴ് വർഷത്തെ എക്സ്പോഷർ അവർ ഈ നിഗമനം വന്നു. ', '0.45 വെള്ള സിമന്റ് അനുപാതം കേടായി. ', 'ഇത് വളരെ രസകരമാണ് കാണിക്കുന്നത് 0.45 എന്നത് വെള്ളം സിമന്റ് അനുപാതം പരിമിതപ്പെടുത്തുന്നതാണ്. ', 'സൾഫേറ്റ് സമ്പന്നമായ പരിസ്ഥിതികൾ സംബന്ധിച്ചിടത്തോളം ഈ 0.45 കോഡൽ ഭൂരിഭാഗവും പ്രതിഫലിക്കുന്നു. ', 'സ്പെസിഫിക്കേഷനുകളും. ', 'സൾഫേറ്റ് പ്രതിരോധം സംബന്ധിച്ച്, ', 'വെള്ളം സിമന്റ് അനുപാതം കുറയ്ക്കുക 0.45 കുറയുന്നു. ', 'ഈ ഡാറ്റ പിന്നീട് കാലിഫോർണിയ സർവകലാശാലയിലെ ഗവേഷകർ വിശകലനം. ചെയ്തു. ', 'ബെർക്കി ഈ ഡാറ്റ മറ്റൊരു രീതിയില് പിന്നീട് അവതരിപ്പിച്ചു. ', 'വെള്ളം സിമന്റ് അനുപാതവും അവർ എന്തായിരുന്നു? ', '40 വർഷത്തിനു ശേഷവും സുരക്ഷിതമായിരുന്ന കോൺക്രീറ്റ് കാണിക്കാൻ സാധിക്കുന്നതാണു്. ', 'സിമന്റിന് C3A ഉള്ളടക്കം പരിഗണിക്കാതെ തന്നെ സുരക്ഷിതമായി തുടരുന്നു. ഈ കോൺക്രീറ്റുകളിലെല്ലാം വെള്ളം ഉണ്ടായിരുന്നു. ', 'സിമന്റ് അനുപാതങ്ങൾ 0.45 ൽ കുറവാണ്. ', 'സിമന്റ് സിമന്റ് സിസ്റ്റത്തിൽ ഉയർന്ന C3A ഉണ്ടായിരുന്നാലും. ', '0.45 ന് താഴെ നിലനിര് ത്തുന്നതോടെ പ്രകടനം വളരെ നല്ലതായിരുന്നു. ', '40 വർഷത്തിനു ശേഷമുള്ള എല്ലാ കോൺക്രീറ്റുകളും വെള്ള സിമന്റ് ഉള്ളവയാണ്. ', 'അനുപാതം 0.45 ൽ കുറവാണ്. ', 'വീണ്ടും, മിക്ക സവിശേഷതകളും നോക്കിയാൽ, സിമന്റ് പരിധി അടിസ്ഥാനപരമായി കൂടുതൽ സംസാരിക്കുന്നത്. ', 'സിമന്റ് തരം 2 സാധാരണയായി മിതമായ അളവിൽ ഉള്ള സിസ്റ്റത്തിൽ C3A ന്റെ വ്യാപ്തി. ', 'സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റുകൾ. ', 'അതായത്, അവയിൽ 8% C3A ഉണ്ട്. ', 'ടൈപ്പ് 3 ന് സാധാരണയായി C3A ഉള്ളടക്കം കൂടുതലായിരിക്കും, കാരണം നമുക്ക് വേഗത്തിൽ കഠിനമാക്കാനുള്ള സവിശേഷതകൾ ആവശ്യമാണ്. ', 'ഈ സിമന്റുകളിൽ നിന്നും എന്നാൽ സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റുകളായ ടൈപ്പ് 5 സിമന്റുകളിൽ നിന്നാണ് ഞാൻ സംസാരിക്കുന്നത്. ', 'ഇവിടെ എ. എസ്. ടി. എം. സവിശേഷതകളെക്കുറിച്ച്. ', 'ടൈപ്പ് 5 സൾഫേറ്റ് പ്രതിരോധം സിമന്റ് ആണ് അവിടെ C3A ഉള്ളടക്കം കുറവ് നിയന്ത്രിക്കണം. ', '5% ൽ കുറവാണ്. ', 'എന്നാൽ പ്രശ്നം 5 തരം സിമന്റ് സൾഫേറ്റ് പ്രതിരോധം പരിശോധന ഒരിക്കലും. ', 'നിങ്ങൾ എപ്പോഴും 5% ൽ താഴെ C3A ഉള്ളവരായിരിക്കും. ', 'സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ് ഉപയോഗിക്കുമ്പോൾ നിങ്ങളെ സംരക്ഷിക്കുമെന്ന് ആളുകൾ കരുതുന്നു. ', 'സൾഫേറ്റ് ആക്രമണത്തില് നിന്നും. ', 'പിന്നെന്തിനാ ഇത് ഒരു പ്രശ്നമായിരിക്കുന്നത്? ', 'സൾഫേറ്റ് പ്രതിരോധം ഉണ്ടെങ്കിലും നാം എന്തിനാണ് സൾഫേറ്റ് പ്രതിരോധം പരിശോധിക്കുന്നത്? ', 'സിമന്റ്? ', 'കാരണം മിശ്രിതം രൂപകൽപ്പന ചെയ്യാന് നാം വ്യക്തമായി തയ്യാറാകുന്നില്ലെങ്കിൽ നാം മിശ്രിതം. ', 'സിമന്റ് വെള്ളം അനുപാതം ഒരു കാര്യമാണ്. ', 'രണ്ടാമതായി, സിസ്റ്റവുമായി ബന്ധപ്പെട്ട് മറ്റു തരത്തിലുള്ള കേടുപാടുകളും ഉണ്ടാകുന്നതായി നമുക്കറിയാം. ', 'ജിപ്സസ് രൂപീകരണവുമായി ബന്ധപ്പെട്ട ഫിസിക്കൽ സോൾറ്റ് ആക്രമണവും എത്രിംഗിറ്റുമായി ബന്ധപ്പെട്ട മറ്റ് വശവും. ', 'യഥാർത്ഥ കോൺക്രീറ്റ് സാമ്പിളുകളിൽ പരാജയത്തിന്റെ പ്രധാന സംവിധാനം ആയിരിക്കില്ല. ', 'ഒരു ലബോറട്ടറി പഠനത്തിൽ നാം തുടർച്ചയായ മുങ്ങൽ നടത്തുന്നു. ', 'വ്യക്തമായി വിപുലീകരണവുമായി നേരിട്ട് ബന്ധപ്പെട്ടിരിക്കുന്നു, എന്നാൽ ഒരു യാഥാർത്ഥ്യബോധമുള്ള അവസ്ഥയിൽ എത്രിന്ജിറ്റ്. ', 'ഒന്നാമതായി, അത് സൾഫാറ്റിന്റെ മറ്റു രൂപങ്ങളിലേക്ക് പരിവർത്തനം ചെയ്യപ്പെടാം, അത്. ', 'നിങ്ങളുടെ ഘടനയെ നശിപ്പിക്കുന്നതിനു് പ്രധാനമായ ഒരു സംവിധാനം ആയിരിക്കണം. ', 'അതുകൊണ്ട്, നിങ്ങൾ ടൈപ്പ് 5 സിമന്റ് ഉപയോഗിക്കുമ്പോൾ പോലും, അത് സൾഫേറ്റ് ബന്ധപ്പെട്ട പരിശോധനകൾക്കും. ', 'നാം ആഗ്രഹിക്കുന്ന പ്രകടനം നേടുന്നുണ്ടോ എന്ന്. ', 'ചോദ്യം ചെയ്യപ്പെടുന്ന തുടർച്ചയായ മുങ്ങൽ അടിസ്ഥാനമാക്കിയുള്ള ASTM C1012 സൾഫേറ്റുകൾ. ', 'പല ഗവേഷകരും. ', 'സൾഫേറ്റ് ആക്രമണത്തിലെ യഥാർത്ഥ പ്രതിരോധം. ', 'സിസ്റ്റത്തിന്റെ സുതാര്യതയുടെ ഫലങ്ങള് നാം ശരിക്കും ഉൾക്കൊള്ളുന്നില്ലെന്നാല് ബെറ്റിന് റെ കാര്യങ്ങള്. ', 'എന്തായാലും അത് ചർച്ചക്ക് അപ്പുറം ആണ്. ', 'എ. എസ്. ടി. എം. മാനദണ്ഡങ്ങളിൽ നിർദ്ദേശിച്ചിരിക്കുന്ന വിവിധ പരിശോധന രീതികൾ പുനഃസംഗ്രഹിക്കുക. ', 'ഏറ്റവും കൂടുതൽ ഉപയോഗിക്കുന്നത് ASTM C1012 ആണ്. ', '5% സോഡിയം സൾഫേറ്റ് അല്ലെങ്കിൽ 5% മഗ്നീഷ്യം സൾഫേറ്റ് അല്ലെങ്കിൽ നിങ്ങൾക്ക് ഒരു മിശ്രിതം ഉപയോഗിക്കാമെന്ന്. അവർ പറയുന്നു. ', 'സോഡിയം, മഗ്നീഷ്യം, സൾഫേറ്റ് എന്നിവയുടെ. ', 'ഈ സംവിധാനങ്ങളോ പ്രതികരണങ്ങളോ. ', 'തികച്ചും വ്യത്യസ്തമാണ്. ', 'അതിനാൽ നിങ്ങൾ പരീക്ഷയെ എങ്ങനെ നടത്തുന്നു എന്നതിനെക്കുറിച്ച് വളരെ ശ്രദ്ധിക്കണം. ', 'ശരിയായ സൾഫേറ്റ് പരിഹാരം തിരഞ്ഞെടുക്കുന്നത് വളരെ പ്രധാനമാണ്, സാധാരണയായി വിപുലീകരണം അളക്കുന്നു. ', '6 അല്ലെങ്കിൽ 12 മാസം ശേഷം കോൺക്രീറ്റ് അല്ലെങ്കിൽ മോർട്ടാർ യഥാർത്ഥത്തിൽ 20 മെഗാപാസ്കൽ എത്തുന്നത് മാത്രം. ', 'സൾഫേറ്റ് പരിഹാരത്തിന് വിധേയമായി, ഒരു മിനിമം അളവ്. ', 'സിസ്റ്റത്തില് ഇതിനകം തന്നെ വികസിപ്പിച്ചെടുത്ത കരുത്ത്. ', 'വീണ്ടും പരിശോധന പരിഹാരം 50 ഗ്രാം ആണ് ലിറ്ററിന് സൊഡിയം സൾഫേറ്റ്. പരിഹാരം. ', '20 മെഗാപാസ്കല് ല് അധിക സിമന്റിംഗ് വസ്തുക്കളും പ്രതികരിക്കാന് സാധിക്കും. ', 'അതിനർത്ഥം നമ്മൾ 7 ദിവസം മാത്രം ചികിത്സിക്കുന്നു എന്ന് നാം പറയുന്നില്ല എന്നാണ്. ', 'ഏഴു ദിവസത്തിനകം ഒ. പി. സി. വിറക്കുന്ന ചാരത്തോട് താരതമ്യം ചെയ്യുമ്പോൾ വ്യത്യസ്തമായ ഒരു നിലയിലുള്ള പ്രതികരണമായിരിക്കും ഉണ്ടാകുക. ', 'അതുകൊണ്ട് നമ്മൾ പറയുന്നത് എല്ലാ സാമ്പിളുകളും ഒരേ ശക്തി നേടിയെടുക്കുന്നതുവരെ. ', 'സൾഫേറ്റ് പരിഹാരത്തിന് നാം അവയെ വിധേയമാക്കും. ', 'ഇപ്പോൾ നിങ്ങൾ ഈ രംഗത്ത് കാണാനാകുന്ന മറ്റ് സൾഫേറ്റ് ബന്ധപ്പെട്ട സംവിധാനങ്ങൾ. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷൻ എന്ന് വിളിക്കപ്പെടുന്ന ഒരു വസ്തു. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണിൽ ഉൾച്ചേർത്തിരിക്കുന്ന നിരകൾ. ', 'മണ്ണിന്റെ വായു ഇന്റർഫേസിൽ കൂടുതൽ നാശനഷ്ടങ്ങൾ ഉണ്ടാവുക, അത് നിരയുടെ ഭാഗത്ത് അല്ല. ', 'മണ്ണിൽ പൂർണമായും മുങ്ങിപ്പോയിരിക്കുന്നു. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷന്റെ അധിക ഫലങ്ങൾ. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷൻ പ്രധാനമായും ഉപ്പുകളുടെ അണുവിന് റെ ഉള്ളിലെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന്, റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന്. ', 'വെള്ളം നീരാവിയിലൂടെയും ഉപ്പിന്റെ ഉരുകൽ വഴിയും. ', 'സൾഫാറ്റിന്റെ വിവിധ രൂപങ്ങൾ തമ്മിലുള്ള മാറ്റം, അത് വികാസത്തിൽ മാറ്റം വരുത്തുന്നു അല്ലെങ്കിൽ. ', 'ജലങ്ങളില് ചേര് ന്നതിനാല് ക്രിസ്റ്റല് ലീവുകളുടെ അളവുകള് മാറ്റം. ', 'ജലാംശം മൂലം ക്രിസ്റ്റലിന്റെ വലിപ്പം മാറുന്നു. ', 'സിസ്റ്റത്തിലെ സമ്മർദ്ദം. ', 'ഇതിനു പുറമെ, ഞങ്ങൾ സംസാരിച്ച മറ്റ് വശങ്ങളും ഉണ്ട്. ', 'ഇത് ഒരു വിക്കി ആക്ഷൻ ആണ്. ഇത് ഇത്തരത്തിലുള്ള കേസുകളിൽ വളരെ പ്രധാനമാണ്. ', 'ഒരു വശത്ത് തികച്ചും വരണ്ടതും മറ്റേ വശത്ത് തികച്ചും വരണ്ടതുമായ ഒരു പരിസ്ഥിതിയും. ', 'രസകരമെന്നു പറയട്ടെ, നിങ്ങൾ വെള്ളം സിമന്റ് അനുപാതം കുറവാണെങ്കിൽ. ', 'നിങ്ങളുടെ സിസ്റ്റത്തിലെ വോട്ടെണ്ണൽ നിരക്ക് 0.45 ആണ് വോട്ടെണ്ണൽ നിരക്ക്. ', 'സക്ഷണം സംഭവിക്കും കാര്യമായി കുറയുന്നു. ', 'അതിനാൽ ഈ 0.45 ന്റെ അർത്ഥം രാസപരമായി മാത്രമല്ല, ', 'ഒരു ഭൌതിക ആക്രമണ കാഴ്ചപ്പാട്. ', 'പോർട്ട്ലാന്റ് സിമന്റ് അസോസിയേഷനിൽ നിന്നും ഉപ്പിന്റെ ക്രിസ്റ്റലൈസേഷന് റെ തെളിവുകളാണിവ. ', 'സിമന്റ് തരം 5 ഉള്ള കോൺക്രീറ്റുകളെ സംബന്ധിച്ചുള്ള പിസിഎ നടത്തിയ ദീർഘകാല പഠനമാണിത്. ', 'ഇരുവരും സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ് കൊണ്ടാണ് നിർമ്മിച്ചിരിക്കുന്നത്. ', 'ഒന്നിന് 0.65 എന്ന ഉയർന്ന വെള്ള സിമന്റ് അനുപാതമുണ്ട്, മറ്റൊന്നിന് 0.39 എന്നതും കാണാനാകും. ', 'വ്യക്തമായി പ്രകടനം. ', '12 വർഷത്തിനു ശേഷം കോൺക്രീറ്റിന്റെ കാഴ്ചശക്തി 5 ആയിരുന്നതിനാൽ അത് പരമാവധി മോശമായി. ', 'നില. ', 'ഇവിടെ 16 വർഷത്തിനു ശേഷവും കോൺക്രീറ്റിന് 2 റേറ്റിംഗ് ഉണ്ടായിരുന്നു. അതായത്, അത് വളരെക്കാലം. ', 'അത് പൂർണമായും തകര് ന്നുപോകും മുമ്പ് പോകേണ്ട വഴി. ', 'സൾഫേറ്റ് സംബന്ധിച്ച മിക്ക ഗവേഷണ പഠനങ്ങളിലും കാണിച്ചിരിക്കുന്നത്. ', 'വെള്ള സിമന്റ് അനുപാതം വളരെ പ്രധാനമാണ്. ', 'സൾഫേറ്റ് പ്രതിരോധം നിർണ്ണയിക്കുന്ന പ്രധാന ഘടകമാണ്. ', 'ഇപ്പോൾ മറ്റൊരു തരത്തിലുള്ള സൾഫേറ്റ് ആക്രമണം റിട്രോഗേറ്റ് രൂപീകരണം വൈകിപ്പിക്കുന്നു. ', 'ഇത് ആദ്യമായി കോൺക്രീറ്റിൽ കണ്ടെത്തിയത് എങ്ങനെയാണ്? ', 'യുകെയിലെ ചില റെയിൽവേ സ്ലീപ്പർമാർക്ക് ചില പിളർപ്പുകൾ കാണിക്കാൻ തുടങ്ങിയപ്പോഴാണ് ഇത് സംഭവിച്ചത്. ', 'റെയിൽവേ സ്ലീപ്പറുകൾ ഒരു പ്രീ-കാസ്റ്റ് യാർഡിൽ നിർമ്മിക്കുന്നു. സാധാരണയായി ഇവ പ്രീ-സ്ട്രെസ്ഡ് പ്രീ-കാസ്റ്റ് ആണ്. ', 'റെയിൽവേ സ്ലീപ്പറുകൾ സാധാരണയായി താപനിലയിലുള്ള കഠിനതയ്ക്ക് വിധേയമാണ്, അതിനാൽ കരുത്ത് വർദ്ധിപ്പിക്കുന്നു. ', 'ഈ ഉറങ്ങുന്ന വികസനവും മാപ്പ് ക്രാക്ക് അല്ലെങ്കിൽ ക്രമരഹിതമായി ക്രാക്ക് ശേഷം. ', '15 മുതൽ 20 വർഷം വരെ സേവനം ചെയ്തു. ', 'അങ്ങനെ അന്വേഷിച്ചവർ വിചാരിച്ചു ഇത് ആൽക്കലി സിലിക്കയുടെ പ്രതികരണത്തിന്റെ ഫലമാണെന്ന്. ', 'എന്നാൽ പിന്നീട് അവർ കണ്ടത് ആ പ്രതികരണ സംയുക്തം സിസ്റ്റത്തിൽ ഇല്ലായിരുന്നു എന്നാണ്. ', 'ഈ പിളര് ക്കുകള് മറ്റൊരിടത്തേക്കും ബന്ധിപ്പിച്ചിരിക്കണം. ', 'അങ്ങനെ അവർ സൂക്ഷ്മമായ വിശകലനം ചെയ്യുമ്പോൾ ഈ കോൺക്രീറ്റ്. ', 'ഈ സിസ്റ്റത്തിൽ എത്രിന്ജിറ്റിന്റെ രൂപീകരണം കാണിക്കുന്നു. ', 'വാസ്തവത്തില് അവര് പിളര് ക്കുകളുടെയും ശൂന്യതകളുടെയും സ്ഥലങ്ങള് പിടിച്ചടക്കാൻ തുടങ്ങി. ', 'അല്പം കഴിഞ്ഞ് ഞാന് ചില ചിത്രങ്ങള് കാണിച്ചു തരാം. ', 'സിമന്റ് പേസ്റ്റും അഗ്രഗേറ്റും തമ്മിലുള്ള ഇന്റർഫേസ് ഇതാണ്. ', 'ഈ ഇന്റർഫേസിൽ സൂക്ഷിച്ചിരിക്കുന്നതും നിങ്ങൾക്ക് ഇന്റർഫേസ് മുഴുവൻ എട്രിംഗൈറ്റ് കാണാൻ കഴിയും. ', 'ഈ കൂട്ടായ്മകളിൽ പലതും എത്രിന്ജിറ്റിന്റെ രൂപീകരണം കാണുന്നു. ', 'അതായത്, ഈ മൈക്രോസ്ട്രക്ചറൽ പഠനത്തിൽ ഇത് കണ്ടെത്തി, പിന്നെ അവർ ഒരു നിഗമനത്തിലെത്തി. ', 'ഈ എത്രിന്ജിറ്റ് സിസ്റ്റം പരിഷ്കരിച്ചതായിരിക്കും. ', 'കാരണം, ആദ്യഘട്ടങ്ങളിൽ അത് രൂപപ്പെടാൻ കഴിഞ്ഞില്ല, ഈ ആദ്യഘട്ടത്തിൽ എട്രിംഗിറ്റിന്റെ. ', 'സിസ്റ്റം താപനിലയിൽ കഠിനമായി പാകപ്പെടുന്നതുകൊണ്ടാണ് ഇത് സംഭവിക്കുന്നത്. ', 'നിങ്ങൾ വളരെ ഉയർന്ന താപനില സിസ്റ്റം നൽകുന്നു എങ്കിൽ, നാം സാധാരണയായി സംസാരിക്കുന്നത്. ', '70 ഡിഗ്രി സെൽഷ്യസ് കൂടുതലുള്ള താപനിലയിൽ ഈ ഘട്ടത്തിൽ എത്രിന്ജിറ്റ് രൂപപ്പെടുക. ', 'അഥവാ നിങ്ങൾക്ക് സുൽഫേറ്റുകൾ ഉണ്ടെങ്കിൽ അവ എളുപ്പത്തിൽ. ', 'സൾഫേറ്റുകൾ തുടക്കത്തിൽ എളുപ്പത്തിൽ ലയിക്കുന്നില്ലെങ്കിൽ നിങ്ങൾ. ', 'സാധാരണ ബെറ്റണിന് റെ പോലെ ആദ്യഘട്ടങ്ങളിൽ എത്രിന്ജിറ്റിന് രൂപം കിട്ടും. ', 'അതിനാൽ എത്രിന്ജിറ്റ് രൂപീകരണം പ്രധാനമായും നീരാവിയിൽ ഉയർന്ന താപനിലയിൽ അടയ്ക്കുന്നതാണ്. ', 'സിസ്റ്റത്തിൽ സൾഫേറ്റുകളുടെ വളരെ കുറഞ്ഞ ലയിക്കുന്നതാണെങ്കിൽ വീണ്ടും എട്രിംഗൈറ്റ്. ', 'രൂപീകരണം. തടയാം. ', 'അങ്ങനെ, ഈ സൾഫേറ്റുകൾക്ക് സംഭവിക്കുന്നത്, അവ നേരത്തെ പുറത്തിറങ്ങാത്തതുകൊണ്ട് അവ. ', 'സി. എസ്. എച്ച്. യിൽ സൾഫേറ്റുകൾ സി. എസ്. എച്ച്. യിൽ ആഗിരണം ചെയ്യപ്പെടുന്നു. ', 'വാസ്തവത്തില് ചൂട് കറക്കുന്ന സിമന്റിനെ അല്ലെങ്കിൽ ചൂട് കറക്കുന്ന കോൺക്രീറ്റ് എടുക്കുകയാണെങ്കിൽ നിങ്ങള് വളരെ വ്യക്തമായി കാണും. ', 'സി. എസ്. എച്ച്. യുടെ വിശകലനം ചെയ്യുമ്പോൾ അതിൽ ധാരാളം സൾഫർ അടങ്ങിയിരിക്കുന്നതും ഈ സൾഫേറ്റ്. ', 'അത് റ്റ്രിംഗിറ്റ് അല്ലെങ്കിൽ മോണോ സൾഫേറ്റ് പോലുള്ള പ്രതികരണ ഉൽപ്പന്നങ്ങളിലേക്ക് പോയിരിക്കുമായിരുന്നു. ', 'അതുകൊണ്ട് ഈ സൾഫേറ്റുകൾ CSH ലേക്ക് പോകുന്നു, പിന്നീട് ഈർപ്പം ഉള്ളപ്പോൾ അലുമിനേറ്റുകളുമായി വീണ്ടും സംയോജിപ്പിക്കുന്നു. ', 'കഠിനമായ ബെറ്റണിൽ എത്രിന്ജിറ്റ് രൂപീകരിക്കാൻ ലഭ്യമാണ്, ഇത് വിപുലമായ സമ്മർദ്ദത്തിന് കാരണമാകുന്നു. ', 'അത് നിങ്ങളുടെ ബെറ്റണിന്റെ തകരാൻ കാരണമാകും. ', 'വീണ്ടും ഇത് ചൂട് കറക്കിയ ബെറ്റണിന്റെ തെളിവാണ്. ', 'ഇന്റർഫേസൽ ട്രാൻസിഷൻ സോണിൽ. ', 'രസകരമെന്നു പറയട്ടെ, സൂക്ഷ്മമായ തെളിവുകൾ കാണിച്ച ഗവേഷണങ്ങളുടെ ഒരു ഭാഗം. ', 'ഇടിസിലും, പിളർപ്പുകളിലും വലിയ ശൂന്യതകളിലും എത്രിന്ജിറ്റ് രൂപം കൊണ്ടിരുന്നു. ', 'ഈ ശൂന്യത പൂർണമായും എത്രിന്ജിറ്റിലാണ് നിറഞ്ഞിരിക്കുന്നത്. ', 'അതുകൊണ്ട് പല ഗവേഷകരും വിശ്വസിച്ചു. ', 'സൾഫേറ്റുകളുടെ വൈകി പുറത്തിറക്കലിന് പുറമെ, പാലിക്കേണ്ടിയിരുന്ന മറ്റ് അവസ്ഥ. ', 'സിസ്റ്റത്തിൽ സൂക്ഷ്മമായ നുറുക്കുകളും ശൂന്യതകളും ഉണ്ടായിരുന്നു. ', 'ഗവേഷകർ നേരത്തെ വിശ്വസിച്ചതും ഇതുതന്നെ. ', 'പക്ഷെ പിന്നീട് ഈ പ്രതിഭാസം മനസ്സിലാക്കിയതോടെ ആളുകൾ ഒരു ധാരണയിലെത്തി. ', 'പോറുകളിലും ശൂന്യതകളിലും രൂപപ്പെടുന്ന എത്രിന്ജിറ്റല്ല വിപുലീകരണത്തിന് കാരണമാകുന്നത്. ', 'സി. എസ്. എച്ച്. യിൽ രൂപപ്പെടുന്ന എത്രിന്ജിറ്റാണ് വിപുലീകരണത്തിന് കാരണമാകുന്നത്. ', 'ഈ സി. എസ്. എച്ച്. എൽ. എഫിന് വളരെ ചെറിയ ഇടം ഉണ്ട്. ', 'എത്രിന്ജിറ്റ് രൂപപ്പെടുകയാണെങ്കിൽ, അത് ഒരു വിപുലീകരണം സൃഷ്ടിക്കുന്നു. ', 'ഇവിടെ നിന്നും എത്രിന്ജിറ്റ് നവീകരിക്കാൻ കഴിയുന്ന മേഖലകളിലേക്ക് പോകുന്നു. ', 'അവ വളര് ന്നു വളര് ന്നു, വളരെ വലിയ നിക്ഷേപങ്ങള് രൂപീകരിക്കുന്നു. ', 'ഉദാഹരണത്തിന്, ശൂന്യതയുള്ള സ്ഥലങ്ങളിലേക്ക്, കൂടുതൽ പൊറസ് ഉള്ള ഇന്റർഫേസൽ ട്രാൻസിഷൻ സോണിലേക്ക്. ', 'സിസ്റ്റത്തില് ലഭ്യമാണ്. ', 'അങ്ങനെ, പോറുകളിലും, ശൂന്യതകളിലും, പിളർപ്പുകളിലും എത്രിന്ജിറ്റിന്റെ രൂപീകരണം. ', 'നിങ്ങളുടെ വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണത്തിന്റെ ഒരു ഭാഗം. ', 'തുളുമ്പുകളും ശൂന്യതകളും. ', 'അതിനാൽ ഡിഎഫ് കാരണം പ്രാഥമിക എത്രിന്ജിറ്റ് സിഎസ്എച്ചിൽ ഇപ്പോഴും രൂപപ്പെടുന്നു. ', 'ഒടുവിൽ എത്രിന്ജിറ്റ് ന്യൂക്ലിയേറ്റ് ചെയ്യാനും വളര് ന്നതിനും കഴിയുന്ന മേഖലകളിലേക്ക് നീങ്ങുന്നു. ', 'വളരെ വലിയ തോതിൽ. ', 'ഇത് ഗവേഷകരുടെ ചർച്ചാ വിഷയമായിരുന്നു. പക്ഷെ പിന്നീട് അത് വ്യക്തമായി. ', 'സി. എസ്. എച്ച്. യിൽ എട്രിംഗിറ്റ് രൂപീകരണം ക്രാക്ക് ചെയ്യുകയും പിന്നീട് എട്രിംഗിറ്റ് വീണ്ടും നിക്ഷേപിക്കുകയും ചെയ്യുന്നുവെന്ന് കാണിച്ചു. ', 'അത് അവിടെയാണു രൂപപ്പെട്ടതെന്ന് വിശ്വസിക്കാൻ ആളുകളെ പ്രേരിപ്പിക്കുന്ന വിള്ളലുകളിലായിരുന്നു അത്. ', 'അപ്പോൾ ഡിഎഫ് ശരിക്കും ഒരു പ്രശ്നമാണോ? ', 'നിങ്ങളുടെ ബെറ്റണിന്റെ താപനില 70 ഡിഗ്രിക്ക് താഴെയായി നിയന്ത്രിക്കുന്ന കാലത്തോളം അത് വേണ്ട. ', 'ഇപ്പോൾ നാം പലപ്പോഴും അറിയുന്നു ആ താപനില നീരാവി കറന്റ്, നിങ്ങൾ തീർച്ചയായും നിയന്ത്രിക്കാൻ കഴിയും. ', 'പമ്പിന്റെ താപനില 70 നു താഴെയാക്കുന്നതാണെങ്കിലും പ്രശ്നം സിമന്റിന് കാരണമാണ്. ', 'ജലാംശം ചേർക്കുമ്പോൾ ആദ്യഘട്ടങ്ങളിൽ ബെറ്റണിന്റെ ഉള്ളടക്കം വളരെ കൂടുതലാണ്. ', 'ചൂട് അതിനെ മയക്കിപ്പറഞ്ഞാൽ ആന്തരിക താപനില 70 ലധികം ഉയരാൻ സാധ്യതയുണ്ട്. ', 'അതുകൊണ്ട് നാം വളരെ ശ്രദ്ധാലുവായിരിക്കണം, പ്രത്യേകിച്ച് കോൺക്രീറ്റ് ചൂട് കഠിനമായി മലിനമാക്കുന്ന സമയത്ത്. ', 'ഉയർന്ന പ്രകടനമുള്ള കോൺക്രീറ്റുകൾ, സിമന്റ് ഉള്ളടക്കം കുറവായ വെള്ളത്തിൽ വളരെ കൂടുതലുള്ള സിമന്റ്. ', 'അനുപാതങ്ങള്. ', 'എന്നാൽ ഉയർന്ന പ്രകടനമുള്ള കോൺക്രീറ്റുകളുമായി ബന്ധപ്പെട്ട്, നിങ്ങൾ മറ്റൊരാളെ നോക്കണം. ', 'വശം. ', 'സിസ്റ്റത്തിൽ വളരെ ചെറിയ പൊറസ് ഉണ്ടെന്നത് വളരെയധികം ഈർപ്പം അനുവദിക്കില്ല. ', 'ഈ തരത്തിലുള്ള ബെറ്റണിന് റെ അകത്ത് കയറാൻ. ', 'ഈർപ്പം ലഭ്യമല്ലാത്ത പക്ഷം എത്രിന്ജിറ്റ് വികസനം സിസ്റ്റത്തിൽ സംഭവിക്കില്ല. ', 'അങ്ങനെ നിങ്ങൾ ഒരു ബെറ്റണിനെ തിരഞ്ഞെടുത്താൽ, അത് കുറഞ്ഞ വെള്ളം സിമന്റ് അനുപാതമുള്ളതാകും. ', 'സിസ്റ്റത്തിൽ നിങ്ങൾ അനുയോജ്യമാക്കിയ ആദ്യഘട്ട പ്രക്രിയകൾ പരിഗണിക്കാതെ തന്നെ ഡിഎഫിന്. ', 'പോസോളാനിക് വസ്തുക്കളുടെ ഉപയോഗവും സഹായിക്കുന്നു. ', 'എന്തിന്? ', 'വീണ്ടും നാം സിസ്റ്റത്തിന്റെ പൊറസതയും സുതാര്യതയും കുറയ്ക്കുന്നു, പിന്നെ നമ്മൾ വീണ്ടും സൃഷ്ടിക്കുന്നു. ', 'പ്ളൈൻ പോർട്ട്ലാന്റ് എന്ന സ്ഥലത്തുള്ളതിനേക്കാൾ അല്പം താഴ്ന്ന പിഎച്ച് അവസ്ഥ. ', 'സിമന്റ്. ', 'അതുകൊണ്ട് പോസോളാനിക് കോൺക്രീറ്റുകളിലെ എത്രിംഗിറ്റ് രൂപീകരണം അത് നയിക്കുന്നത്ര വിപുലീകരണത്തിന് കാരണമാകില്ല. ', 'സാധാരണ സിമന്റിറ്റി കോണ്ഫീറ്റുകളില്. ', 'അതുകൊണ്ട് പോസോളാനിക് വസ്തുക്കൾ ചേർക്കുന്നതിലൂടെ ഗുണകരമായ ഫലങ്ങൾ ഉണ്ടാകും. ', 'ഒന്നാമതായി, ലഭ്യമായ അല് മിനേറ്റ് അളവ് കുറയ്ക്കുക, അത് എത്രിന്ജിറ്റ് രൂപീകരിക്കാൻ കഴിയും. ', 'നേരിട്ടുള്ള ഫലവും. ', 'പോസോളാനിക് വസ്തുക്കൾ ഉണ്ടെങ്കിൽ, എത്രിന്ജിറ്റ് രൂപീകരിക്കുന്ന അല് മിനേറ്റ് അളവ് കുറയുന്നു. ', 'അങ്ങനെ, ഉള്ളിൽ പൊസോളാനിക് വസ്തുക്കൾ ഉള്ളപ്പോൾ എത്രിന്ജിറ്റ് രൂപീകരണം യാന്ത്രികമായി കുറയുന്നു. ', 'സിസ്റ്റം. ', 'രാസ ആക്രമണത്തിന്റെ മറ്റു രൂപങ്ങളിലേക്ക് നീങ്ങുന്നു. ', 'അതുകൊണ്ട് സൾഫാറ്റിനെ കുറിച്ച് ഞങ്ങൾ ധാരാളം സംസാരിച്ചു. ', 'ക്ലോറൈഡ് ആക്രമണത്തെ നോക്കിയാൽ നമുക്ക് കൺട്രീറ്റ് എങ്ങനെ? ', 'ക്ലോറൈഡ് മൂലം മോശമാകുന്നതാണെങ്കിലും ഈ ക്ലോറൈഡ് എങ്ങനെ? ', 'ബെറ്റണിന് അകത്തു കടന്ന് അത് ആയുധം കയറ്റുന്ന ഉരുക്ക് നിലയിലെത്തുന്ന. ', 'ഉരുക്ക് പൊടിയിടുന്നതു വരെ. ', 'അതിനാൽ ക്ലോറിഡ് ആക്രമണത്തിന്റെ ഉൽപ്പന്നങ്ങൾ അല്ലെങ്കിൽ സിമന്റീഷ്യസ് ഹൈഡ്രേഷൻ ഉൽപ്പന്നങ്ങളുമായി ക്ലോറിഡ് പ്രതിപ്രവർത്തനം. ', 'സിസ്റ്റം വികസനത്തിന് കാരണമാകില്ല. ', 'ഉത്പന്നങ്ങളുടെ തരം യഥാർത്ഥത്തിൽ വികസനം കാരണമാകുന്നില്ല എങ്കിലും പ്രതികരണത്തിന്റെ തരം. ', 'വളരെ സമാനമാണ്. ', 'സൾഫേറ്റ് പ്രതികരണം ഓർക്കുക. ', 'ഇവിടെ C3A+ ക്ലോറിഡ് ഉണ്ട്, അത് ക്ലോറൊഅലുമിനേറ്റ് രൂപീകരണത്തിന് കാരണമാകും. ', 'C3A പ്ലസ് സൾഫേറ്റ് കാൽസ്യം സൾഫുലുമിനേറ്റ് രൂപീകരണത്തിന് കാരണമാകുന്നു. ', 'C3A + ക്ലോറിഡ് കാൽസ്യം ക്ലോറൊ അല് മിനേറ്റ് രൂപീകരിക്കും. ', 'ഫ്രൈഡലിന്റെ ഉപ്പ്, കാൽസ്യം, ക്ലോറൊഅലുമിനേറ്റ് എന്നിവയാണ് ഇതിന്റെ സാധാരണ രൂപങ്ങളിലൊന്ന്. ', 'കാൽസ്യം ക്ലോറോ അല്യുമിനേറ്റ് അടിസ്ഥാനപരമായി എട്രിംഗിറ്റ് രൂപീകരണത്തിന് സമാനമായ ഒരു രൂപീകരണമാണ്, ', 'സൾഫാറ്റിന് പകരം സിസ്റ്റത്തിൽ ക്ലോറൈഡ് ഉണ്ടെന്ന് മനസ്സിലാക്കുക. ഇത് ഗുണകരമാണ്. ', 'കാരണം നിങ്ങൾ ഒരു വികസനമില്ലാത്ത ഉൽപ്പന്നം രൂപപ്പെടുത്തുക മാത്രമല്ല, നിങ്ങൾ ഒരു കെണിയിൽ. ', 'നിങ്ങളുടെ ബെറ്റിന് റെ ഉള്ളില് കയറിയ ചില ക്ലോറിഡുകള്. ', 'നിങ്ങളുടെ ബെറ്റണിന് റെ ഉള്ളില് കയറുന്ന ക്ലോറിഡ് ആക്രമണത്തിന് റെ സൌജന്യ അവസ്ഥയില് ആയിരിക്കണം. ', 'ഉരുക്ക് ഉപരിതലത്തിൽ. ', 'ക്ലോറൈഡുകൾ സിമന്റ് ബന്ധിപ്പിക്കുന്നതുകൊണ്ട് നിങ്ങൾ അളവ് കുറയ്ക്കുന്നു. ', 'ചൊറൊസിനു കാരണമാകുന്ന ക്ലോറൈഡുകൾ. ', 'അതിനാൽ C3A ന്റെ സഹായത്തോടെ ക്ലോറൈഡ് ബന്ധിപ്പിക്കുന്നത്. ', 'ക്ലോറൈഡ് പരിഹാരങ്ങളും ഈ ബന്ധിപ്പിക്കുന്ന സംവിധാനവും നിങ്ങൾ പകരം വയ്ക്കുന്നുവെങ്കിൽ മെച്ചപ്പെടുത്താം. ', 'അല് മിനാ റ്റുകള് അടങ്ങിയിരിക്കുന്ന ധാതു ചേര് ണങ്ങളുള്ള സിമന്റിന്. ', 'ഉദാഹരണത്തിന്, കളിമണ്ണ്, നിങ്ങൾക്ക് സ്ലഗ് ഉണ്ട്, ഇവ സിസ്റ്റത്തിലേക്ക് ധാരാളം അലുമിനേറ്റ് സംഭാവന. ചെയ്യുന്നു. ', 'ഈ അലുമിനേറ്റുകൾ ക്ലോറൈഡ് അയോണുകളെ ഒരു വികസനമില്ലാത്ത ഉൽപ്പന്നമായി ബന്ധിപ്പിക്കും. ', 'അവസാനമായി, സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമ. ', 'ക്ലോറൈഡ് ആക്രമണത്തിൽ പ്രകടനം. ', 'സൾഫേറ്റ് ആക്രമണത്തില്, ഞങ്ങൾ സംസാരിച്ചത് താഴ്ന്ന സി 3 എയെക്കുറിച്ചാണ്. ', 'ക്ലോറൈഡ് ആക്രമണത്തില്, അത് വിപരീതമാണ്. ', 'നമുക്ക് ഉയർന്ന സിമന്റ് ആവശ്യമുണ്ട്. ', 'ചൊറൊസിനു പ്രതിരോധം. ', 'അതുകൊണ്ട് നാശന പ്രതിരോധം മെച്ചപ്പെടുത്തുന്നു, പ്രതിരോധം അല്ല. ', 'അതുകൊണ്ട് ഞാൻ നിങ്ങളെ മഗ്നീഷ്യം ക്ലോറൈഡ് ആക്രമണത്തിന്റെ ചില ചിത്രങ്ങൾ കാണിച്ചു തരാം. ', 'അതുകൊണ്ട് മഗ്നീഷ്യം അയൺ ഈ കേസിൽ പങ്കാളിയാണ്. ', 'അതിനാൽ നിങ്ങൾ യഥാർത്ഥത്തിൽ ഈ ഉപരിതലത്തിൽ ബ്രൂസൈറ്റ് എന്ന് വിളിക്കുന്ന ഒരു പാളി രൂപപ്പെടാൻ നയിക്കും. ', 'അല്ലെങ്കിൽ മഗ്നീഷ്യം ഹൈഡ്രോക്സൈഡ്. ', 'ഫ്രിഡെലിന്റെ ഉപ്പിന്റെ രൂപീകരണത്തിന് തെളിവുകളും ഉണ്ട്. ', 'കല് സിയം ക്ലോറോ അല് മിനേറ്റ് ആണ്. ', 'ചിലപ്പോഴൊക്കെ സി. എസ്. എച്ച്. യുമായി കലർന്ന അവസ്ഥയിലാണ് ഇത് രൂപപ്പെടുന്നത്. ', 'അതുകൊണ്ട് ക്ലോറൊഅലുമിനേറ്റ് നേരിട്ട് ഒറ്റ നിക്ഷേപമായി കണ്ടെത്താൻ സാധിക്കില്ല. ', 'ചിലപ്പോള് അത് സി. എസ്. എച്ച്. യുമായി കലര് ന്നുപോകും. ', 'രസകരമെന്നു പറയട്ടെ, ക്ലോറൈഡ് ആക്രമണത്തിന് നിങ്ങളുടെ സേവനത്തിന്റെ ദ്രാവകത വർദ്ധിപ്പിക്കാനാകും. ', 'കാരണം, നിങ്ങളുടെ കല് സിം ഹൈഡ്രോക്സൈഡ് വീണ്ടും പുറത്തുവരുന്നു. ', 'അതിനാൽ നിങ്ങൾ ഒരു ഖര ഉൽപ്പന്നം നീക്കം ചെയ്യുകയും ഉള്ളിൽ ഒരു പൊറസ് ഉണ്ടാക്കുകയും ചെയ്യുന്നു. ', 'കാരണം നിങ്ങളുടെ മറ്റു ഉൽപ്പന്നങ്ങളുടെ നിക്ഷേപം അത്രയല്ല. ', 'നിങ്ങളുടെ മിക്ക ഉൽപ്പന്നങ്ങളും പരിഹരിക്കാവുന്നവയാണ്. ', 'ഉദാഹരണത്തിന്, നിങ്ങളുടെ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ക്ലോറൈഡുമായി പ്രതിപ്രവർത്തനം ചെയ്താൽ, അത് എന്ത് രൂപം കൊള്ളും? ', 'വളരെ ലയിക്കുന്ന കാൽസ്യം ക്ലോറൈഡ് സിസ്റ്റത്തിൽ നിന്നും നീക്കം ചെയ്യപ്പെടുന്നു. ', 'മറ്റൊരു കേസിൽ, സൾഫേറ്റ് ആക്രമണം, കാൽസ്യം ഹൈഡ്രോക്സൈഡ് സൾഫേറ്റ് പ്രതികരിക്കുകയും. ', 'ജിപ്സും ജിപ്സും എളുപ്പത്തിൽ ലയിക്കാന് സാധിച്ചില്ല. ', 'അത് സിസ്റ്റത്തിൽ തുടരുകയും നിക്ഷേപമായി കാണപ്പെടുകയും ചെയ്തു. ', 'ഇവിടെ നിങ്ങൾ ഒരു വർദ്ധനവ് കാരണമാകുന്നു പൊറസ്സിറ്റി നെഗറ്റീവ് ഒന്നാണ്. ', 'ക്ലോറൈഡ് ആക്രമണത്തിന്റെ ഫലങ്ങൾ. ', 'എന്നാൽ മഗ്നീഷ്യം ക്ലോറൈഡ് ആക്രമണത്തിന് പുറമെ, പൊറസ്യം വർദ്ധിപ്പിക്കുന്നതിനു പുറമേ, ', 'ഉപരിതലത്തിന്റെ മാറ്റവും സിഎസ്എച്ചിന്റെ മഗ്നീഷ്യം സിലിക്കേറ്റ് ഹൈഡ്രേറ്റായി പരിവർത്തനം ചെയ്യലും. ', 'അത് ഇപ്പോഴും സിസ്റ്റത്തിൽ. സംഭവിക്കാം. ', 'സി. എസ്. എച്ച്. യിൽ നിന്ന് കല് സി്യം നീക്കം ചെയ്യുന്ന ഏത് സിസ്റ്റത്തിലും ഇത് സംഭവിക്കുമെന്ന് ഓർക്കുക. ', 'ഇവിടെ മഗ്നീഷ്യം സി. എസ്. എച്ച്. യിൽ നിന്നും കാൽസ്യം നീക്കം ചെയ്യും. ', 'നിങ്ങൾക്ക് ഒരു ആസിഡ് ഉണ്ടെങ്കിൽ, നമുക്ക് പറയാം, നിങ്ങൾക്ക് ഹൈഡ്രോക്ലോറിക് ആസിഡ് ഉണ്ടെങ്കിൽ, ആസിഡ് അവസ്ഥകൾ. ', 'സി. എസ്. എച്ച്. യിൽ നിന്നും കാൽസ്യം നീക്കം ചെയ്യുക. ', 'അപ്പോള് പോലും അത് സിലിക്ക ഹൈഡ്രേറ്റ് ഉണ്ടാക്കും. ', 'ഇത് ഏതെങ്കിലും മെറ്റൽ അടിസ്ഥാനത്തിലുള്ള സിലിക്കേറ്റ് ഹൈഡ്രേറ്റ് ഉണ്ടാക്കില്ല. ', 'ഇവിടെ മഗ്നീഷ്യം ഉണ്ടായാല് മഗ്നീഷ്യം സിലിക്കേറ്റ് ഹൈഡ്രേറ്റ് രൂപീകരിക്കും. ', 'അസിഡ് ആക്രമണത്തെ കുറിച്ച് നമുക്ക് വേഗം സംസാരിക്കാം. ', 'അസിഡ് ആക്രമണം പ്രധാനമായും മലിനജലമുള്ള പൈപ്പുകളിലെ പ്രശ്നമാണ്. ', 'മലിനജലം കൊണ്ടുപോകുന്ന കോൺക്രീറ്റ് പൈപ്പുകൾ ആസിഡ് ആക്രമണത്തിന് വിധേയമാണ്. ', 'ചില വ്യവസായ മലിനജലങ്ങളിൽ പോലും ചിലപ്പോൾ ആസിഡ് രൂപപ്പെടാം. ', 'ആസിഡുകൾ എവിടെ കണ്ടെത്താമെന്നതിന്റെ ചില ഉദാഹരണങ്ങൾ ഞാൻ കാണിച്ചുതരാം. ', 'കനൽ പൈപ്പുകളെക്കുറിച്ച് സംസാരിക്കുമ്പോൾ സാധാരണ പ്രശ്നം സൾഫറിന്റെ രൂപീകരണവുമായി ബന്ധപ്പെട്ടതാണ്. ', 'ആസിഡ്, സൾഫുറിക് ആസിഡ്, സൾഫേറ്റ്, ആസിഡ് അവസ്ഥ എന്നിവ ഉണ്ടാകും. ', 'അതുകൊണ്ട് ഇത് അടിസ്ഥാനപരമായി ജിപ്സസ് രൂപീകരണത്തിന് കാരണമാകും. ', 'എത്രിന്ജിറ്റ് രൂപം കൊള്ളുമോ? ', 'ഉപരിതലത്തിന് സമീപമുള്ള മേഖലകളില് അല്ല. ', 'ആസിഡ് ഉള്ളിടത്ത് എത്രിന് ഗിറ്റ് രൂപപ്പെടുകയില്ല. ', 'അതിനാൽ എത്രിന്ജിറ്റ് താഴ്ന്ന പിഎച്ചിൽ സ്ഥിരതയുള്ളതല്ല. ', 'ഉപരിതല മേഖലകളിലെ എട്രിംഗിറ്റിന്റെ. ', 'നിങ്ങൾ സൾഫേറ്റ് കടന്നിരിക്കാം എന്ന് കരുതുന്ന ഒരു പ്രോട്ടോടൈപ്പിൽ പ്രവേശിച്ചാൽ. ', 'എത്രിന് ഗിറ്റ് രൂപീകരണം ഇപ്പോഴും കാണാനാകുമെന്ന് കരുതുന്നു. ', 'അതുകൊണ്ട് ഗിപ്സസ് രൂപീകരണം സൾഫുറിക് ആസിഡ് ആക്രമണത്തിൽ സാധാരണമായ ഒരു പ്രതിഭാസമാണ്. ', 'ഇതില് നിന്ന് ജൈപ്സത്തിന്റെ രൂപീകരണം മൂലം ശക്തി നഷ്ടപ്പെടുകയും ഏറ്റവും പ്രധാനമായി നഷ്ടപ്പെടുകയും. ചെയ്യുന്നു. ', 'സിമന്റിറ്റിസ് സ്വഭാവമുള്ളതാണ്, കാരണം നിങ്ങളുടെ പിഎച്ച് കുറവാണ്, അത് നിങ്ങളുടെ സി. എസ്. എച്ച്. ', 'സൾഫുറിക് ആസിഡ് എന്നത് ബെറ്റണിന് കേടുപാടുകൾ വരുത്തുന്ന ഒരു തരം ആസിഡ് മാത്രമാണ്. ', 'മറ്റു പല സന്ദർഭങ്ങളിലും ഇത് സംഭവിക്കാം. ', 'വ്യവസായ ഉല് പ്പാദനത്തില് പലപ്പോഴും സൾഫുറിക് ആസിഡ്, നൈട്രിക് ആസിഡ്, ഹൈഡ്രോക്ലോറിക് ആസിഡ് എന്നിവ ഉപയോഗിക്കുന്നു. ', 'അതുകൊണ്ട് ഇവയെല്ലാം രൂപപ്പെടാം അല്ലെങ്കിൽ ഇവയെല്ലാം ഉപയോഗിക്കുന്ന കോൺക്രീറ്റ് ഘടനകളെ കേടുവരുത്താം. ', 'ചില ഘടനകൾ. ', 'കോണ്ക്രീറ്റ് കനാലുകൾ എന്നത് സൾഫുറിക് ആസിഡ് ആക്രമണം നടക്കുന്ന ഒരു പരിസ്ഥിതി ആണ്. ', 'ബാക്ടീരിയകളുടെ പ്രവർത്തനത്തെത്തുടർന്ന് ഇത് സൂക്ഷ്മാണുക്കളുടെ പ്രവർത്തനമാണ്. ', 'ഒരു മിനിറ്റിന് ശേഷം അതിനെക്കുറിച്ച് സംസാരിക്കാം. ', 'വ്യവസായ മാലിന്യങ്ങൾ പലപ്പോഴും ആസിഡ് സ്ട്രെയിനുകൾ വഹിച്ചേക്കാം. ', 'ഉദാഹരണത്തിന്, ബെറ്റോണിന്റെ വശങ്ങളില്. ', 'രസകരമെന്നു പറയട്ടെ, ജൈവ സ്രോതസ്സുകളിൽ നിന്നും ഉത്പാദിപ്പിക്കപ്പെടുന്ന ധാരാളം ആസിഡുകൾ ഉണ്ട്. ', 'അതിനാൽ കന്നുകാലി കൃഷിയിടങ്ങളിൽ സിലേജ് ഉത്പാദനം നടത്തുക, കന്നുകാലി കൃഷിയിടങ്ങളിൽ ധാരാളം ഓർഗാനിക് ഉത്പാദനം നടത്തുക. ', 'ലാക്റ്റിക് ആസിഡ്, ഓക്സാലിക് ആസിഡ് തുടങ്ങിയവ ഉത്പാദിപ്പിക്കാവുന്നതാണ്. ', 'മലിനജല സംസ്കരണ പ്ലാന്റുകൾ ആസിഡ് ഉത്പാദനം നടക്കുന്ന മറ്റു സ്ഥലങ്ങളാണ്. ', 'സിസ്റ്റത്തില്. ', 'ആസിഡ് ആക്രമണം എന്താണ്? ', 'നിങ്ങളുടെ പ്രാഥമിക പ്രതികരണം ലളിതമായി ഒരു ക്ലാസിക് ആസിഡ് അടിസ്ഥാനമാക്കിയുള്ള പ്രതികരണം ആണ്, കാരണം നിങ്ങൾക്ക് ആസിഡ് ഉണ്ട്. ', 'പുറം പരിസ്ഥിതിയിൽ നിന്നും നിങ്ങളുടെ കാൽസ്യം, ഹൈഡ്രോക്സൈഡും മറ്റ് അടിസ്ഥാന പദാർത്ഥങ്ങളും. ', 'സിമന്റ് ഹൈഡ്രേഷൻ ഉൽപ്പന്നങ്ങളുടെ ഉള്ളിൽ കാണപ്പെടുന്നു. ', 'അതിനാൽ, സിമന്റ് മാട്രിക്സ് മൈക്രോസ്ട്രക്ചറിന്റെ തകർച്ചയിലേക്ക് നിങ്ങൾ നയിക്കുന്നു. ', 'ഉപ്പുകളുടെ രൂപീകരണം. ', 'ചില ഉപ്പുകള് ലയിക്കുന്നതും ചിലത് ലയിക്കാത്തതും ആണ്. ', 'അതിനാൽ, നിങ്ങൾക്ക് ഉപ്പുകൾ ഉണ്ടെങ്കിൽ, നിങ്ങളുടെ പൊറസ്സിറ്റി വർധിക്കും. ', 'അസംസ്കൃതമായ ഉപ്പുകൾ ഉണ്ടെങ്കിൽ അവയുടെ അസംസ്കൃതതയും വികാസവും ഉണ്ടാകാം. ', 'ഈ ഉപ്പുകള് സിസ്റ്റത്തില്. ', 'അസിഡ് ആക്രമണത്തിൽ എന്ത് സംഭവിക്കും? ', 'അതായത്, ഈ ഉൽപ്പന്നങ്ങൾ ഹൈഡ്രേറ്റേഷൻ ഉൽപ്പന്നങ്ങളാണ്. പുറത്ത് ആസിഡ് പരിഹാരം ഉണ്ട്. ', 'ആസിഡിന്റെയും പ്രോട്ടോണിന്റെയും ആനിഒണുകൾ ഉണ്ട്. ', 'കല് സി യം വഹിക്കുന്ന ജീവികളുടെ പുറകോട്ട് നീക്കം ഉണ്ടായിരിക്കുമ്പോൾ സിലിക്കോൺ. ', 'അലോമിനിയവും നിങ്ങളുടെ ഹൈഡ്രോക്സില് ഐണുകളും. ', 'പുറംഭാഗത്ത് നിന്ന് പുറത്ത് വരെയുള്ള ഇടപെടലിലൂടെയാണ് ഈ മേഖല രൂപപ്പെടുന്നത്. ', 'സ്പീഷീസ്, അകത്തേക്ക് നീങ്ങുന്ന സ്പീഷീസ്. ', 'ഈ മേഖല അടിസ്ഥാനപരമായി ആസിഡ് അല്ലെങ്കിൽ വസ്തുക്കളുടെ തരം ആണ്. ', 'പ്രതികരണ സംവിധാനമാണ്. ', 'പിന്നെ നിങ്ങളുടെ ഹൈഡ്രേറ്റഡ് ഉൽപ്പന്നങ്ങള് ക്ക് എന്ത് സംഭവിക്കും? ', 'അവസാനം, നിങ്ങൾക്ക് മാസ് നഷ്ടപ്പെടും, സാമ്പിളിന്റെ സമഗ്രത നഷ്ടപ്പെടും, ആൽക്കലിനെ നഷ്ടപ്പെടും. ', 'ഫലമായി ഇലാസ്റ്റിക് മോഡ്യൂളിലെ കരുത്ത് കുറയുന്നു, ', 'അര് ഹതത വർദ്ധിപ്പിക്കുകയും ഒടുവിൽ പിഎച്ച് കുറവ്. ', 'ആസിഡ് ആക്രമണം സാധാരണയായി ആസിഡ് ആക്രമണം ആസിഡ് ആയുധം ശക്തിപ്പെടുത്തുന്നതിനു കാരണമാകും. ', 'ഇപ്പോൾ കൂടുതൽ വ്യക്തമായി പറഞ്ഞാൽ, കോൺക്രീറ്റ് കനാലുകളിലെ ആസിഡ് ആക്രമണം നോക്കിയാൽ, അത് വളരെ രസകരമാണ്. ', 'നിങ്ങളുടെ മലിനജല പൈപ്പിന്റെ താഴത്തെ പകുതിയിൽ സാധാരണയായി കൊണ്ടുപോകുന്ന മലിനജലമുള്ളതിനാൽ നിങ്ങൾക്ക് ഒരു പ്രശ്നമുണ്ട്. ', 'മലിനജലത്തിനകത്ത് അനേറോബിക് ബാക്ടീരിയകളോ സൾഫേറ്റ് കുറയ്ക്കുന്ന ബാക്ടീരിയകളോ ഉണ്ട്. ', 'ഹൈഡ്രജൻ സൾഫേറ്റ് ഗ്യാസ് ഉത്പാദനം. ', 'ഈ ഗ്യാസ് മുകളിലേക്ക് ഉയരുന്നു, അത് പ്രവർത്തിക്കുന്ന പൈപ്പിന്റെ മുകളിലെ തലത്തിൽ കഠിനമായി കത്തിക്കുന്നു. ', 'സൾഫർ ഓക്സിഡൈസ് ചെയ്യുന്ന ബാക്ടീരിയകളോ എയ്റോബിക് ബാക്ടീരിയകളോ ഉപയോഗിച്ച് ഈ എയ്റോബിക് ബാക്ടീരിയകൾ. ', 'പുറത്ത് നിന്ന് സൾഫുറിക് ആസിഡ് ഉത്പാദിപ്പിക്കുന്നത്. ', 'അതിനാൽ നിങ്ങളുടെ പൈപ്പുകളുടെ കിരീടത്തിൽ ആസിഡ് അവസ്ഥ സൃഷ്ടിക്കുന്നു. ', 'പൈപ്പിന്റെ ഭാഗം കേടുപാടുകൾക്ക് വിധേയമായിരിക്കാം. ', 'അതിനാൽ, നിങ്ങൾ അടിസ്ഥാനപരമായി സിമന്റിസസ് വസ്തുക്കൾ നോക്കിയാൽ ആക്രമിച്ചു. ', 'നിങ്ങളുടെ ജൈവപരമായി ഉളവാക്കിയ സൾഫുറിക് ആസിഡ് ആക്രമണം, നിങ്ങൾ ഉപരിതലത്തിൽ ഉണ്ടാകും ഒരു. ചെറിയ. ', 'ബാക്ടീരിയയുടെ പ്രവർത്തനത്തെത്തുടർന്ന് രൂപപ്പെടുന്ന ബയോഫിലിം, ', 'നിങ്ങളുടെ സാമ്പിളിലെ ഒരു ആഴത്തിൽ ജിപ്സം രൂപപ്പെടുക. ', 'ഈ ജിപ്സസ് രൂപീകരണം സൾഫുറിക് ആസിഡ് ആക്രമണത്തിന്റെ ഫലമാണ്. ', 'ഉള്ളില് ഇരിക്കുന്ന സിമന്റിറ്റി വസ്തു. ', 'കാലക്രമേണ, നിങ്ങളുടെ സിമന്റിറ്റിയസ് സ്വഭാവം നഷ്ടപ്പെടും. ', 'ഉയർന്ന ആസിഡ് സാന്ദ്രതയും pH കുറയുകയും ചെയ്താൽ. ', 'നിങ്ങളുടെ സിമന്റിസസ് ഘട്ടങ്ങളുടെ വിഘടിപ്പനം. ', 'ഇത് വീണ്ടും ഒരു കനാലിന്റെ ചിത്രമാണ്. വലതുഭാഗത്ത് നിങ്ങൾക്ക് മിക്കവാറും എല്ലാ. ', 'അല്ലെങ്കിൽ ബലികേന്ദ്രീകരണത്തിനു ചുറ്റുമുള്ള മിക്കവാറും എല്ലാ കോൺക്രീറ്റുകളും നീക്കം ചെയ്യപ്പെടുന്നു. ', 'ബലപ്പെടുത്തൽ കരിങ്കുഴലായി കാണാനാവുന്നില്ല. ബെറ്റണിന്റെ മുഴുവൻ ഭാഗവും. പൂർണമായി. ', 'നീക്കം ചെയ്തു. ', 'ഇവിടെ വീണ്ടും ഒരു ചിത്രം മ്യൂറിയാറ്റിക് ആസിഡ് ആക്രമണത്തിൽ നിന്ന്. ', 'ഒരു വ്യവസായത്തിൽ നിന്നും വന്ന ആസിഡ്, ഇവിടെ ആസിഡ് ആക്രമണത്തിന്റെ തെളിവ് വ്യക്തമായി കാണാം, കാരണം. ', 'എല്ലാ സംയുക്തങ്ങളും അവശേഷിക്കുന്നു. ', 'ഇവ സിലിസിയസ് അഗ്രഗേറ്റാണ് അവ അവശേഷിക്കുന്നു പാസ്റ്റു പൂർണമായും. ', 'ആസിഡില് നിന്നും പിരിച്ചുവിടപ്പെട്ട്. ', 'സിലിസിയസ് ആയ ആഗ്രേറ്റിന് നേരിട്ട് ആസിഡ് ആക്രമണം നടത്താറില്ല. ', 'അസിഡ് ആക്രമണത്തിനെതിരെ സംരക്ഷണ സംവിധാനം പറയാമോ? ', 'നമ്മൾ സിലിസിയസ് അഗ്രേറ്റിനെ കാർബണേറ്റ് അഗ്രേറ്റുമായി മാറ്റിസ്ഥാപിച്ചാൽ എന്ത് സംഭവിക്കും? ', 'അസിഡിന് റെ ഫലമായി അഗ്രഗേറ്റുകളും കേടായിപ്പോകും. പക്ഷേ അത് നല്ല കാര്യമാണ്. ', 'സമാനമായി കേടുപാടുകൾ സംഭവിക്കുന്ന സംയുക്തവും പേസും. ', 'അങ്ങനെ നിങ്ങളുടെ ബെറ്റണിന്റെ ക്രോസ് സെക്ഷന്റെ ഏകീകൃത നഷ്ടം ഉണ്ടാകും. ', 'അഗ്രഗേറ്റുകൾ ചേർക്കുമ്പോൾ പേസ്റ്റ് പൂർണമായും പിരിച്ചുവിടുകയും അഗ്രഗേറ്റുകൾ ചിതറുകയും. ചെയ്യുന്നു. ', 'അതുകൊണ്ട് സിസ്റ്റത്തിൽ ഒരു ബന്ധനവും ഇല്ല. ', 'പലപ്പോഴും ആളുകൾ ഉപയോഗിക്കുന്നത് സിലിസിയസ് ആഗ്രേറ്റുകളേക്കാൾ കല്മണ് അഗ്രേറ്റുകളാണ്. ', 'അരി കല് പവും അസിഡ് പരിഹാരത്തിൽ പതുക്കെ നശിപ്പിക്കപ്പെടുന്നു. ', 'അതുകൊണ്ട് കല് പമണിയുടെ സംയുക്തം ഉപയോഗിക്കുന്നത് സൾഫുറിക് ആസിഡ് എക്സ്പോഷർ കുറയ്ക്കുന്നതിനുള്ള നല്ലൊരു മാർഗമാണ്. ', 'അല്ലെങ്കിൽ ഏതെങ്കിലും ആസിഡ് എക്സ്പോഷർ. ', 'ഇതുകൂടാതെ, കാൽസ്യം അല് മിനേറ്റ് സിമന്റ് പോലുള്ള പ്രത്യേക സിമന്റ് ഉപയോഗിക്കാം. ', 'ആസിഡ് ആക്രമണത്തിന് റെ വളരെ ഉയർന്ന പ്രതിരോധം. ', 'വീണ്ടും ഇത് നമുക്ക് വേണ്ടാത്ത വിവിധ ഘട്ടങ്ങളുടെ വിവരണം നൽകുന്നു. ', 'ഇത് കൂടുതൽ വിശദമായി നോക്കൂ. ', 'കെമിക്കൽ സൾഫുറിക് ആസിഡ് ആക്രമണവും ജൈവ ഉത്പാദനവും തമ്മിൽ വ്യത്യാസമുണ്ട്. ', 'സൾഫുറിക് ആസിഡ് ആക്രമണം. ', 'വീണ്ടും, സിസ്റ്റത്തിൽ നിങ്ങൾ രൂപപ്പെടുത്തുന്ന ഉൽപ്പന്നങ്ങളുടെ തരം, ', 'നിങ്ങളുടെ സൂക്ഷ്മഘടന തികച്ചും വ്യത്യസ്തമായിരിക്കാം. ', 'അതുകൊണ്ട് ഈ കേസിൽ കൂടുതൽ ചർച്ചയ്ക്കായി അല്ല, നിങ്ങളുടെ വിവരത്തിനു വേണ്ടിയാണ് ഞാൻ ഇത് നൽകുന്നത്. ', 'അങ്ങനെ മലിനജല ശൃംഖലകൾ സിമന്റീഷ്യൻ വസ്തുക്കൾക്ക് വളരെ ആക്രമണാത്മകമായ ഒരു പരിസ്ഥിതി നൽകുന്നു. ', 'നന്ദി. ', 'നന്ദി.']
2024-02-23 12:37:20,762 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: local variable 'firstLet' referenced before assignment. Input text: ['ഇന്ന് നാം സൾഫേറ്റ് ആക്രമണത്തെക്കുറിച്ചുള്ള ചർച്ച പുനരാരംഭിക്കും. ', 'കഴിഞ്ഞ ക്ലാസിൽ, സൾഫേറ്റുകൾ സിമന്റീഷ്യസ് സിസ്റ്റത്തിലേക്ക് എങ്ങനെ? കടക്കുന്നു, ', 'സിമന്റ് ഫാസുകൾ ജലാംശം വച്ച് ഉപരിതലത്തിൽ നിന്ന് വ്യത്യസ്ത തരം സംയുക്തങ്ങൾ രൂപപ്പെടുത്തുന്നു. ', 'അകത്തേക്കു പോകുക. ', 'എത്രിന് ഗൈറ്റ് രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുമോ എന്നതിനെക്കുറിച്ച് നമുക്ക് അല്പം സംസാരിക്കാം. ', 'തീർച്ചയായും, എത്രിന്ജിറ്റിന് വികസനത്തിന് സാധ്യതയുള്ള ഒരു ഘടനയുണ്ടെന്ന് നമുക്കറിയാം. ', 'ഈര് ന്നം കുടിച്ചുകൊണ്ട് പ്രധാനമായും ഈര് ന്നം വലിച്ചെടുക്കുന്നതിലൂടെയാണ് ഈര് ന്നം വലിച്ചെടുക്കുന്നത്. ', 'അത് തകര് ക്കാന് കാരണമാകുന്ന ഒരു പരിസ്ഥിതി, ശരിയാണ്. ', 'എന്നാൽ നേരിട്ടുള്ള തെളിവ് എന്താണെന്നും എത്രിന്ജിറ്റിന്. ', 'ബെറ്റിന് റെ സിസ്റ്റം വിപുലീകരിക്കാന് കാരണമാകുന്നു. ', 'പ്രഥമ എത്രിന്ജിറ്റ് പ്രക്രിയയുടെ ആദ്യഘട്ടത്തിൽ രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റാണ് എന്ന് നമുക്കറിയാം. ', 'സിമന്റ് ഹൈഡ്രേഷനിൽ, സിമന്റ് അല് മിനേറ്റുകൾ പോലുള്ള ഘട്ടങ്ങൾ. ', 'സിമന്റിന് ചേര് ന്ന സൾഫേറ്റ്, ആദ്യകാല എട്രിംഗിറ്റും ഈ ആദ്യകാല എട്രിംഗിറ്റും. ', 'പിന്നീട് മോണോ സൾഫേറ്റായി മാറുന്നു, കാരണം സിസ്റ്റത്തിൽ അമിതമായ അല് മിനേറ്റ് ഉണ്ട്. ', 'ഇപ്പോൾ പ്രാഥമിക എത്രിന്ജിറ്റ് രൂപീകരണത്തിന്റെ തെളിവുകളും ഉണ്ട്. അത് സിമന്റുകളിൽ സംഭവിക്കുന്നു. ', 'സൾഫേറ്റ് കൂടുതലുള്ള സ്ഥലത്ത്. ', 'അതായത്, നീ വളരെ ദീർഘകാലം എത്രിന്ജിറ്റ് നിക്ഷേപിക്കുന്നത് തുടരുന്നു. ', 'ശരി, ശരി. ', 'ഇത് സംഭവിക്കുന്നത് സൾഫാറ്റിന്റെ ആന്തരിക സ്രോതസ്സുകളാണ്. ', 'ബാഹ്യ എത്രിന്ജിറ്റ് എന്നത് ബാഹ്യ പരിസ്ഥിതികളിൽ നിന്ന് വരുന്ന സൾഫേറ്റുകൾ ഉണ്ടാകുമ്പോൾ. ', 'സൾഫാറ്റിന്റെ അകലം പുറത്ത് നിന്ന്. ', 'ഇതിനു പുറമെ, വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണം നാം വിളിക്കാം. ', 'ആന്തരികമായി അടിച്ചമർത്തപ്പെട്ട എത്രിന്ജിറ്റിന്റെ രൂപീകരണം, അത് പിന്നീട് വളരുന്നു. ', 'ഇതിനർത്ഥം ചില കാരണങ്ങളാൽ ആദ്യഘട്ടങ്ങളിൽ എട്രിംഗിറ്റ് രൂപപ്പെടുന്നില്ലെന്നും. ', 'ചില ഘടകങ്ങളുടെ കൂട്ടായ്മ അതിനെ കഠിനമായ അവസ്ഥയില് രൂപീകരിക്കാൻ കാരണമായി. ', 'വ്യക്തമായും, കഠിനമായ ബെറ്റണിന്റെ ഉള്ളിൽ ഒരു വിപുലമായ വസ്തു രൂപം കൊള്ളുമ്പോൾ. ', 'നിങ്ങൾക്കു് ഇതിലൂടെ വലിയ നാശനഷ്ടങ്ങൾ ഉണ്ടാകുന്നു. ഇത് ഡിഎഫ് അല്ലെങ്കിൽ വൈകിയ എട്രിംഗിറ്റ് എന്നും അറിയപ്പെടുന്നു. ', 'രൂപീകരണം, ശരി. ', 'ഇത് വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണത്തിന് വേണ്ടി ഉപയോഗിക്കുന്ന പൊതുവായ ഒരു പദാവലി ആണ്. ', 'പൊതുവേ പറഞ്ഞാൽ, സൾഫേറ്റ് ആക്രമണ പ്രക്രിയ ഏതൊരു വൈകി എത്രിന്ജിറ്റ് രൂപീകരണം നയിക്കുന്നു. ', 'കഠിനമായ ഘട്ടങ്ങള്. ', 'അതുകൊണ്ട് എത്രിന്ജിറ്റിന്റെ രൂപീകരണം ഒരു സെക്കൻഡറി എത്രിന്ജിറ്റിന്റെ രൂപീകരണം ആണ്. ', 'അതായത്, സാധാരണമായ ഘടകങ്ങളാൽ രൂപപ്പെടുന്ന പ്രാഥമിക എത്രിന്ജിറ്റിൽ നിന്നും നാം അതിനെ വേർതിരിക്കുന്നു. ', 'സിമന്റിന്. ജലാംശം, ശരി. ', 'ഇപ്പോൾ നിങ്ങൾ നോക്കിയാൽ ഉത്പാദനം കാരണം രൂപം കൊണ്ട ക്രിസ്റ്റലിൻ വസ്തുക്കളുടെ തരം. ', 'എത്രിന്ജിറ്റിന്റെ എത്രിന്ജിറ്റിന് നഖം രൂപം കിട്ടുന്നു. ', 'അങ്ങനെ എത്രിന്ജിറ്റ് നീണ്ട അളവിലുള്ള സൂചികളെ പോലെ രൂപപ്പെടുന്നു. ', 'എത്രിന്ജിറ്റിന്റെ നീളവും കനം അനുപാതവും ചുറ്റുമുള്ള പരിസ്ഥിതിയുടെ പിഎച്ചിനെ ആശ്രയിച്ചിരിക്കുന്നു. ', 'ഇപ്പോൾ കാണുന്നത് വളരെ ഉയർന്ന പിഎച്ച് ഉള്ളപ്പോൾ നമ്മൾ വളരെ. ', 'എത്രിന്ജിറ്റിന്റെ നീണ്ട സൂചികൾ. ', 'നമ്മൾ കുറച്ചുകൂടി ചെറിയ എത്രിന്ജിറ്റ് ക്രിസ്റ്റലുകൾ രൂപീകരിക്കുന്നു, ശരി. ', 'പക്ഷെ 12 നും 10 നും ഇടയിൽ നമ്മൾ എത്രിന്ജിറ്റ് സൂചികൾ രൂപീകരിക്കുന്നു. ', 'വളരെ ഉയർന്ന നീളമുള്ളവ. ', 'സിമന്റ് ഹൈഡ്രേറ്റേഷന്റെ ആദ്യഘട്ടങ്ങളിൽ നിങ്ങൾ. ', 'ഈ മൈക്രോക്രിസ്റ്റാലിൻ എത്രിംഗൈറ്റ് ദൈർഘ്യം വളരെ ചെറുതാണ്, ', 'വ്യാസം അല്ലെങ്കിൽ ദൈർഘ്യം കനം അനുപാതം വളരെ ചെറുതാണ്. ', 'എന്നാൽ എത്രിന്ജിറ്റ് വികസിക്കുമ്പോൾ, നിങ്ങൾക്ക് ഒരു സാഹചര്യത്തെക്കുറിച്ച് ചിന്തിക്കാം. ', 'സൾഫേറ്റ് ആക്രമണം, ഈർപ്പം ആഗിരണം ചെയ്യപ്പെടുന്ന ഒരു എത്രിന്ജിറ്റ് വികാസം, എത്രിന്ജിറ്റ് യഥാർത്ഥത്തിൽ. ', 'ഉയർന്ന നീളത്തിൽ കാണിക്കുന്ന ക്രിസ്റ്റൽ ശീലം കാണിച്ചു തുടങ്ങുക, ശരി. ', 'അതുകൊണ്ട് ഉയർന്ന പിഎച്ച് അളവിലുള്ള മൈക്രോക്രിസ്റ്റാലിൻ എത്രിംഗൈറ്റ് പുതിയ ബെറ്റിനിൽ കാണപ്പെടുന്നു. ', 'ആദ്യകാല ജലാംശം പ്രതീക്ഷിക്കുക, ശരിയാണ്. ', 'ഇപ്പോൾ ഗവേഷകരുടെ അഭിപ്രായത്തില്, ഇത് നന്നായി രേഖപ്പെടുത്തിയിട്ടുണ്ട്. ', 'ജല ആഗിരണം ചെയ്യാനുള്ള ശേഷിയുള്ള എത്രിംഗൈറ്റ് ഉയർന്ന വികാസത്തിലേക്ക് നയിക്കുന്നു, ', 'pH അവസ്ഥ വളരെ ഉയർന്നതാണെങ്കില് സംഭവിക്കും. ', 'അതിനാൽ, നിങ്ങൾ സൾഫേറ്റ് എക്സ്പോഷറുകളിലേക്ക് വന്നാൽ, pH കുറയുന്നു, ഉദാഹരണത്തിന്, നിങ്ങൾ. ', 'പരിസ്ഥിതിയിലെ പിഎച്ച് കുറവാണെങ്കിൽ, അത് എത്രിന്ജിറ്റിന്. ', 'സിസ്റ്റത്തിൽ യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുമ്പോൾ ഇത് വളരെ ആഗിരണം ചെയ്യാത്തതായിരിക്കാം. ', 'വെള്ളം ആഗിരണം ചെയ്യുകയോ കുടിക്കുകയോ ചെയ്യുന്നില്ല, അത് വളരെ ഉയർന്ന വികാസങ്ങളിലേക്ക് നയിക്കുന്നില്ല. ', 'അതിനാൽ എത്രിംഗിറ്റിന്റെ രൂപീകരണം വികസനത്തിന് കാരണമാകുന്നത് പ്രധാനമായും. ', 'പുറമേയുള്ള പിഎച്ച് ഉല് പാദവും വളരെ ഉയർന്നതാണ്. ', 'ഇത് വലിയ അളവിൽ നാം ശരിക്കും വിപുലീകരണങ്ങള് സംഭവിക്കുന്നത് കാണുന്നില്ല എന്തുകൊണ്ട് വിശദീകരിക്കുന്നു. ', 'വയല് അടിസ്ഥാനമാക്കിയുള്ള സാമ്പിളുകള്. ', 'ലാബിലെ സാമ്പിളുകളിൽ നാം വളരെ ഉയർന്ന അളവിലുള്ള വികാസത്തെ കാണുന്നു. ', 'ആക്രമണത്തിന്റെ തുടർച്ചയായ പുനരുജ്ജീവനത്തോടെയുള്ള പ്രകടനം. ', 'കാരണം, നിങ്ങള് ക്ക് നിലത്തുള്ള വെള്ളം ഉണ്ട്, അത് ആക്രമണകാരിയെ നിരന്തരം ചാർജ് ചെയ്യുന്നു. ', 'പരിഹാരം. ', 'അതിനുപുറമെ, നമുക്ക് മറ്റു ഇയോണിക് ജീവികളുടെ സാന്നിധ്യം ഉണ്ട്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിന്റെ പിഎച്ച്. ', 'അത് സംഭവിക്കുമ്പോൾ, യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എട്രിംഗിറ്റ്. ', 'സാധാരണ മുങ്ങുന്ന അവസ്ഥയില് സിസ്റ്റത്തിനുള്ളില് രൂപപ്പെടുന്നതു പോലെ പ്രതികരിക്കുന്നതോ അല്ലെങ്കില് വിശാലമായതോ ആയ. ', 'ഒരു കപ്പ് എടുത്തു സൾഫേറ്റ് പരിഹാരം ഉള്ളിൽ വച്ച് ഒരു ബെറ്റൺ. ', 'ഉള്ളില് ഒരു സാമ്പിളാണോ? ', 'ബെറ്റണിന് വളരെ ഉയർന്ന പിഎച്ച് ഉണ്ട്, 13. ', 'അപ്പോൾ അത് pH 7 അല്ലെങ്കിൽ 8 ഉള്ള സൾഫേറ്റ് പരിഹാരത്തിനുള്ളിൽ വെക്കുമ്പോൾ എന്ത് സംഭവിക്കും? ', 'നിങ്ങൾക്ക് ബെറ്റണിന്റെ പരുത്തി പുറം പരിസ്ഥിതിയിലേക്ക് ഒഴുകും. ', 'ഓക്കേ, പുറത്തെ പരിഹാരത്തിന്റെ പി. എച്ച് വളരെ ഉയർന്ന തലത്തിലേക്ക് സ്ഥിരത കൈവരിക്കുകയാണ്. ', 'ചില സന്ദർഭങ്ങളിൽ 12 ന് മുകളിലായി നാം എത്തുന്നു. ', 'ഈ സാഹചര്യത്തിൽ, രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റ് വിപുലമായ സ്വഭാവമുള്ളതാണ്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിലെ പി. എച്ച് ഉയർന്നതാണെങ്കിൽ, എത്രിന്ജിറ്റ് വ്യാപകമാണ്, അത്. ', 'ലാബോറട്ടറി പഠനങ്ങളിൽ സൾഫേറ്റ് ആക്രമണവുമായി സാധാരണയായി ബന്ധപ്പെട്ട വിപുലീകരണങ്ങളിലേക്ക്. ', 'എന്നാൽ, ഈ മേഖലയില് നാം ഒരേ തരത്തിലുള്ള വികാസങ്ങള് കാണുന്നില്ല. ', 'എത്രിംഗിറ്റിന്റെ സ്ഥിരത ഒരു പ്രത്യേക സ്ഥലത്ത് നിലവിലുള്ള പിഎച്ച് തലങ്ങളിൽ ആശ്രയിച്ചിരിക്കുന്നു. ', 'പരിസ്ഥിതി. ', 'ഉദാഹരണത്തിന്, pH വളരെ ഉയർന്നതോ 9 മുതൽ 13 വരെയുള്ള pH പരിധിയിലുള്ളതോ ആയ. ', 'ഇത് സാധാരണയായി ഒരു എത്രിന്ജിറ്റ് പരിഹാരത്തിന്റെ സ്ഥിരതയുടെ പരിധി ആണ്. ', 'അതുകൊണ്ട്, വിവിധ ഗവേഷണങ്ങളിലൂടെ വിവിധ പിഎച്ച് ശ്രേണികൾ ലഭ്യമാക്കുന്നു. ', 'സ്ഥിരതയുള്ളതാണ്. ', 'ചുറ്റുപാടിലെ അവസ്ഥ അസിഡ് ആയാൽ, ആ പരിസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ഉണ്ടാകില്ല. ', 'വളരെ സ്ഥിരതയുള്ളതാണ്. ', 'അതിനാൽ, എട്രിംഗൈറ്റ് പകരമായി പ്രവർത്തിക്കുന്നുണ്ടോ എന്ന് പരിശോധിക്കാൻ, നിങ്ങൾ ചുറ്റുമുള്ള നിലവിലുള്ള അവസ്ഥകൾ പരിശോധിക്കണം. ', 'സ്ഥിരതയുള്ളവരാകാൻ. ', 'ഉദാഹരണത്തിന്, ആസിഡ് പരിതസ്ഥിതിയിൽ, എത്രിന്ജിറ്റിന്. ', 'ഗിപ്സും, അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡും, പ്രത്യേകിച്ച് കാർബണേഷൻ സംഭവിക്കുന്നതോടെ, അത്. ', 'അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡ്, ജിപ്സം എന്നിവയുമായി ചേർന്ന് കല് സി യം കാർബണേറ്റ് ഘടകങ്ങൾ രൂപം കൊള്ളുന്നു. ', 'അസിഡ് പരിതസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ജിപ്സും ആല്യുമിനിയം ഹൈഡ്രോക്സൈഡും ആയി മാറുന്നു. ', 'വീണ്ടും, ഈ ഫീൽഡിലെ തെളിവുകൾ നോക്കിയാൽ, പൂർണ്ണമായും നിലനിൽക്കുന്ന ഘടനകൾ. ', 'ഉണങ്ങിയ കഠിനമായ ബെറ്റണിന് റെയില് എത്രിന്ജിറ്റ് കണ്ടുപിടിക്കാന് പാടില്ല. ', 'അതിനാൽ നിങ്ങൾക്ക് ഈർപ്പം ഇല്ലെങ്കിൽ, നിങ്ങൾ ശരിക്കും എട്രിംഗിറ്റിന്റെ രൂപീകരണം കാണുന്നില്ല. ', 'പിന്നീട്, നിങ്ങൾ മറ്റെവിടെയെങ്കിലും ഉണങ്ങുകയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, എത്രിന്ജിറ്റ്. ', 'ഇത് കാണാവുന്നതാണ്, പക്ഷേ ഉണക്കിയതുകൊണ്ട്, നിങ്ങൾക്ക് ഒരു അവസ്ഥ ഉണ്ടാകില്ല. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുന്നു. ', 'ഇപ്പോൾ ഞാൻ നിങ്ങളെ കാണിച്ചു തരാം അടുത്തിടെ നടന്ന ചില ലാബ് പഠനങ്ങൾ. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണവും വികാസവും. ', 'ലാബിൽ പഠിക്കുന്നതില് സാധാരണയായി നമ്മൾ പഠിക്കുന്നത് മോർട്ടാർ പ്രിസ്മാറ്റിക് സാമ്പിളുകളാണ്. ', '25 x 25 x 285 മില്ലിമീറ്റർ ഈ സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ സൂക്ഷിക്കുന്നു. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ മുങ്ങുകയും അവയിൽ നിന്ന് സാമ്പിളുകൾ ഇടയ്ക്കിടെ നീക്കം ചെയ്യുകയും ചെയ്യുന്നു. ', 'നീളം ഇവിടെ കാണിച്ചിരിക്കുന്ന നീള താരതമ്യ ഉപയോഗിച്ച് അളക്കുന്നു. ', 'അതായത്, 3 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് 50 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് സൂക്ഷിച്ചിരിക്കുന്ന മർട്ടാർ ഉപയോഗിച്ച് തയ്യാറാക്കിയ സാന്നിധ്യം. ', 'പരിഹാരങ്ങള്. ', 'ഈ കേസിൽ അത് സോഡിയം സൾഫേറ്റ് ആയിരുന്നു. ', 'അതുകൊണ്ട് നമ്മൾ ചർച്ച ചെയ്ത പോലെ കാറ്റോൺ പ്രഭാവത്തിൽ നിന്നും ഉണ്ടാകുന്ന ഏതെങ്കിലും ദ്വിതീയ സംവിധാനങ്ങൾ ഉണ്ടാകുമെന്ന് നിങ്ങൾ പ്രതീക്ഷിക്കുന്നില്ല. ', 'മഗ്നീഷ്യം ഉപയോഗിച്ച്, നിങ്ങൾക്ക് കാറ്റീന്റെ പ്രഭാവം ഉണ്ട്, അത് വളരെ ഗുരുതരമാണ്. ', 'പരിഗണനയിലാക്കണം. ', 'അതുകൊണ്ട് ഈ പ്രോജക്റ്റിൽ നാം ചെയ്തതെന്തെന്നാൽ, ദൈർഘ്യ മാറ്റം നിരന്തരം നിരീക്ഷിക്കുകയായിരുന്നു. ', 'കൂടാതെ എട്രിംഗിറ്റിന്റെ അളവ് ക്വാണ്ടിഫിക്കേഷൻ ഞങ്ങൾ എക്സ്-റേ ഡിഫ്രാക്ഷൻ വിശകലനത്തിലൂടെ ചെയ്തു. ', 'ഇവിടെ കാണിക്കുന്നത് വ്യത്യസ്തമായ വിപുലീകരണത്തിന്റെ വ്യാപ്തിയാണ്. ', '32 ആഴ്ചയിലേറെയായി എക്സ്പോഷർ ചെയ്ത മോർട്ടാർ സാമ്പിളുകൾ ഇവയാണ് 2 മിശ്രിതങ്ങൾ, ഒന്ന്. സാധാരണ. ', 'പോർട്ട്ലാന്റ് സിമന്റ്, M2 എന്നിവ പോർട്ട്ലാന്റ് പൊസോളൻ സിമന്റ് ആണ്. ', 'അതിൽ കാർബൺ പൊള്ളലേറ്റിട്ടുണ്ട്. ', '32 ആഴ്ച കഴിഞ്ഞപ്പോൾ മാത്രം കാര്യമായ വികസനം കാണിച്ച സാമ്പിളുകൾ. ', 'ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന ഒപിസി കോൺക്രീറ്റ് അല്ലെങ്കിൽ ഒപിസി മോർട്ടാർ സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'ലിറ്ററിന് 3 ഗ്രാം ലൂഷനിൽ നിങ്ങൾ വളരെ അധികം വികസനം ഉണ്ടായില്ലെങ്കിലും. ', 'സംഭരണത്തിന്റെ അവസാന ഭാഗത്തേക്കുള്ള പ്രവണത വർധിച്ചു. ', 'ഡൈനാമിക് മോഡ്യൂളിലെ മാറ്റം നോക്കുമ്പോൾ, ഇവിടെ ഡൈനാമിക് മോഡ്യൂൾ അളന്നു. ', 'വസ്തുവിന്റെ റെസോണന്റ് ആവൃത്തി പരിശോധിച്ചാണ് ഇത്. ', 'അതുകൊണ്ട് നാം പ്രിസ്മാറ്റിക് സാമ്പിളുകൾ എടുത്തു റെസോണന്റ് ഫ്രീക്വൻസി നോക്കി. ', 'ബെറ്റണിന്റെ വഷളാകുന്നതോടെ റെസോണന്റ് ഫ്രീക്വൻസി. ', 'അതുപോലെതന്നെ കുറയും. ', 'ഇത് ഒരു നാശനഷ്ടമല്ലാത്ത പരീക്ഷണത്തിലൂടെ അപ്രതീക്ഷിതമായി അളക്കുന്ന ഡൈനാമിക് മോഡുലാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് കാണാനാകുന്നതാണു ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന മോർട്ടാർ സാമ്പിൾ. ', 'സൾഫേറ്റ് പരിഹാരം, സാധാരണ പോർട്ട്ലാന്റ് സിമന്റ് അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടാർ. ', '32 ആഴ്ചയിലെ എക്സ്പോഷർ സമയത്ത് മൊഡ്യൂൾ ഗണ്യമായി കുറഞ്ഞു, മറ്റ് എല്ലാ. സാമ്പിളുകളും. ', 'ഒരു കുറവുമില്ലാതെ വളരെ സ്ഥിരമായ ഒരു ഡൈനാമിക് മോഡ്യൂളും കാണപ്പെടുന്നു. ', 'ഇനി നമുക്ക് അളവുകൾ നോക്കാം. ', 'ഇത് വീണ്ടും ഒരു കണക്കായിട്ടല്ല, ഒരു പട്ടികയായിട്ടാണ് അവതരിപ്പിച്ചിരിക്കുന്നത്. ', 'ഇപ്പോൾ നിങ്ങൾക്ക് കാണാൻ കഴിയുമെങ്കിൽ, ഒപിസി 50 ഗ്രാം ലിറ്ററിന് വിപുലീകരണം 3 ശതമാനത്തോളം. ഉയർന്നതാണ്. ', 'അതൊരു ഉയർന്ന വികസന നിലയാണ്. ', 'ഈ എ എസ് ടി എം ടെസ്റ്റ് ചെയ്യുമ്പോൾ, ഇത് എ എസ് ടി എം സി 1012 പ്രകാരം ആണ്, ഈ ടെസ്റ്റ് രീതി ചെയ്യുമ്പോൾ. ', 'സാധാരണ മോർട്ടറുകളുടെ കാര്യത്തിൽ, നിങ്ങളുടെ വികസനം 0.1% കവിയുന്നുവെങ്കിൽ, 6 മാസത്തെ ഇടവേളയിൽ. ', 'ആ മോർട്ടാർ അല്ലെങ്കിൽ ആ പ്രത്യേക ബോണ്ടറും മോർട്ടാർ സംയോജനവും പ്രതിരോധം ഇല്ലാത്തവയാണെന്ന് നിങ്ങൾ പറയും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങള് ക്ക് വേണ്ടി. ', 'അത് ഒരു സ്വമേധയാ നടപടിക്രമം മാത്രമാണ്. ', 'ഇത് യഥാർത്ഥത്തിൽ ബെറ്റണിന്റെയും സൾഫാറ്റിന്റെയും സ്വഭാവം വെളിപ്പെടുത്തുന്നില്ല. ', 'സമ്പന്നമായ പരിസ്ഥിതി, എന്നാൽ ഈ തുടർച്ചയായ മുങ്ങൽ ടെസ്റ്റ് നിങ്ങളുടെ സാമ്പിൾ ഒരു വികസനം അവസാനിക്കുന്നു എങ്കിൽ. ', 'ആറുമാസത്തിനുള്ളിൽ 0.1% ൽ കൂടുതൽ, അത് സിമന്റ് പ്രതിരോധം ഇല്ല എന്ന് കരുതപ്പെടുന്നു. ', 'സൾഫേറ്റ് ആക്രമണം. ', 'എന്നിരുന്നാലും, ഈ കേസിൽ വെറും 32 ആഴ്ചയിലേയ്ക്ക് 3% വരെ വ്യാപനം രേഖപ്പെടുത്തിയിരുന്നു. ', 'അതായത് എട്ടുമാസം, ഏഴു മുതൽ എട്ടുമാസം വരെ നിങ്ങൾക്ക് 3% വരെ എക്സ്പോഷർ ഉണ്ടായിരുന്നു. ', 'ഒരു ലിറ്ററിന് 3 ഗ്രാം ഒപിസി കണക്കിലെടുത്താൽ അത് ഇപ്പോഴും 0.1% മാർക്കിൽ എത്തിയില്ല. ', 'അതേസമയം, ഒരു ലിറ്ററിന് 50 ഗ്രാം പരിഹാരവും പിപിസി അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടറും ഉള്ളപ്പോൾ അത് ഇപ്പോഴും. ', '0.1%, വിപുലീകരണം 0.1% ൽ താഴെയാണ്. ', 'ലിറ്ററിന് 3 ഗ്രാം ഉള്ള പിപിസി, വിപുലീകരണം ഒന്നും തന്നെയില്ല. ', 'അതായത്, അത് വളരെ പ്രയാസം ശ്രദ്ധിക്കപ്പെടുന്നു. ', 'മുങ്ങുന്ന സമയത്തുനിന്ന് അവസാനത്തെ അളവിലേക്ക് മാറ്റം വരുത്താൻ പ്രയാസമാണ്. ', 'അത് കഴിഞ്ഞു. ', 'അപ്പോൾ ഇത് സിസ്റ്റത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എത്രിന്ജിറ്റ് ഉള്ളടക്കത്തിലേക്ക് എങ്ങനെ വിവർത്തനം ചെയ്യപ്പെടുന്നു? ', 'ഇപ്പോൾ ക്രസ്റ്റലിൻ മാത്രം നിലനിൽക്കുന്ന ഘട്ടങ്ങൾ കണ്ടെത്താനായി എക്സ്-റേ ഡിഫ്രാക്ഷൻ ചെയ്തു. ', '∙ എത്രിംഗിറ്റിന്റെ അളവും ക്രസ്റ്റലിൻ ഘട്ടങ്ങൾക്കിടയിലും നിർണ്ണയിച്ചു. ', 'ഇവിടെ എത്രിന്ജിറ്റ് അളവ് ഈ വരിയിൽ നൽകിയിരിക്കുന്നു. ', 'എട്രിംഗിറ്റിന്റെ അളവിൽ സ്ഥിരമായ വർധനയുണ്ടെന്ന് നിങ്ങൾക്ക് കാണാം. ', 'എക്സ്പോഷർ സമയം 9 ആഴ്ചയിൽ നിന്ന് 25 ആഴ്ച വരെ വർദ്ധിപ്പിക്കുക. ', 'അങ്ങനെ ഞങ്ങൾ ഒരു തരം രേഖപ്പെടുത്തി, അങ്ങനെ ഞങ്ങൾ രേഖപ്പെടുത്തി എട്രിംഗിറ്റ് ഉള്ളടക്കം നിർണ്ണയിച്ചു. ', 'എക്സ്-റേ ഡിഫ്രാക്ഷൻ. ', 'ഇത് യഥാർത്ഥത്തിൽ നിലവിലുണ്ടായിരുന്ന എല്ലാ ക്രിസ്റ്റലിൻ ഘടകങ്ങളുടെയും ശതമാനം മാത്രമാണ്. ', 'അത് വളരെ വ്യക്തമായ ബന്ധമാണ്. ', 'ഇത് നമുക്ക് ലഭിച്ച ഇടത്തരം വായനകളിൽ നിന്നും എടുത്ത പോയിന്റുകളുടെ ഒരു കൂട്ടം ആണ്. ', 'ഈ പ്രക്രിയയില് എടുത്തത്. ', 'അതിനാൽ തുടർച്ചയായ മുങ്ങൽ പഠനത്തിലൂടെ. ', 'സിസ്റ്റത്തിൽ യഥാർത്ഥത്തിൽ രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റിന്റെ അളവ് വളരെ കൂടുതലാണ്. ', 'എന്നാൽ ഇത് യാഥാർത്ഥ്യമാകുമോ ഇല്ലയോ എന്നത് നിലവിലുള്ള അവസ്ഥയെ ആശ്രയിച്ചിരിക്കുന്നു. ', 'ബെറ്റിന് റെ ഘടനയുടെ ചുറ്റും നാം എപ്പോഴും ഉയർന്ന പി. എച്ച് ഉള്ള ഒരു പരിസ്ഥിതിയിലാണോ. ', 'അല്ലെങ്കിൽ നമ്മൾ pH കുറവുള്ള ഒരു പരിതസ്ഥിതിയിലാണോ, അവിടെ മറ്റ് എത്രിന്ജിറ്റ് രൂപങ്ങൾ. ', 'എത്രിന്ജിറ്റിന് മറ്റു ഉൽപ്പന്നങ്ങളിലേക്ക് ചൊരിയാൻ കഴിയുമ്പോള്. ', 'അത് ത്രിന്ജിറ്റിനോട് ബന്ധപ്പെട്ടിരിക്കുന്ന വിപുലീകരണ നിലയ്ക്ക് കാരണമാകില്ല. ', 'തീർച്ചയായും, ചില മോഡലുകൾ ലീനിയറായതോ ക്വാഡ്രേറ്റിക് ആയതോ ആയ. ', 'ഡാറ്റയിലൂടെ എന്തെങ്കിലും സജ്ജീകരിച്ചിരിക്കുന്നു. ', 'അതുകൊണ്ട് ഈ ആവശ്യകത നിറവേറ്റാനാണ് ഇത്. ', 'ഇവിടെ കാണുന്നത് 50 ഗ്രാം ലിറ്ററിന് പരിഹാരം ഉപയോഗിച്ച് ഒപിസി മോർട്ടാർ. വളരെ. ', 'ഉയർന്ന വിപുലീകരണ നിലയും വീണ്ടും അത് ക്വാഡ്രാറ്റിക് തരത്തിലുള്ള ബന്ധത്തിൽ ഉൾക്കൊള്ളുന്നുവെങ്കിൽ. ', 'നിങ്ങൾക്ക് ക്വാഡ്രാറ്റിക് സമവാക്യവുമായി ബന്ധപ്പെട്ട സ്ഥിരതകൾ ലഭിക്കും. ', 'അതുപോലെ തന്നെ 3 ഗ്രാം ലിറ്ററിന് പരിഹാരം വീണ്ടും ക്വാഡ്രാറ്റിക്. ', 'പക്ഷെ, ഈ ബന്ധം നിങ്ങളെ അതിന് നയിക്കുന്നതെന്ത്? അത് നിങ്ങളെ സഹായിക്കും. ', 'വിപുലീകരണം ഒരു നിർണായക മൂല്യം കവിയുന്ന കാലഘട്ടം പ്രവചിക്കുന്നതില്. ', 'ആ നിർണായക മൂല്യം ASTM C1012 ൽ 0.1% ആയി രേഖപ്പെടുത്തിയിട്ടുണ്ടെങ്കിലും, ', 'നിങ്ങളുടെ സൈറ്റിൽ നിലനിൽക്കുന്ന അവസ്ഥയുടെ തരം നിങ്ങൾ ആഗ്രഹിക്കുന്ന ആ വിമർശനാത്മക വികസനം. ', 'അങ്ങനെ ആകണം. ', 'അതിനനുസരിച്ച്, നിങ്ങൾക്ക് പരീക്ഷണം ശരിയായി പരിഷ്ക്കരിക്കാനും മറ്റൊരു വിധത്തിൽ വ്യാഖ്യാനിക്കാനും കഴിയും. ', 'ഡാറ്റ. ', 'ഈ കേസിൽ യാതൊരു കുറവുമില്ല. ', 'ഈ സാഹചര്യത്തിൽ, നിങ്ങളുടെ സാമ്പിളുകൾ നിരന്തരം ഉള്ളിൽ ഉള്ളതിനാൽ, ചുരുങ്ങൽ പൂർണ്ണമായും ഒഴിവാക്കപ്പെടുന്നു. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'അതുകൊണ്ട് ഈ കേസിൽ ഉണക്കലും നനയലും ഇല്ല. ', 'അതിനാൽ നിങ്ങൾ ഉണക്കിയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, സാമ്പിൾ ഒരു നിശ്ചിത കാലയളവിൽ പരിഹാരത്തിനുള്ളിൽ തന്നെ തുടരുന്നു. ', 'പിന്നെ അത് ഉണക്കൽ പരിതസ്ഥിതിയിൽ വച്ച് സിസ്റ്റത്തിലേക്ക് തിരികെ വയ്ക്കുന്നു. ', 'അതുവഴി നെറ്റ് നീളത്തിലെ മാറ്റം ഉണ്ടാകാം. അത് ചുരുങ്ങിയതായിരിക്കും. ', 'തീർച്ചയായും, സൾഫേറ്റ് മൂലം നിങ്ങളുടെ മോർട്ടറുകളും കോൺക്രീറ്റുകളും സംരക്ഷിക്കപ്പെടാനുള്ള വിവിധ മാർഗങ്ങളെക്കുറിച്ച് സംസാരിക്കുന്നു. ', 'ആദ്യം, ഏറ്റവും പ്രധാനമായി, കുറഞ്ഞ C3S എംഎൻ ഉപയോഗം ആണ്, കാരണം വീണ്ടും നാം. വളരെ. ', 'വികസനവും എത്രിംഗിറ്റ് രൂപീകരണവും തമ്മിലുള്ള ബന്ധം വ്യക്തമാണ്, പക്ഷേ കുറഞ്ഞ C3S മ്നു. ', 'ആദ്യകാല ജലാംശം പ്രക്രിയയിൽ രൂപപ്പെടുന്ന പ്രാഥമിക എത്രിന്ജിറ്റ്. ', 'എല്ലായിടത്തും സ്ഥിരത പുലർത്തുന്നു. ', 'ഇത് സൾഫേറ്റ് പോലുള്ള മറ്റ് സൾഫേറ്റ് രൂപങ്ങളിലേക്ക് പരിവർത്തനം ചെയ്യുന്നില്ല, അവയ്ക്ക് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫ. ', 'ബാഹ്യ സൾഫേറ്റുകൾ ബെറ്റണിന് അകത്ത് വന്നാൽ എട്രിംഗിറ്റിലേക്കു മാറുന്നതിന്റെ. ', 'അങ്ങനെ കുറഞ്ഞ സി 3 എസ് മ്നസ് സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റിന് അടിസ്ഥാനം ആകുന്നു. ', 'അതിനെ നാം SRC എന്ന് വിളിക്കുന്നു, അല്ലെങ്കിൽ സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ്. ', 'സിമന്റ് സിമന്റ് സി3 എസ് കുറവുള്ളതും, ', 'ജലാംശം ലഭിച്ച ശേഷം കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ഉത്പാദിപ്പിക്കുന്നത്. ', 'ഒരു മോളി സി 3 എസ് ല് 3 മടങ്ങ് കല് സിം ഹൈഡ്രോക്സൈഡ് ഉല് പാദിപ്പിക്കുമെന്ന് നിങ്ങള് ക്ക് നന്നായി അറിയാം. ', 'സി. 2 എസ് ലേക്ക്. ', 'അതിനാൽ നിങ്ങൾക്ക് കൂടുതൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ഉണ്ടെങ്കിൽ ഗിപ്സം രൂപപ്പെടാനുള്ള പ്രവണത കൂടുതലാണ് കാരണം. ', 'ബാഹ്യ സൾഫേറ്റുകൾ കാൽസ്യം ഹൈഡ്രോക്സൈഡുമായി പ്രതിപ്രവർത്തനം ചെയ്യുമ്പോൾ നിങ്ങൾ ജിപ്സം രൂപീകരിക്കുന്നു. ', 'അതുകൊണ്ട് സിപ്സസ് രൂപീകരണം കുറയ്ക്കുന്നതിലൂടെ ബെറ്റണിന്റെ പ്രതിരോധം മെച്ചപ്പെടുത്താനും കഴിയും. ', 'അല്ലെങ്കിൽ സൾഫേറ്റ് ആക്രമണത്തിന് വേണ്ടി മോർട്ടാർ. ', 'ഉയർന്ന അലുമിന സിമന്റുകളും സൂപ്പർ സൾഫേറ്റ് സിമന്റുകളും വലിയ തോതിൽ ഉപയോഗിക്കാറില്ല. ', 'ഇന്ന്, പ്രധാനമായും നമ്മൾ സംസാരിച്ച മറ്റ് പ്രശ്നങ്ങളില് നിന്നും. ', 'ജലവൈദ്യുത ഘട്ടങ്ങളുടെ സ്ഥിരത. ', 'സൾഫേറ്റ് എക്സ്പോഷർ കണക്കിലെടുത്ത് ഈ സിമന്റ് രണ്ടും വളരെ നന്നായി പ്രവർത്തിക്കുന്നു. കാരണം വീണ്ടും അവിടെ. ', 'ഈ സംവിധാനങ്ങളിൽ യഥാർഥത്തിൽ സംഭവിക്കുന്ന വൈകി എട്രിംഗിറ്റിന്റെ രൂപീകരണവും ഇല്ല. ', 'ഇപ്പോൾ, തീർച്ചയായും, മിക്കവാറും എല്ലാ കാര്യങ്ങളിലും ഒരു ഭാഗമാകുന്ന രണ്ട് പ്രധാന വശങ്ങളുണ്ട്. ', 'ഈ സാഹചര്യത്തില്, ഈ പ്രശ്നങ്ങള് ക്കു് സംരക്ഷണ സംവിധാനങ്ങള് നല് കുന്നതു്. ', 'ഒന്നാമതായി, പൊസോളാനിക് വസ്തുക്കളും ധാതുഭൂമിയുടെ മിശ്രിതങ്ങളും ഉപയോഗിക്കുന്നു. ', 'ഇത് മിക്ക കേസുകളിലും ഗുണം ചെയ്യും, കാരണം ഇത് കാൽസ്യം അളവ് കുറയ്ക്കും. ', 'സിസ്റ്റത്തില് ഉള്ള ഹൈഡ്രോക്സൈഡ്. ', 'അതുകൊണ്ട്, കുറവ് ജിപ്സസ് രൂപം. കൊണ്ടിരിക്കുന്നു. ', 'ഗിപ്സും രൂപപ്പെടാൻ കുറവുണ്ടെങ്കിൽ നിലവിലുള്ളവയുടെ പരിവർത്തനം കുറവായിരിക്കും. ', 'മോണോ സൾഫേറ്റ് ഉം അല്മുനിനേറ്റ് ഉം എത്രിന്ജിറ്റായി മാറുന്നു കാരണം നേരത്തെ ചർച്ച ചെയ്തതുപോലെ ജിപ്സസ് രൂപീകരണം സംഭവിക്കുന്നു. ', 'ഈ പ്രക്രിയയിലെ ആദ്യ ചുവടുവെപ്പാണ്. ', 'അതിനാൽ ആ ചുവട് നിയന്ത്രിക്കാൻ ശ്രമിക്കുകയാണെങ്കിൽ അടുത്ത ചുവട് സ്വപ്രേരിതമായി നടക്കില്ല. ', 'അതായത്, നിങ്ങൾക്ക് കുറവ് ജിപ്സസ് ഉണ്ടെങ്കിൽ, അത് സോഡിയം സൾഫേറ്റിന് നല്ലതാണ്. ', 'ഇപ്പോൾ സിസ്റ്റത്തിൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് കുറവുണ്ടെങ്കിൽ എന്ത് സംഭവിക്കും? ', 'മഗ്നീഷ്യം സൾഫേറ്റ് പോലുള്ള ഒരു അസിഡ്. സംവിധാനം. ', 'ആ കേസിൽ എന്തു സംഭവിക്കും? ', 'അതുകൊണ്ട് പോര് റ്റ് ലാന്റിറ്റിൻറെ അളവ് കുറവുള്ള ധാതു ചേരുവകളുള്ള കോൺക്രീറ്റ് എങ്ങനെ. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് പരിഹാരങ്ങൾ നേരിടുന്നതുണ്ടോ? ', 'ഒ. പി. സി. യുമായി താരതമ്യം ചെയ്യുമ്പോൾ അവ നല്ലതോ ചീത്തയോ ആയിരിക്കും? ', 'അവള് അതിലും മോശമായിരിക്കും. ', 'മഗ്നീഷ്യം സൾഫാറ്റിനെ സംബന്ധിച്ചിടത്തോളം, ആസിഡ് ഉത്പാദിപ്പിക്കുന്ന സൾഫാറ്റിനെ അടിസ്ഥാനമാക്കിയുള്ള ഏതൊരു ആക്രമണവും. ', 'സിസ്റ്റത്തിലെ അവസ്ഥകൾ. ', 'അതുകൊണ്ട് എസ്ടിഎംഎസ് പ്രതിരോധം സംബന്ധിച്ച് മോശമായിരിക്കും. ', 'ഇപ്പോൾ നാം സംസാരിക്കുന്നത് രാസ സംവിധാനത്തെക്കുറിച്ചാണ്. ', 'സൾഫേറ്റ് നുഴഞ്ഞുകയറ്റത്തിന്റെ ഭൌതിക സംവിധാനത്തെ നാം ശരിക്കും അഭിസംബോധന. ചെയ്യുന്നില്ല. ', 'സിസ്റ്റത്തിന്റെ സുതാര്യതയെ കുറിച്ചാണ്. ', 'ഇപ്പോൾ നമ്മൾ സ്കിഎം ഉപയോഗിക്കുമ്പോൾ സൾഫേറ്റിന് വിധേയമായ വയലിൽ യഥാർത്ഥ കോൺക്രീറ്റ് സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം ഉള്ളിൽ കടന്ന് കടക്കുന്നതിനെ വലിയ തോതിൽ പ്രതിരോധിക്കാൻ സാധിക്കും. ', 'ഇപ്പോൾ രാസപരമായി മിനറൽ മിശ്രിതം അടിസ്ഥാനമാക്കിയുള്ള കോൺക്രീറ്റുകളിൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് അഭാവം. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് ആക്രമണത്തിന് റെ കാര്യത്തിൽ ഒരു നെഗറ്റീവ് വശം. ', 'എന്നാൽ ആക്രമണ പരിഹാരത്തിന്റെ ഭൌതിക ആഴത്തില് അത് സംഭവിക്കുന്നു. ', 'സിസ്റ്റത്തിലെ താഴ്ന്ന സുതാര്യത കാരണം വലിയ തോതിൽ പരിമിതപ്പെടുത്താവുന്നതാണ്. ', 'പക്ഷേ, സൾഫേറ്റ് ആക്രമണത്തെ സംബന്ധിച്ചിടത്തോളം നടക്കുന്ന രാസവിദ്യാ പഠനങ്ങൾ നോക്കിയാൽ. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് ഉപയോഗിച്ച് മിക്കപ്പോഴും നിങ്ങൾ കാണും. ', 'മിനറൽ അഡിറ്റീവുകൾ വളരെ നല്ലതല്ല, അത് ആസിഡ് ആക്രമണത്തിൽ നാം പിന്നീട് കാണും. ', 'പഠനങ്ങളും. ', 'പക്ഷെ, തീർച്ചയായും, നാം ഇപ്പോഴും ആശങ്കപ്പെടേണ്ട ഏറ്റവും പ്രധാനപ്പെട്ട സ്വഭാവം. ', 'ബെറ്റണിലെ വെള്ളം കുറഞ്ഞ സിമന്റ് അനുപാതം, ബെറ്റണിനെ അപ്രാപ്യമാക്കുന്നതും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങളുടെ നുഴഞ്ഞുകയറ്റത്തിനെതിരെ നിങ്ങള് ക്ക് നല് കാവുന്ന പ്രതിരോധത്തിന്റെ ആദ്യ വരി. ', 'സൾഫേറ്റ് ആക്രമണത്തിലെ സി. 3. എയുടെ സ്വാധീനത്തെ കുറിച്ചുള്ള ചില ലബോറട്ടറി തെളിവുകൾ ഇതാ. ', 'ഇത് കാനഡയിൽ നിന്നാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് വളരെ വ്യക്തമായി കാണാം, സിമന്റിൽ വളരെ ഉയർന്ന C3A ശതമാനം ഉണ്ടെങ്കിൽ. ', '12.3 ശതമാനം സി 3 എ. ഇവ ഏതുതരം സാമ്പിളുകളാണെന്ന് പോലും അറിയാനാവില്ല. ', 'ഈ സാമ്പിളുകൾ സൾഫേറ്റ് പരിഹാരങ്ങളിൽ പൂർണ്ണമായും മുങ്ങിപ്പോയി. ഇവിടെ നിങ്ങൾക്ക് 3.5% ', 'C3A ഉയർന്ന അളവിലുള്ള കാറ്റലക്ഷണത്തിന് ശേഷം സിലിണ്ട്രിക് സാമ്പിളുകൾ യഥാർത്ഥത്തിൽ കേടായിട്ടില്ല. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ. ', 'C3A നേരിട്ട് കാരണം നാം ചെയ്യുന്ന ലാബോറട്ടറി പഠനങ്ങളുടെ അടിസ്ഥാനത്തിൽ. ', 'C3A കുറവുള്ള ബെറ്റണിന്റെ പ്രകടനം താരതമ്യപ്പെടുത്തുമ്പോൾ വളരെ മികച്ചതാണെന്ന് നിങ്ങൾക്ക് വ്യക്തമായി കാണാം. ', 'C3A ഉയർന്ന കോൺക്രീറ്റ് പ്രകടനത്തിന്. ', 'നിങ്ങൾ യഥാർത്ഥ സൈറ്റ് അടിസ്ഥാനമാക്കിയുള്ള പഠനങ്ങൾക്ക് പോകുമ്പോൾ, ഇത്തരത്തിലുള്ള പഠനത്തിന്റെ ഏറ്റവും നല്ല ഉദാഹരണം. ', 'അമേരിക്കയിലെ പോർട്ട്ലാന്റ് സിമന്റ് അസോസിയേഷന്റെ പിസിഎ നടത്തിയ പ്രവര് ത്തനത്തെക്കുറിച്ച്. ', 'ഏതാണ്ട് മുപ്പത് മുതൽ മുപ്പത് വർഷം വരെ നീണ്ടുനിന്ന ഒരു പഠനത്തിലാണ് അവർ ഈ പഠനം നടത്തിയത്. ', 'കൊളറാഡോയിലെ ഈ കോണ്ക്രീറ്റ് സാമ്പിളുകളിൽ ശേഖരിച്ച. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണ് കൂടാതെ മഡിസിൻ തടാകത്തിനകത്ത് മുങ്ങിയ ഈ സാമ്പിളുകളും. ', 'ദക്ഷിണ ദക്കോട്ടയില് സൾഫേറ്റ് ഉള്ളടക്കം കൂടുതലായിരുന്നു. ', 'അങ്ങനെ ഇവ ഭാഗികമായി മുങ്ങിപ്പോയി. സംഭവിച്ചേക്കാവുന്ന കാര്യങ്ങളുടെ യാഥാർത്ഥ്യപരമായ ഫലങ്ങൾ. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണിലായിരിക്കുമ്പോള് ബെറ്റണിന് റെ മേല്. ', 'രസകരമെന്നു പറയട്ടെ, അവരുടെ പഠനം വ്യക്തമായി കാണിച്ചത് വെള്ളം സിമന്റ് ഉള്ള ഏതെങ്കിലും കോൺക്രീറ്റ്. ', 'ഈ എക്സ്പോഷറിൽ 0. 45 ൽ കൂടുതലുള്ള അനുപാതം കേടായി. ', 'അങ്ങനെ ഇത് ഒരു യാഥാർത്ഥ്യമായ എക്സ്പോഷർ ആയിരുന്നു സൾഫേറ്റ് പരിഹാരം വളരെ കേന്ദ്രീകരിച്ച അല്ല ആയിരുന്നു. ', 'യഥാർത്ഥത്തിൽ കണ്ടത്. ', 'ബെറ്റണിന്റെ സാമ്പിളുകൾ വളരെ ചെറുതല്ല, അവർ വളരെ വലിയ സിലിണ്ടറുകൾ ആയിരുന്നു. ', 'ഏഴ് വർഷത്തെ എക്സ്പോഷർ അവർ ഈ നിഗമനം വന്നു. ', '0.45 വെള്ള സിമന്റ് അനുപാതം കേടായി. ', 'ഇത് വളരെ രസകരമാണ് കാണിക്കുന്നത് 0.45 എന്നത് വെള്ളം സിമന്റ് അനുപാതം പരിമിതപ്പെടുത്തുന്നതാണ്. ', 'സൾഫേറ്റ് സമ്പന്നമായ പരിസ്ഥിതികൾ സംബന്ധിച്ചിടത്തോളം ഈ 0.45 കോഡൽ ഭൂരിഭാഗവും പ്രതിഫലിക്കുന്നു. ', 'സ്പെസിഫിക്കേഷനുകളും. ', 'സൾഫേറ്റ് പ്രതിരോധം സംബന്ധിച്ച്, ', 'വെള്ളം സിമന്റ് അനുപാതം കുറയ്ക്കുക 0.45 കുറയുന്നു. ', 'ഈ ഡാറ്റ പിന്നീട് കാലിഫോർണിയ സർവകലാശാലയിലെ ഗവേഷകർ വിശകലനം. ചെയ്തു. ', 'ബെർക്കി ഈ ഡാറ്റ മറ്റൊരു രീതിയില് പിന്നീട് അവതരിപ്പിച്ചു. ', 'വെള്ളം സിമന്റ് അനുപാതവും അവർ എന്തായിരുന്നു? ', '40 വർഷത്തിനു ശേഷവും സുരക്ഷിതമായിരുന്ന കോൺക്രീറ്റ് കാണിക്കാൻ സാധിക്കുന്നതാണു്. ', 'സിമന്റിന് C3A ഉള്ളടക്കം പരിഗണിക്കാതെ തന്നെ സുരക്ഷിതമായി തുടരുന്നു. ഈ കോൺക്രീറ്റുകളിലെല്ലാം വെള്ളം ഉണ്ടായിരുന്നു. ', 'സിമന്റ് അനുപാതങ്ങൾ 0.45 ൽ കുറവാണ്. ', 'സിമന്റ് സിമന്റ് സിസ്റ്റത്തിൽ ഉയർന്ന C3A ഉണ്ടായിരുന്നാലും. ', '0.45 ന് താഴെ നിലനിര് ത്തുന്നതോടെ പ്രകടനം വളരെ നല്ലതായിരുന്നു. ', '40 വർഷത്തിനു ശേഷമുള്ള എല്ലാ കോൺക്രീറ്റുകളും വെള്ള സിമന്റ് ഉള്ളവയാണ്. ', 'അനുപാതം 0.45 ൽ കുറവാണ്. ', 'വീണ്ടും, മിക്ക സവിശേഷതകളും നോക്കിയാൽ, സിമന്റ് പരിധി അടിസ്ഥാനപരമായി കൂടുതൽ സംസാരിക്കുന്നത്. ', 'സിമന്റ് തരം 2 സാധാരണയായി മിതമായ അളവിൽ ഉള്ള സിസ്റ്റത്തിൽ C3A ന്റെ വ്യാപ്തി. ', 'സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റുകൾ. ', 'അതായത്, അവയിൽ 8% C3A ഉണ്ട്. ', 'ടൈപ്പ് 3 ന് സാധാരണയായി C3A ഉള്ളടക്കം കൂടുതലായിരിക്കും, കാരണം നമുക്ക് വേഗത്തിൽ കഠിനമാക്കാനുള്ള സവിശേഷതകൾ ആവശ്യമാണ്. ', 'ഈ സിമന്റുകളിൽ നിന്നും എന്നാൽ സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റുകളായ ടൈപ്പ് 5 സിമന്റുകളിൽ നിന്നാണ് ഞാൻ സംസാരിക്കുന്നത്. ', 'ഇവിടെ എ. എസ്. ടി. എം. സവിശേഷതകളെക്കുറിച്ച്. ', 'ടൈപ്പ് 5 സൾഫേറ്റ് പ്രതിരോധം സിമന്റ് ആണ് അവിടെ C3A ഉള്ളടക്കം കുറവ് നിയന്ത്രിക്കണം. ', '5% ൽ കുറവാണ്. ', 'എന്നാൽ പ്രശ്നം 5 തരം സിമന്റ് സൾഫേറ്റ് പ്രതിരോധം പരിശോധന ഒരിക്കലും. ', 'നിങ്ങൾ എപ്പോഴും 5% ൽ താഴെ C3A ഉള്ളവരായിരിക്കും. ', 'സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ് ഉപയോഗിക്കുമ്പോൾ നിങ്ങളെ സംരക്ഷിക്കുമെന്ന് ആളുകൾ കരുതുന്നു. ', 'സൾഫേറ്റ് ആക്രമണത്തില് നിന്നും. ', 'പിന്നെന്തിനാ ഇത് ഒരു പ്രശ്നമായിരിക്കുന്നത്? ', 'സൾഫേറ്റ് പ്രതിരോധം ഉണ്ടെങ്കിലും നാം എന്തിനാണ് സൾഫേറ്റ് പ്രതിരോധം പരിശോധിക്കുന്നത്? ', 'സിമന്റ്? ', 'കാരണം മിശ്രിതം രൂപകൽപ്പന ചെയ്യാന് നാം വ്യക്തമായി തയ്യാറാകുന്നില്ലെങ്കിൽ നാം മിശ്രിതം. ', 'സിമന്റ് വെള്ളം അനുപാതം ഒരു കാര്യമാണ്. ', 'രണ്ടാമതായി, സിസ്റ്റവുമായി ബന്ധപ്പെട്ട് മറ്റു തരത്തിലുള്ള കേടുപാടുകളും ഉണ്ടാകുന്നതായി നമുക്കറിയാം. ', 'ജിപ്സസ് രൂപീകരണവുമായി ബന്ധപ്പെട്ട ഫിസിക്കൽ സോൾറ്റ് ആക്രമണവും എത്രിംഗിറ്റുമായി ബന്ധപ്പെട്ട മറ്റ് വശവും. ', 'യഥാർത്ഥ കോൺക്രീറ്റ് സാമ്പിളുകളിൽ പരാജയത്തിന്റെ പ്രധാന സംവിധാനം ആയിരിക്കില്ല. ', 'ഒരു ലബോറട്ടറി പഠനത്തിൽ നാം തുടർച്ചയായ മുങ്ങൽ നടത്തുന്നു. ', 'വ്യക്തമായി വിപുലീകരണവുമായി നേരിട്ട് ബന്ധപ്പെട്ടിരിക്കുന്നു, എന്നാൽ ഒരു യാഥാർത്ഥ്യബോധമുള്ള അവസ്ഥയിൽ എത്രിന്ജിറ്റ്. ', 'ഒന്നാമതായി, അത് സൾഫാറ്റിന്റെ മറ്റു രൂപങ്ങളിലേക്ക് പരിവർത്തനം ചെയ്യപ്പെടാം, അത്. ', 'നിങ്ങളുടെ ഘടനയെ നശിപ്പിക്കുന്നതിനു് പ്രധാനമായ ഒരു സംവിധാനം ആയിരിക്കണം. ', 'അതുകൊണ്ട്, നിങ്ങൾ ടൈപ്പ് 5 സിമന്റ് ഉപയോഗിക്കുമ്പോൾ പോലും, അത് സൾഫേറ്റ് ബന്ധപ്പെട്ട പരിശോധനകൾക്കും. ', 'നാം ആഗ്രഹിക്കുന്ന പ്രകടനം നേടുന്നുണ്ടോ എന്ന്. ', 'ചോദ്യം ചെയ്യപ്പെടുന്ന തുടർച്ചയായ മുങ്ങൽ അടിസ്ഥാനമാക്കിയുള്ള ASTM C1012 സൾഫേറ്റുകൾ. ', 'പല ഗവേഷകരും. ', 'സൾഫേറ്റ് ആക്രമണത്തിലെ യഥാർത്ഥ പ്രതിരോധം. ', 'സിസ്റ്റത്തിന്റെ സുതാര്യതയുടെ ഫലങ്ങള് നാം ശരിക്കും ഉൾക്കൊള്ളുന്നില്ലെന്നാല് ബെറ്റിന് റെ കാര്യങ്ങള്. ', 'എന്തായാലും അത് ചർച്ചക്ക് അപ്പുറം ആണ്. ', 'എ. എസ്. ടി. എം. മാനദണ്ഡങ്ങളിൽ നിർദ്ദേശിച്ചിരിക്കുന്ന വിവിധ പരിശോധന രീതികൾ പുനഃസംഗ്രഹിക്കുക. ', 'ഏറ്റവും കൂടുതൽ ഉപയോഗിക്കുന്നത് ASTM C1012 ആണ്. ', '5% സോഡിയം സൾഫേറ്റ് അല്ലെങ്കിൽ 5% മഗ്നീഷ്യം സൾഫേറ്റ് അല്ലെങ്കിൽ നിങ്ങൾക്ക് ഒരു മിശ്രിതം ഉപയോഗിക്കാമെന്ന്. അവർ പറയുന്നു. ', 'സോഡിയം, മഗ്നീഷ്യം, സൾഫേറ്റ് എന്നിവയുടെ. ', 'ഈ സംവിധാനങ്ങളോ പ്രതികരണങ്ങളോ. ', 'തികച്ചും വ്യത്യസ്തമാണ്. ', 'അതിനാൽ നിങ്ങൾ പരീക്ഷയെ എങ്ങനെ നടത്തുന്നു എന്നതിനെക്കുറിച്ച് വളരെ ശ്രദ്ധിക്കണം. ', 'ശരിയായ സൾഫേറ്റ് പരിഹാരം തിരഞ്ഞെടുക്കുന്നത് വളരെ പ്രധാനമാണ്, സാധാരണയായി വിപുലീകരണം അളക്കുന്നു. ', '6 അല്ലെങ്കിൽ 12 മാസം ശേഷം കോൺക്രീറ്റ് അല്ലെങ്കിൽ മോർട്ടാർ യഥാർത്ഥത്തിൽ 20 മെഗാപാസ്കൽ എത്തുന്നത് മാത്രം. ', 'സൾഫേറ്റ് പരിഹാരത്തിന് വിധേയമായി, ഒരു മിനിമം അളവ്. ', 'സിസ്റ്റത്തില് ഇതിനകം തന്നെ വികസിപ്പിച്ചെടുത്ത കരുത്ത്. ', 'വീണ്ടും പരിശോധന പരിഹാരം 50 ഗ്രാം ആണ് ലിറ്ററിന് സൊഡിയം സൾഫേറ്റ്. പരിഹാരം. ', '20 മെഗാപാസ്കല് ല് അധിക സിമന്റിംഗ് വസ്തുക്കളും പ്രതികരിക്കാന് സാധിക്കും. ', 'അതിനർത്ഥം നമ്മൾ 7 ദിവസം മാത്രം ചികിത്സിക്കുന്നു എന്ന് നാം പറയുന്നില്ല എന്നാണ്. ', 'ഏഴു ദിവസത്തിനകം ഒ. പി. സി. വിറക്കുന്ന ചാരത്തോട് താരതമ്യം ചെയ്യുമ്പോൾ വ്യത്യസ്തമായ ഒരു നിലയിലുള്ള പ്രതികരണമായിരിക്കും ഉണ്ടാകുക. ', 'അതുകൊണ്ട് നമ്മൾ പറയുന്നത് എല്ലാ സാമ്പിളുകളും ഒരേ ശക്തി നേടിയെടുക്കുന്നതുവരെ. ', 'സൾഫേറ്റ് പരിഹാരത്തിന് നാം അവയെ വിധേയമാക്കും. ', 'ഇപ്പോൾ നിങ്ങൾ ഈ രംഗത്ത് കാണാനാകുന്ന മറ്റ് സൾഫേറ്റ് ബന്ധപ്പെട്ട സംവിധാനങ്ങൾ. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷൻ എന്ന് വിളിക്കപ്പെടുന്ന ഒരു വസ്തു. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണിൽ ഉൾച്ചേർത്തിരിക്കുന്ന നിരകൾ. ', 'മണ്ണിന്റെ വായു ഇന്റർഫേസിൽ കൂടുതൽ നാശനഷ്ടങ്ങൾ ഉണ്ടാവുക, അത് നിരയുടെ ഭാഗത്ത് അല്ല. ', 'മണ്ണിൽ പൂർണമായും മുങ്ങിപ്പോയിരിക്കുന്നു. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷന്റെ അധിക ഫലങ്ങൾ. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷൻ പ്രധാനമായും ഉപ്പുകളുടെ അണുവിന് റെ ഉള്ളിലെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന്, റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന്. ', 'വെള്ളം നീരാവിയിലൂടെയും ഉപ്പിന്റെ ഉരുകൽ വഴിയും. ', 'സൾഫാറ്റിന്റെ വിവിധ രൂപങ്ങൾ തമ്മിലുള്ള മാറ്റം, അത് വികാസത്തിൽ മാറ്റം വരുത്തുന്നു അല്ലെങ്കിൽ. ', 'ജലങ്ങളില് ചേര് ന്നതിനാല് ക്രിസ്റ്റല് ലീവുകളുടെ അളവുകള് മാറ്റം. ', 'ജലാംശം മൂലം ക്രിസ്റ്റലിന്റെ വലിപ്പം മാറുന്നു. ', 'സിസ്റ്റത്തിലെ സമ്മർദ്ദം. ', 'ഇതിനു പുറമെ, ഞങ്ങൾ സംസാരിച്ച മറ്റ് വശങ്ങളും ഉണ്ട്. ', 'ഇത് ഒരു വിക്കി ആക്ഷൻ ആണ്. ഇത് ഇത്തരത്തിലുള്ള കേസുകളിൽ വളരെ പ്രധാനമാണ്. ', 'ഒരു വശത്ത് തികച്ചും വരണ്ടതും മറ്റേ വശത്ത് തികച്ചും വരണ്ടതുമായ ഒരു പരിസ്ഥിതിയും. ', 'രസകരമെന്നു പറയട്ടെ, നിങ്ങൾ വെള്ളം സിമന്റ് അനുപാതം കുറവാണെങ്കിൽ. ', 'നിങ്ങളുടെ സിസ്റ്റത്തിലെ വോട്ടെണ്ണൽ നിരക്ക് 0.45 ആണ് വോട്ടെണ്ണൽ നിരക്ക്. ', 'സക്ഷണം സംഭവിക്കും കാര്യമായി കുറയുന്നു. ', 'അതിനാൽ ഈ 0.45 ന്റെ അർത്ഥം രാസപരമായി മാത്രമല്ല, ', 'ഒരു ഭൌതിക ആക്രമണ കാഴ്ചപ്പാട്. ', 'പോർട്ട്ലാന്റ് സിമന്റ് അസോസിയേഷനിൽ നിന്നും ഉപ്പിന്റെ ക്രിസ്റ്റലൈസേഷന് റെ തെളിവുകളാണിവ. ', 'സിമന്റ് തരം 5 ഉള്ള കോൺക്രീറ്റുകളെ സംബന്ധിച്ചുള്ള പിസിഎ നടത്തിയ ദീർഘകാല പഠനമാണിത്. ', 'ഇരുവരും സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ് കൊണ്ടാണ് നിർമ്മിച്ചിരിക്കുന്നത്. ', 'ഒന്നിന് 0.65 എന്ന ഉയർന്ന വെള്ള സിമന്റ് അനുപാതമുണ്ട്, മറ്റൊന്നിന് 0.39 എന്നതും കാണാനാകും. ', 'വ്യക്തമായി പ്രകടനം. ', '12 വർഷത്തിനു ശേഷം കോൺക്രീറ്റിന്റെ കാഴ്ചശക്തി 5 ആയിരുന്നതിനാൽ അത് പരമാവധി മോശമായി. ', 'നില. ', 'ഇവിടെ 16 വർഷത്തിനു ശേഷവും കോൺക്രീറ്റിന് 2 റേറ്റിംഗ് ഉണ്ടായിരുന്നു. അതായത്, അത് വളരെക്കാലം. ', 'അത് പൂർണമായും തകര് ന്നുപോകും മുമ്പ് പോകേണ്ട വഴി. ', 'സൾഫേറ്റ് സംബന്ധിച്ച മിക്ക ഗവേഷണ പഠനങ്ങളിലും കാണിച്ചിരിക്കുന്നത്. ', 'വെള്ള സിമന്റ് അനുപാതം വളരെ പ്രധാനമാണ്. ', 'സൾഫേറ്റ് പ്രതിരോധം നിർണ്ണയിക്കുന്ന പ്രധാന ഘടകമാണ്. ', 'ഇപ്പോൾ മറ്റൊരു തരത്തിലുള്ള സൾഫേറ്റ് ആക്രമണം റിട്രോഗേറ്റ് രൂപീകരണം വൈകിപ്പിക്കുന്നു. ', 'ഇത് ആദ്യമായി കോൺക്രീറ്റിൽ കണ്ടെത്തിയത് എങ്ങനെയാണ്? ', 'യുകെയിലെ ചില റെയിൽവേ സ്ലീപ്പർമാർക്ക് ചില പിളർപ്പുകൾ കാണിക്കാൻ തുടങ്ങിയപ്പോഴാണ് ഇത് സംഭവിച്ചത്. ', 'റെയിൽവേ സ്ലീപ്പറുകൾ ഒരു പ്രീ-കാസ്റ്റ് യാർഡിൽ നിർമ്മിക്കുന്നു. സാധാരണയായി ഇവ പ്രീ-സ്ട്രെസ്ഡ് പ്രീ-കാസ്റ്റ് ആണ്. ', 'റെയിൽവേ സ്ലീപ്പറുകൾ സാധാരണയായി താപനിലയിലുള്ള കഠിനതയ്ക്ക് വിധേയമാണ്, അതിനാൽ കരുത്ത് വർദ്ധിപ്പിക്കുന്നു. ', 'ഈ ഉറങ്ങുന്ന വികസനവും മാപ്പ് ക്രാക്ക് അല്ലെങ്കിൽ ക്രമരഹിതമായി ക്രാക്ക് ശേഷം. ', '15 മുതൽ 20 വർഷം വരെ സേവനം ചെയ്തു. ', 'അങ്ങനെ അന്വേഷിച്ചവർ വിചാരിച്ചു ഇത് ആൽക്കലി സിലിക്കയുടെ പ്രതികരണത്തിന്റെ ഫലമാണെന്ന്. ', 'എന്നാൽ പിന്നീട് അവർ കണ്ടത് ആ പ്രതികരണ സംയുക്തം സിസ്റ്റത്തിൽ ഇല്ലായിരുന്നു എന്നാണ്. ', 'ഈ പിളര് ക്കുകള് മറ്റൊരിടത്തേക്കും ബന്ധിപ്പിച്ചിരിക്കണം. ', 'അങ്ങനെ അവർ സൂക്ഷ്മമായ വിശകലനം ചെയ്യുമ്പോൾ ഈ കോൺക്രീറ്റ്. ', 'ഈ സിസ്റ്റത്തിൽ എത്രിന്ജിറ്റിന്റെ രൂപീകരണം കാണിക്കുന്നു. ', 'വാസ്തവത്തില് അവര് പിളര് ക്കുകളുടെയും ശൂന്യതകളുടെയും സ്ഥലങ്ങള് പിടിച്ചടക്കാൻ തുടങ്ങി. ', 'അല്പം കഴിഞ്ഞ് ഞാന് ചില ചിത്രങ്ങള് കാണിച്ചു തരാം. ', 'സിമന്റ് പേസ്റ്റും അഗ്രഗേറ്റും തമ്മിലുള്ള ഇന്റർഫേസ് ഇതാണ്. ', 'ഈ ഇന്റർഫേസിൽ സൂക്ഷിച്ചിരിക്കുന്നതും നിങ്ങൾക്ക് ഇന്റർഫേസ് മുഴുവൻ എട്രിംഗൈറ്റ് കാണാൻ കഴിയും. ', 'ഈ കൂട്ടായ്മകളിൽ പലതും എത്രിന്ജിറ്റിന്റെ രൂപീകരണം കാണുന്നു. ', 'അതായത്, ഈ മൈക്രോസ്ട്രക്ചറൽ പഠനത്തിൽ ഇത് കണ്ടെത്തി, പിന്നെ അവർ ഒരു നിഗമനത്തിലെത്തി. ', 'ഈ എത്രിന്ജിറ്റ് സിസ്റ്റം പരിഷ്കരിച്ചതായിരിക്കും. ', 'കാരണം, ആദ്യഘട്ടങ്ങളിൽ അത് രൂപപ്പെടാൻ കഴിഞ്ഞില്ല, ഈ ആദ്യഘട്ടത്തിൽ എട്രിംഗിറ്റിന്റെ. ', 'സിസ്റ്റം താപനിലയിൽ കഠിനമായി പാകപ്പെടുന്നതുകൊണ്ടാണ് ഇത് സംഭവിക്കുന്നത്. ', 'നിങ്ങൾ വളരെ ഉയർന്ന താപനില സിസ്റ്റം നൽകുന്നു എങ്കിൽ, നാം സാധാരണയായി സംസാരിക്കുന്നത്. ', '70 ഡിഗ്രി സെൽഷ്യസ് കൂടുതലുള്ള താപനിലയിൽ ഈ ഘട്ടത്തിൽ എത്രിന്ജിറ്റ് രൂപപ്പെടുക. ', 'അഥവാ നിങ്ങൾക്ക് സുൽഫേറ്റുകൾ ഉണ്ടെങ്കിൽ അവ എളുപ്പത്തിൽ. ', 'സൾഫേറ്റുകൾ തുടക്കത്തിൽ എളുപ്പത്തിൽ ലയിക്കുന്നില്ലെങ്കിൽ നിങ്ങൾ. ', 'സാധാരണ ബെറ്റണിന് റെ പോലെ ആദ്യഘട്ടങ്ങളിൽ എത്രിന്ജിറ്റിന് രൂപം കിട്ടും. ', 'അതിനാൽ എത്രിന്ജിറ്റ് രൂപീകരണം പ്രധാനമായും നീരാവിയിൽ ഉയർന്ന താപനിലയിൽ അടയ്ക്കുന്നതാണ്. ', 'സിസ്റ്റത്തിൽ സൾഫേറ്റുകളുടെ വളരെ കുറഞ്ഞ ലയിക്കുന്നതാണെങ്കിൽ വീണ്ടും എട്രിംഗൈറ്റ്. ', 'രൂപീകരണം. തടയാം. ', 'അങ്ങനെ, ഈ സൾഫേറ്റുകൾക്ക് സംഭവിക്കുന്നത്, അവ നേരത്തെ പുറത്തിറങ്ങാത്തതുകൊണ്ട് അവ. ', 'സി. എസ്. എച്ച്. യിൽ സൾഫേറ്റുകൾ സി. എസ്. എച്ച്. യിൽ ആഗിരണം ചെയ്യപ്പെടുന്നു. ', 'വാസ്തവത്തില് ചൂട് കറക്കുന്ന സിമന്റിനെ അല്ലെങ്കിൽ ചൂട് കറക്കുന്ന കോൺക്രീറ്റ് എടുക്കുകയാണെങ്കിൽ നിങ്ങള് വളരെ വ്യക്തമായി കാണും. ', 'സി. എസ്. എച്ച്. യുടെ വിശകലനം ചെയ്യുമ്പോൾ അതിൽ ധാരാളം സൾഫർ അടങ്ങിയിരിക്കുന്നതും ഈ സൾഫേറ്റ്. ', 'അത് റ്റ്രിംഗിറ്റ് അല്ലെങ്കിൽ മോണോ സൾഫേറ്റ് പോലുള്ള പ്രതികരണ ഉൽപ്പന്നങ്ങളിലേക്ക് പോയിരിക്കുമായിരുന്നു. ', 'അതുകൊണ്ട് ഈ സൾഫേറ്റുകൾ CSH ലേക്ക് പോകുന്നു, പിന്നീട് ഈർപ്പം ഉള്ളപ്പോൾ അലുമിനേറ്റുകളുമായി വീണ്ടും സംയോജിപ്പിക്കുന്നു. ', 'കഠിനമായ ബെറ്റണിൽ എത്രിന്ജിറ്റ് രൂപീകരിക്കാൻ ലഭ്യമാണ്, ഇത് വിപുലമായ സമ്മർദ്ദത്തിന് കാരണമാകുന്നു. ', 'അത് നിങ്ങളുടെ ബെറ്റണിന്റെ തകരാൻ കാരണമാകും. ', 'വീണ്ടും ഇത് ചൂട് കറക്കിയ ബെറ്റണിന്റെ തെളിവാണ്. ', 'ഇന്റർഫേസൽ ട്രാൻസിഷൻ സോണിൽ. ', 'രസകരമെന്നു പറയട്ടെ, സൂക്ഷ്മമായ തെളിവുകൾ കാണിച്ച ഗവേഷണങ്ങളുടെ ഒരു ഭാഗം. ', 'ഇടിസിലും, പിളർപ്പുകളിലും വലിയ ശൂന്യതകളിലും എത്രിന്ജിറ്റ് രൂപം കൊണ്ടിരുന്നു. ', 'ഈ ശൂന്യത പൂർണമായും എത്രിന്ജിറ്റിലാണ് നിറഞ്ഞിരിക്കുന്നത്. ', 'അതുകൊണ്ട് പല ഗവേഷകരും വിശ്വസിച്ചു. ', 'സൾഫേറ്റുകളുടെ വൈകി പുറത്തിറക്കലിന് പുറമെ, പാലിക്കേണ്ടിയിരുന്ന മറ്റ് അവസ്ഥ. ', 'സിസ്റ്റത്തിൽ സൂക്ഷ്മമായ നുറുക്കുകളും ശൂന്യതകളും ഉണ്ടായിരുന്നു. ', 'ഗവേഷകർ നേരത്തെ വിശ്വസിച്ചതും ഇതുതന്നെ. ', 'പക്ഷെ പിന്നീട് ഈ പ്രതിഭാസം മനസ്സിലാക്കിയതോടെ ആളുകൾ ഒരു ധാരണയിലെത്തി. ', 'പോറുകളിലും ശൂന്യതകളിലും രൂപപ്പെടുന്ന എത്രിന്ജിറ്റല്ല വിപുലീകരണത്തിന് കാരണമാകുന്നത്. ', 'സി. എസ്. എച്ച്. യിൽ രൂപപ്പെടുന്ന എത്രിന്ജിറ്റാണ് വിപുലീകരണത്തിന് കാരണമാകുന്നത്. ', 'ഈ സി. എസ്. എച്ച്. എൽ. എഫിന് വളരെ ചെറിയ ഇടം ഉണ്ട്. ', 'എത്രിന്ജിറ്റ് രൂപപ്പെടുകയാണെങ്കിൽ, അത് ഒരു വിപുലീകരണം സൃഷ്ടിക്കുന്നു. ', 'ഇവിടെ നിന്നും എത്രിന്ജിറ്റ് നവീകരിക്കാൻ കഴിയുന്ന മേഖലകളിലേക്ക് പോകുന്നു. ', 'അവ വളര് ന്നു വളര് ന്നു, വളരെ വലിയ നിക്ഷേപങ്ങള് രൂപീകരിക്കുന്നു. ', 'ഉദാഹരണത്തിന്, ശൂന്യതയുള്ള സ്ഥലങ്ങളിലേക്ക്, കൂടുതൽ പൊറസ് ഉള്ള ഇന്റർഫേസൽ ട്രാൻസിഷൻ സോണിലേക്ക്. ', 'സിസ്റ്റത്തില് ലഭ്യമാണ്. ', 'അങ്ങനെ, പോറുകളിലും, ശൂന്യതകളിലും, പിളർപ്പുകളിലും എത്രിന്ജിറ്റിന്റെ രൂപീകരണം. ', 'നിങ്ങളുടെ വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണത്തിന്റെ ഒരു ഭാഗം. ', 'തുളുമ്പുകളും ശൂന്യതകളും. ', 'അതിനാൽ ഡിഎഫ് കാരണം പ്രാഥമിക എത്രിന്ജിറ്റ് സിഎസ്എച്ചിൽ ഇപ്പോഴും രൂപപ്പെടുന്നു. ', 'ഒടുവിൽ എത്രിന്ജിറ്റ് ന്യൂക്ലിയേറ്റ് ചെയ്യാനും വളര് ന്നതിനും കഴിയുന്ന മേഖലകളിലേക്ക് നീങ്ങുന്നു. ', 'വളരെ വലിയ തോതിൽ. ', 'ഇത് ഗവേഷകരുടെ ചർച്ചാ വിഷയമായിരുന്നു. പക്ഷെ പിന്നീട് അത് വ്യക്തമായി. ', 'സി. എസ്. എച്ച്. യിൽ എട്രിംഗിറ്റ് രൂപീകരണം ക്രാക്ക് ചെയ്യുകയും പിന്നീട് എട്രിംഗിറ്റ് വീണ്ടും നിക്ഷേപിക്കുകയും ചെയ്യുന്നുവെന്ന് കാണിച്ചു. ', 'അത് അവിടെയാണു രൂപപ്പെട്ടതെന്ന് വിശ്വസിക്കാൻ ആളുകളെ പ്രേരിപ്പിക്കുന്ന വിള്ളലുകളിലായിരുന്നു അത്. ', 'അപ്പോൾ ഡിഎഫ് ശരിക്കും ഒരു പ്രശ്നമാണോ? ', 'നിങ്ങളുടെ ബെറ്റണിന്റെ താപനില 70 ഡിഗ്രിക്ക് താഴെയായി നിയന്ത്രിക്കുന്ന കാലത്തോളം അത് വേണ്ട. ', 'ഇപ്പോൾ നാം പലപ്പോഴും അറിയുന്നു ആ താപനില നീരാവി കറന്റ്, നിങ്ങൾ തീർച്ചയായും നിയന്ത്രിക്കാൻ കഴിയും. ', 'പമ്പിന്റെ താപനില 70 നു താഴെയാക്കുന്നതാണെങ്കിലും പ്രശ്നം സിമന്റിന് കാരണമാണ്. ', 'ജലാംശം ചേർക്കുമ്പോൾ ആദ്യഘട്ടങ്ങളിൽ ബെറ്റണിന്റെ ഉള്ളടക്കം വളരെ കൂടുതലാണ്. ', 'ചൂട് അതിനെ മയക്കിപ്പറഞ്ഞാൽ ആന്തരിക താപനില 70 ലധികം ഉയരാൻ സാധ്യതയുണ്ട്. ', 'അതുകൊണ്ട് നാം വളരെ ശ്രദ്ധാലുവായിരിക്കണം, പ്രത്യേകിച്ച് കോൺക്രീറ്റ് ചൂട് കഠിനമായി മലിനമാക്കുന്ന സമയത്ത്. ', 'ഉയർന്ന പ്രകടനമുള്ള കോൺക്രീറ്റുകൾ, സിമന്റ് ഉള്ളടക്കം കുറവായ വെള്ളത്തിൽ വളരെ കൂടുതലുള്ള സിമന്റ്. ', 'അനുപാതങ്ങള്. ', 'എന്നാൽ ഉയർന്ന പ്രകടനമുള്ള കോൺക്രീറ്റുകളുമായി ബന്ധപ്പെട്ട്, നിങ്ങൾ മറ്റൊരാളെ നോക്കണം. ', 'വശം. ', 'സിസ്റ്റത്തിൽ വളരെ ചെറിയ പൊറസ് ഉണ്ടെന്നത് വളരെയധികം ഈർപ്പം അനുവദിക്കില്ല. ', 'ഈ തരത്തിലുള്ള ബെറ്റണിന് റെ അകത്ത് കയറാൻ. ', 'ഈർപ്പം ലഭ്യമല്ലാത്ത പക്ഷം എത്രിന്ജിറ്റ് വികസനം സിസ്റ്റത്തിൽ സംഭവിക്കില്ല. ', 'അങ്ങനെ നിങ്ങൾ ഒരു ബെറ്റണിനെ തിരഞ്ഞെടുത്താൽ, അത് കുറഞ്ഞ വെള്ളം സിമന്റ് അനുപാതമുള്ളതാകും. ', 'സിസ്റ്റത്തിൽ നിങ്ങൾ അനുയോജ്യമാക്കിയ ആദ്യഘട്ട പ്രക്രിയകൾ പരിഗണിക്കാതെ തന്നെ ഡിഎഫിന്. ', 'പോസോളാനിക് വസ്തുക്കളുടെ ഉപയോഗവും സഹായിക്കുന്നു. ', 'എന്തിന്? ', 'വീണ്ടും നാം സിസ്റ്റത്തിന്റെ പൊറസതയും സുതാര്യതയും കുറയ്ക്കുന്നു, പിന്നെ നമ്മൾ വീണ്ടും സൃഷ്ടിക്കുന്നു. ', 'പ്ളൈൻ പോർട്ട്ലാന്റ് എന്ന സ്ഥലത്തുള്ളതിനേക്കാൾ അല്പം താഴ്ന്ന പിഎച്ച് അവസ്ഥ. ', 'സിമന്റ്. ', 'അതുകൊണ്ട് പോസോളാനിക് കോൺക്രീറ്റുകളിലെ എത്രിംഗിറ്റ് രൂപീകരണം അത് നയിക്കുന്നത്ര വിപുലീകരണത്തിന് കാരണമാകില്ല. ', 'സാധാരണ സിമന്റിറ്റി കോണ്ഫീറ്റുകളില്. ', 'അതുകൊണ്ട് പോസോളാനിക് വസ്തുക്കൾ ചേർക്കുന്നതിലൂടെ ഗുണകരമായ ഫലങ്ങൾ ഉണ്ടാകും. ', 'ഒന്നാമതായി, ലഭ്യമായ അല് മിനേറ്റ് അളവ് കുറയ്ക്കുക, അത് എത്രിന്ജിറ്റ് രൂപീകരിക്കാൻ കഴിയും. ', 'നേരിട്ടുള്ള ഫലവും. ', 'പോസോളാനിക് വസ്തുക്കൾ ഉണ്ടെങ്കിൽ, എത്രിന്ജിറ്റ് രൂപീകരിക്കുന്ന അല് മിനേറ്റ് അളവ് കുറയുന്നു. ', 'അങ്ങനെ, ഉള്ളിൽ പൊസോളാനിക് വസ്തുക്കൾ ഉള്ളപ്പോൾ എത്രിന്ജിറ്റ് രൂപീകരണം യാന്ത്രികമായി കുറയുന്നു. ', 'സിസ്റ്റം. ', 'രാസ ആക്രമണത്തിന്റെ മറ്റു രൂപങ്ങളിലേക്ക് നീങ്ങുന്നു. ', 'അതുകൊണ്ട് സൾഫാറ്റിനെ കുറിച്ച് ഞങ്ങൾ ധാരാളം സംസാരിച്ചു. ', 'ക്ലോറൈഡ് ആക്രമണത്തെ നോക്കിയാൽ നമുക്ക് കൺട്രീറ്റ് എങ്ങനെ? ', 'ക്ലോറൈഡ് മൂലം മോശമാകുന്നതാണെങ്കിലും ഈ ക്ലോറൈഡ് എങ്ങനെ? ', 'ബെറ്റണിന് അകത്തു കടന്ന് അത് ആയുധം കയറ്റുന്ന ഉരുക്ക് നിലയിലെത്തുന്ന. ', 'ഉരുക്ക് പൊടിയിടുന്നതു വരെ. ', 'അതിനാൽ ക്ലോറിഡ് ആക്രമണത്തിന്റെ ഉൽപ്പന്നങ്ങൾ അല്ലെങ്കിൽ സിമന്റീഷ്യസ് ഹൈഡ്രേഷൻ ഉൽപ്പന്നങ്ങളുമായി ക്ലോറിഡ് പ്രതിപ്രവർത്തനം. ', 'സിസ്റ്റം വികസനത്തിന് കാരണമാകില്ല. ', 'ഉത്പന്നങ്ങളുടെ തരം യഥാർത്ഥത്തിൽ വികസനം കാരണമാകുന്നില്ല എങ്കിലും പ്രതികരണത്തിന്റെ തരം. ', 'വളരെ സമാനമാണ്. ', 'സൾഫേറ്റ് പ്രതികരണം ഓർക്കുക. ', 'ഇവിടെ C3A+ ക്ലോറിഡ് ഉണ്ട്, അത് ക്ലോറൊഅലുമിനേറ്റ് രൂപീകരണത്തിന് കാരണമാകും. ', 'C3A പ്ലസ് സൾഫേറ്റ് കാൽസ്യം സൾഫുലുമിനേറ്റ് രൂപീകരണത്തിന് കാരണമാകുന്നു. ', 'C3A + ക്ലോറിഡ് കാൽസ്യം ക്ലോറൊ അല് മിനേറ്റ് രൂപീകരിക്കും. ', 'ഫ്രൈഡലിന്റെ ഉപ്പ്, കാൽസ്യം, ക്ലോറൊഅലുമിനേറ്റ് എന്നിവയാണ് ഇതിന്റെ സാധാരണ രൂപങ്ങളിലൊന്ന്. ', 'കാൽസ്യം ക്ലോറോ അല്യുമിനേറ്റ് അടിസ്ഥാനപരമായി എട്രിംഗിറ്റ് രൂപീകരണത്തിന് സമാനമായ ഒരു രൂപീകരണമാണ്, ', 'സൾഫാറ്റിന് പകരം സിസ്റ്റത്തിൽ ക്ലോറൈഡ് ഉണ്ടെന്ന് മനസ്സിലാക്കുക. ഇത് ഗുണകരമാണ്. ', 'കാരണം നിങ്ങൾ ഒരു വികസനമില്ലാത്ത ഉൽപ്പന്നം രൂപപ്പെടുത്തുക മാത്രമല്ല, നിങ്ങൾ ഒരു കെണിയിൽ. ', 'നിങ്ങളുടെ ബെറ്റിന് റെ ഉള്ളില് കയറിയ ചില ക്ലോറിഡുകള്. ', 'നിങ്ങളുടെ ബെറ്റണിന് റെ ഉള്ളില് കയറുന്ന ക്ലോറിഡ് ആക്രമണത്തിന് റെ സൌജന്യ അവസ്ഥയില് ആയിരിക്കണം. ', 'ഉരുക്ക് ഉപരിതലത്തിൽ. ', 'ക്ലോറൈഡുകൾ സിമന്റ് ബന്ധിപ്പിക്കുന്നതുകൊണ്ട് നിങ്ങൾ അളവ് കുറയ്ക്കുന്നു. ', 'ചൊറൊസിനു കാരണമാകുന്ന ക്ലോറൈഡുകൾ. ', 'അതിനാൽ C3A ന്റെ സഹായത്തോടെ ക്ലോറൈഡ് ബന്ധിപ്പിക്കുന്നത്. ', 'ക്ലോറൈഡ് പരിഹാരങ്ങളും ഈ ബന്ധിപ്പിക്കുന്ന സംവിധാനവും നിങ്ങൾ പകരം വയ്ക്കുന്നുവെങ്കിൽ മെച്ചപ്പെടുത്താം. ', 'അല് മിനാ റ്റുകള് അടങ്ങിയിരിക്കുന്ന ധാതു ചേര് ണങ്ങളുള്ള സിമന്റിന്. ', 'ഉദാഹരണത്തിന്, കളിമണ്ണ്, നിങ്ങൾക്ക് സ്ലഗ് ഉണ്ട്, ഇവ സിസ്റ്റത്തിലേക്ക് ധാരാളം അലുമിനേറ്റ് സംഭാവന. ചെയ്യുന്നു. ', 'ഈ അലുമിനേറ്റുകൾ ക്ലോറൈഡ് അയോണുകളെ ഒരു വികസനമില്ലാത്ത ഉൽപ്പന്നമായി ബന്ധിപ്പിക്കും. ', 'അവസാനമായി, സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമ. ', 'ക്ലോറൈഡ് ആക്രമണത്തിൽ പ്രകടനം. ', 'സൾഫേറ്റ് ആക്രമണത്തില്, ഞങ്ങൾ സംസാരിച്ചത് താഴ്ന്ന സി 3 എയെക്കുറിച്ചാണ്. ', 'ക്ലോറൈഡ് ആക്രമണത്തില്, അത് വിപരീതമാണ്. ', 'നമുക്ക് ഉയർന്ന സിമന്റ് ആവശ്യമുണ്ട്. ', 'ചൊറൊസിനു പ്രതിരോധം. ', 'അതുകൊണ്ട് നാശന പ്രതിരോധം മെച്ചപ്പെടുത്തുന്നു, പ്രതിരോധം അല്ല. ', 'അതുകൊണ്ട് ഞാൻ നിങ്ങളെ മഗ്നീഷ്യം ക്ലോറൈഡ് ആക്രമണത്തിന്റെ ചില ചിത്രങ്ങൾ കാണിച്ചു തരാം. ', 'അതുകൊണ്ട് മഗ്നീഷ്യം അയൺ ഈ കേസിൽ പങ്കാളിയാണ്. ', 'അതിനാൽ നിങ്ങൾ യഥാർത്ഥത്തിൽ ഈ ഉപരിതലത്തിൽ ബ്രൂസൈറ്റ് എന്ന് വിളിക്കുന്ന ഒരു പാളി രൂപപ്പെടാൻ നയിക്കും. ', 'അല്ലെങ്കിൽ മഗ്നീഷ്യം ഹൈഡ്രോക്സൈഡ്. ', 'ഫ്രിഡെലിന്റെ ഉപ്പിന്റെ രൂപീകരണത്തിന് തെളിവുകളും ഉണ്ട്. ', 'കല് സിയം ക്ലോറോ അല് മിനേറ്റ് ആണ്. ', 'ചിലപ്പോഴൊക്കെ സി. എസ്. എച്ച്. യുമായി കലർന്ന അവസ്ഥയിലാണ് ഇത് രൂപപ്പെടുന്നത്. ', 'അതുകൊണ്ട് ക്ലോറൊഅലുമിനേറ്റ് നേരിട്ട് ഒറ്റ നിക്ഷേപമായി കണ്ടെത്താൻ സാധിക്കില്ല. ', 'ചിലപ്പോള് അത് സി. എസ്. എച്ച്. യുമായി കലര് ന്നുപോകും. ', 'രസകരമെന്നു പറയട്ടെ, ക്ലോറൈഡ് ആക്രമണത്തിന് നിങ്ങളുടെ സേവനത്തിന്റെ ദ്രാവകത വർദ്ധിപ്പിക്കാനാകും. ', 'കാരണം, നിങ്ങളുടെ കല് സിം ഹൈഡ്രോക്സൈഡ് വീണ്ടും പുറത്തുവരുന്നു. ', 'അതിനാൽ നിങ്ങൾ ഒരു ഖര ഉൽപ്പന്നം നീക്കം ചെയ്യുകയും ഉള്ളിൽ ഒരു പൊറസ് ഉണ്ടാക്കുകയും ചെയ്യുന്നു. ', 'കാരണം നിങ്ങളുടെ മറ്റു ഉൽപ്പന്നങ്ങളുടെ നിക്ഷേപം അത്രയല്ല. ', 'നിങ്ങളുടെ മിക്ക ഉൽപ്പന്നങ്ങളും പരിഹരിക്കാവുന്നവയാണ്. ', 'ഉദാഹരണത്തിന്, നിങ്ങളുടെ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ക്ലോറൈഡുമായി പ്രതിപ്രവർത്തനം ചെയ്താൽ, അത് എന്ത് രൂപം കൊള്ളും? ', 'വളരെ ലയിക്കുന്ന കാൽസ്യം ക്ലോറൈഡ് സിസ്റ്റത്തിൽ നിന്നും നീക്കം ചെയ്യപ്പെടുന്നു. ', 'മറ്റൊരു കേസിൽ, സൾഫേറ്റ് ആക്രമണം, കാൽസ്യം ഹൈഡ്രോക്സൈഡ് സൾഫേറ്റ് പ്രതികരിക്കുകയും. ', 'ജിപ്സും ജിപ്സും എളുപ്പത്തിൽ ലയിക്കാന് സാധിച്ചില്ല. ', 'അത് സിസ്റ്റത്തിൽ തുടരുകയും നിക്ഷേപമായി കാണപ്പെടുകയും ചെയ്തു. ', 'ഇവിടെ നിങ്ങൾ ഒരു വർദ്ധനവ് കാരണമാകുന്നു പൊറസ്സിറ്റി നെഗറ്റീവ് ഒന്നാണ്. ', 'ക്ലോറൈഡ് ആക്രമണത്തിന്റെ ഫലങ്ങൾ. ', 'എന്നാൽ മഗ്നീഷ്യം ക്ലോറൈഡ് ആക്രമണത്തിന് പുറമെ, പൊറസ്യം വർദ്ധിപ്പിക്കുന്നതിനു പുറമേ, ', 'ഉപരിതലത്തിന്റെ മാറ്റവും സിഎസ്എച്ചിന്റെ മഗ്നീഷ്യം സിലിക്കേറ്റ് ഹൈഡ്രേറ്റായി പരിവർത്തനം ചെയ്യലും. ', 'അത് ഇപ്പോഴും സിസ്റ്റത്തിൽ. സംഭവിക്കാം. ', 'സി. എസ്. എച്ച്. യിൽ നിന്ന് കല് സി്യം നീക്കം ചെയ്യുന്ന ഏത് സിസ്റ്റത്തിലും ഇത് സംഭവിക്കുമെന്ന് ഓർക്കുക. ', 'ഇവിടെ മഗ്നീഷ്യം സി. എസ്. എച്ച്. യിൽ നിന്നും കാൽസ്യം നീക്കം ചെയ്യും. ', 'നിങ്ങൾക്ക് ഒരു ആസിഡ് ഉണ്ടെങ്കിൽ, നമുക്ക് പറയാം, നിങ്ങൾക്ക് ഹൈഡ്രോക്ലോറിക് ആസിഡ് ഉണ്ടെങ്കിൽ, ആസിഡ് അവസ്ഥകൾ. ', 'സി. എസ്. എച്ച്. യിൽ നിന്നും കാൽസ്യം നീക്കം ചെയ്യുക. ', 'അപ്പോള് പോലും അത് സിലിക്ക ഹൈഡ്രേറ്റ് ഉണ്ടാക്കും. ', 'ഇത് ഏതെങ്കിലും മെറ്റൽ അടിസ്ഥാനത്തിലുള്ള സിലിക്കേറ്റ് ഹൈഡ്രേറ്റ് ഉണ്ടാക്കില്ല. ', 'ഇവിടെ മഗ്നീഷ്യം ഉണ്ടായാല് മഗ്നീഷ്യം സിലിക്കേറ്റ് ഹൈഡ്രേറ്റ് രൂപീകരിക്കും. ', 'അസിഡ് ആക്രമണത്തെ കുറിച്ച് നമുക്ക് വേഗം സംസാരിക്കാം. ', 'അസിഡ് ആക്രമണം പ്രധാനമായും മലിനജലമുള്ള പൈപ്പുകളിലെ പ്രശ്നമാണ്. ', 'മലിനജലം കൊണ്ടുപോകുന്ന കോൺക്രീറ്റ് പൈപ്പുകൾ ആസിഡ് ആക്രമണത്തിന് വിധേയമാണ്. ', 'ചില വ്യവസായ മലിനജലങ്ങളിൽ പോലും ചിലപ്പോൾ ആസിഡ് രൂപപ്പെടാം. ', 'ആസിഡുകൾ എവിടെ കണ്ടെത്താമെന്നതിന്റെ ചില ഉദാഹരണങ്ങൾ ഞാൻ കാണിച്ചുതരാം. ', 'കനൽ പൈപ്പുകളെക്കുറിച്ച് സംസാരിക്കുമ്പോൾ സാധാരണ പ്രശ്നം സൾഫറിന്റെ രൂപീകരണവുമായി ബന്ധപ്പെട്ടതാണ്. ', 'ആസിഡ്, സൾഫുറിക് ആസിഡ്, സൾഫേറ്റ്, ആസിഡ് അവസ്ഥ എന്നിവ ഉണ്ടാകും. ', 'അതുകൊണ്ട് ഇത് അടിസ്ഥാനപരമായി ജിപ്സസ് രൂപീകരണത്തിന് കാരണമാകും. ', 'എത്രിന്ജിറ്റ് രൂപം കൊള്ളുമോ? ', 'ഉപരിതലത്തിന് സമീപമുള്ള മേഖലകളില് അല്ല. ', 'ആസിഡ് ഉള്ളിടത്ത് എത്രിന് ഗിറ്റ് രൂപപ്പെടുകയില്ല. ', 'അതിനാൽ എത്രിന്ജിറ്റ് താഴ്ന്ന പിഎച്ചിൽ സ്ഥിരതയുള്ളതല്ല. ', 'ഉപരിതല മേഖലകളിലെ എട്രിംഗിറ്റിന്റെ. ', 'നിങ്ങൾ സൾഫേറ്റ് കടന്നിരിക്കാം എന്ന് കരുതുന്ന ഒരു പ്രോട്ടോടൈപ്പിൽ പ്രവേശിച്ചാൽ. ', 'എത്രിന് ഗിറ്റ് രൂപീകരണം ഇപ്പോഴും കാണാനാകുമെന്ന് കരുതുന്നു. ', 'അതുകൊണ്ട് ഗിപ്സസ് രൂപീകരണം സൾഫുറിക് ആസിഡ് ആക്രമണത്തിൽ സാധാരണമായ ഒരു പ്രതിഭാസമാണ്. ', 'ഇതില് നിന്ന് ജൈപ്സത്തിന്റെ രൂപീകരണം മൂലം ശക്തി നഷ്ടപ്പെടുകയും ഏറ്റവും പ്രധാനമായി നഷ്ടപ്പെടുകയും. ചെയ്യുന്നു. ', 'സിമന്റിറ്റിസ് സ്വഭാവമുള്ളതാണ്, കാരണം നിങ്ങളുടെ പിഎച്ച് കുറവാണ്, അത് നിങ്ങളുടെ സി. എസ്. എച്ച്. ', 'സൾഫുറിക് ആസിഡ് എന്നത് ബെറ്റണിന് കേടുപാടുകൾ വരുത്തുന്ന ഒരു തരം ആസിഡ് മാത്രമാണ്. ', 'മറ്റു പല സന്ദർഭങ്ങളിലും ഇത് സംഭവിക്കാം. ', 'വ്യവസായ ഉല് പ്പാദനത്തില് പലപ്പോഴും സൾഫുറിക് ആസിഡ്, നൈട്രിക് ആസിഡ്, ഹൈഡ്രോക്ലോറിക് ആസിഡ് എന്നിവ ഉപയോഗിക്കുന്നു. ', 'അതുകൊണ്ട് ഇവയെല്ലാം രൂപപ്പെടാം അല്ലെങ്കിൽ ഇവയെല്ലാം ഉപയോഗിക്കുന്ന കോൺക്രീറ്റ് ഘടനകളെ കേടുവരുത്താം. ', 'ചില ഘടനകൾ. ', 'കോണ്ക്രീറ്റ് കനാലുകൾ എന്നത് സൾഫുറിക് ആസിഡ് ആക്രമണം നടക്കുന്ന ഒരു പരിസ്ഥിതി ആണ്. ', 'ബാക്ടീരിയകളുടെ പ്രവർത്തനത്തെത്തുടർന്ന് ഇത് സൂക്ഷ്മാണുക്കളുടെ പ്രവർത്തനമാണ്. ', 'ഒരു മിനിറ്റിന് ശേഷം അതിനെക്കുറിച്ച് സംസാരിക്കാം. ', 'വ്യവസായ മാലിന്യങ്ങൾ പലപ്പോഴും ആസിഡ് സ്ട്രെയിനുകൾ വഹിച്ചേക്കാം. ', 'ഉദാഹരണത്തിന്, ബെറ്റോണിന്റെ വശങ്ങളില്. ', 'രസകരമെന്നു പറയട്ടെ, ജൈവ സ്രോതസ്സുകളിൽ നിന്നും ഉത്പാദിപ്പിക്കപ്പെടുന്ന ധാരാളം ആസിഡുകൾ ഉണ്ട്. ', 'അതിനാൽ കന്നുകാലി കൃഷിയിടങ്ങളിൽ സിലേജ് ഉത്പാദനം നടത്തുക, കന്നുകാലി കൃഷിയിടങ്ങളിൽ ധാരാളം ഓർഗാനിക് ഉത്പാദനം നടത്തുക. ', 'ലാക്റ്റിക് ആസിഡ്, ഓക്സാലിക് ആസിഡ് തുടങ്ങിയവ ഉത്പാദിപ്പിക്കാവുന്നതാണ്. ', 'മലിനജല സംസ്കരണ പ്ലാന്റുകൾ ആസിഡ് ഉത്പാദനം നടക്കുന്ന മറ്റു സ്ഥലങ്ങളാണ്. ', 'സിസ്റ്റത്തില്. ', 'ആസിഡ് ആക്രമണം എന്താണ്? ', 'നിങ്ങളുടെ പ്രാഥമിക പ്രതികരണം ലളിതമായി ഒരു ക്ലാസിക് ആസിഡ് അടിസ്ഥാനമാക്കിയുള്ള പ്രതികരണം ആണ്, കാരണം നിങ്ങൾക്ക് ആസിഡ് ഉണ്ട്. ', 'പുറം പരിസ്ഥിതിയിൽ നിന്നും നിങ്ങളുടെ കാൽസ്യം, ഹൈഡ്രോക്സൈഡും മറ്റ് അടിസ്ഥാന പദാർത്ഥങ്ങളും. ', 'സിമന്റ് ഹൈഡ്രേഷൻ ഉൽപ്പന്നങ്ങളുടെ ഉള്ളിൽ കാണപ്പെടുന്നു. ', 'അതിനാൽ, സിമന്റ് മാട്രിക്സ് മൈക്രോസ്ട്രക്ചറിന്റെ തകർച്ചയിലേക്ക് നിങ്ങൾ നയിക്കുന്നു. ', 'ഉപ്പുകളുടെ രൂപീകരണം. ', 'ചില ഉപ്പുകള് ലയിക്കുന്നതും ചിലത് ലയിക്കാത്തതും ആണ്. ', 'അതിനാൽ, നിങ്ങൾക്ക് ഉപ്പുകൾ ഉണ്ടെങ്കിൽ, നിങ്ങളുടെ പൊറസ്സിറ്റി വർധിക്കും. ', 'അസംസ്കൃതമായ ഉപ്പുകൾ ഉണ്ടെങ്കിൽ അവയുടെ അസംസ്കൃതതയും വികാസവും ഉണ്ടാകാം. ', 'ഈ ഉപ്പുകള് സിസ്റ്റത്തില്. ', 'അസിഡ് ആക്രമണത്തിൽ എന്ത് സംഭവിക്കും? ', 'അതായത്, ഈ ഉൽപ്പന്നങ്ങൾ ഹൈഡ്രേറ്റേഷൻ ഉൽപ്പന്നങ്ങളാണ്. പുറത്ത് ആസിഡ് പരിഹാരം ഉണ്ട്. ', 'ആസിഡിന്റെയും പ്രോട്ടോണിന്റെയും ആനിഒണുകൾ ഉണ്ട്. ', 'കല് സി യം വഹിക്കുന്ന ജീവികളുടെ പുറകോട്ട് നീക്കം ഉണ്ടായിരിക്കുമ്പോൾ സിലിക്കോൺ. ', 'അലോമിനിയവും നിങ്ങളുടെ ഹൈഡ്രോക്സില് ഐണുകളും. ', 'പുറംഭാഗത്ത് നിന്ന് പുറത്ത് വരെയുള്ള ഇടപെടലിലൂടെയാണ് ഈ മേഖല രൂപപ്പെടുന്നത്. ', 'സ്പീഷീസ്, അകത്തേക്ക് നീങ്ങുന്ന സ്പീഷീസ്. ', 'ഈ മേഖല അടിസ്ഥാനപരമായി ആസിഡ് അല്ലെങ്കിൽ വസ്തുക്കളുടെ തരം ആണ്. ', 'പ്രതികരണ സംവിധാനമാണ്. ', 'പിന്നെ നിങ്ങളുടെ ഹൈഡ്രേറ്റഡ് ഉൽപ്പന്നങ്ങള് ക്ക് എന്ത് സംഭവിക്കും? ', 'അവസാനം, നിങ്ങൾക്ക് മാസ് നഷ്ടപ്പെടും, സാമ്പിളിന്റെ സമഗ്രത നഷ്ടപ്പെടും, ആൽക്കലിനെ നഷ്ടപ്പെടും. ', 'ഫലമായി ഇലാസ്റ്റിക് മോഡ്യൂളിലെ കരുത്ത് കുറയുന്നു, ', 'അര് ഹതത വർദ്ധിപ്പിക്കുകയും ഒടുവിൽ പിഎച്ച് കുറവ്. ', 'ആസിഡ് ആക്രമണം സാധാരണയായി ആസിഡ് ആക്രമണം ആസിഡ് ആയുധം ശക്തിപ്പെടുത്തുന്നതിനു കാരണമാകും. ', 'ഇപ്പോൾ കൂടുതൽ വ്യക്തമായി പറഞ്ഞാൽ, കോൺക്രീറ്റ് കനാലുകളിലെ ആസിഡ് ആക്രമണം നോക്കിയാൽ, അത് വളരെ രസകരമാണ്. ', 'നിങ്ങളുടെ മലിനജല പൈപ്പിന്റെ താഴത്തെ പകുതിയിൽ സാധാരണയായി കൊണ്ടുപോകുന്ന മലിനജലമുള്ളതിനാൽ നിങ്ങൾക്ക് ഒരു പ്രശ്നമുണ്ട്. ', 'മലിനജലത്തിനകത്ത് അനേറോബിക് ബാക്ടീരിയകളോ സൾഫേറ്റ് കുറയ്ക്കുന്ന ബാക്ടീരിയകളോ ഉണ്ട്. ', 'ഹൈഡ്രജൻ സൾഫേറ്റ് ഗ്യാസ് ഉത്പാദനം. ', 'ഈ ഗ്യാസ് മുകളിലേക്ക് ഉയരുന്നു, അത് പ്രവർത്തിക്കുന്ന പൈപ്പിന്റെ മുകളിലെ തലത്തിൽ കഠിനമായി കത്തിക്കുന്നു. ', 'സൾഫർ ഓക്സിഡൈസ് ചെയ്യുന്ന ബാക്ടീരിയകളോ എയ്റോബിക് ബാക്ടീരിയകളോ ഉപയോഗിച്ച് ഈ എയ്റോബിക് ബാക്ടീരിയകൾ. ', 'പുറത്ത് നിന്ന് സൾഫുറിക് ആസിഡ് ഉത്പാദിപ്പിക്കുന്നത്. ', 'അതിനാൽ നിങ്ങളുടെ പൈപ്പുകളുടെ കിരീടത്തിൽ ആസിഡ് അവസ്ഥ സൃഷ്ടിക്കുന്നു. ', 'പൈപ്പിന്റെ ഭാഗം കേടുപാടുകൾക്ക് വിധേയമായിരിക്കാം. ', 'അതിനാൽ, നിങ്ങൾ അടിസ്ഥാനപരമായി സിമന്റിസസ് വസ്തുക്കൾ നോക്കിയാൽ ആക്രമിച്ചു. ', 'നിങ്ങളുടെ ജൈവപരമായി ഉളവാക്കിയ സൾഫുറിക് ആസിഡ് ആക്രമണം, നിങ്ങൾ ഉപരിതലത്തിൽ ഉണ്ടാകും ഒരു. ചെറിയ. ', 'ബാക്ടീരിയയുടെ പ്രവർത്തനത്തെത്തുടർന്ന് രൂപപ്പെടുന്ന ബയോഫിലിം, ', 'നിങ്ങളുടെ സാമ്പിളിലെ ഒരു ആഴത്തിൽ ജിപ്സം രൂപപ്പെടുക. ', 'ഈ ജിപ്സസ് രൂപീകരണം സൾഫുറിക് ആസിഡ് ആക്രമണത്തിന്റെ ഫലമാണ്. ', 'ഉള്ളില് ഇരിക്കുന്ന സിമന്റിറ്റി വസ്തു. ', 'കാലക്രമേണ, നിങ്ങളുടെ സിമന്റിറ്റിയസ് സ്വഭാവം നഷ്ടപ്പെടും. ', 'ഉയർന്ന ആസിഡ് സാന്ദ്രതയും pH കുറയുകയും ചെയ്താൽ. ', 'നിങ്ങളുടെ സിമന്റിസസ് ഘട്ടങ്ങളുടെ വിഘടിപ്പനം. ', 'ഇത് വീണ്ടും ഒരു കനാലിന്റെ ചിത്രമാണ്. വലതുഭാഗത്ത് നിങ്ങൾക്ക് മിക്കവാറും എല്ലാ. ', 'അല്ലെങ്കിൽ ബലികേന്ദ്രീകരണത്തിനു ചുറ്റുമുള്ള മിക്കവാറും എല്ലാ കോൺക്രീറ്റുകളും നീക്കം ചെയ്യപ്പെടുന്നു. ', 'ബലപ്പെടുത്തൽ കരിങ്കുഴലായി കാണാനാവുന്നില്ല. ബെറ്റണിന്റെ മുഴുവൻ ഭാഗവും. പൂർണമായി. ', 'നീക്കം ചെയ്തു. ', 'ഇവിടെ വീണ്ടും ഒരു ചിത്രം മ്യൂറിയാറ്റിക് ആസിഡ് ആക്രമണത്തിൽ നിന്ന്. ', 'ഒരു വ്യവസായത്തിൽ നിന്നും വന്ന ആസിഡ്, ഇവിടെ ആസിഡ് ആക്രമണത്തിന്റെ തെളിവ് വ്യക്തമായി കാണാം, കാരണം. ', 'എല്ലാ സംയുക്തങ്ങളും അവശേഷിക്കുന്നു. ', 'ഇവ സിലിസിയസ് അഗ്രഗേറ്റാണ് അവ അവശേഷിക്കുന്നു പാസ്റ്റു പൂർണമായും. ', 'ആസിഡില് നിന്നും പിരിച്ചുവിടപ്പെട്ട്. ', 'സിലിസിയസ് ആയ ആഗ്രേറ്റിന് നേരിട്ട് ആസിഡ് ആക്രമണം നടത്താറില്ല. ', 'അസിഡ് ആക്രമണത്തിനെതിരെ സംരക്ഷണ സംവിധാനം പറയാമോ? ', 'നമ്മൾ സിലിസിയസ് അഗ്രേറ്റിനെ കാർബണേറ്റ് അഗ്രേറ്റുമായി മാറ്റിസ്ഥാപിച്ചാൽ എന്ത് സംഭവിക്കും? ', 'അസിഡിന് റെ ഫലമായി അഗ്രഗേറ്റുകളും കേടായിപ്പോകും. പക്ഷേ അത് നല്ല കാര്യമാണ്. ', 'സമാനമായി കേടുപാടുകൾ സംഭവിക്കുന്ന സംയുക്തവും പേസും. ', 'അങ്ങനെ നിങ്ങളുടെ ബെറ്റണിന്റെ ക്രോസ് സെക്ഷന്റെ ഏകീകൃത നഷ്ടം ഉണ്ടാകും. ', 'അഗ്രഗേറ്റുകൾ ചേർക്കുമ്പോൾ പേസ്റ്റ് പൂർണമായും പിരിച്ചുവിടുകയും അഗ്രഗേറ്റുകൾ ചിതറുകയും. ചെയ്യുന്നു. ', 'അതുകൊണ്ട് സിസ്റ്റത്തിൽ ഒരു ബന്ധനവും ഇല്ല. ', 'പലപ്പോഴും ആളുകൾ ഉപയോഗിക്കുന്നത് സിലിസിയസ് ആഗ്രേറ്റുകളേക്കാൾ കല്മണ് അഗ്രേറ്റുകളാണ്. ', 'അരി കല് പവും അസിഡ് പരിഹാരത്തിൽ പതുക്കെ നശിപ്പിക്കപ്പെടുന്നു. ', 'അതുകൊണ്ട് കല് പമണിയുടെ സംയുക്തം ഉപയോഗിക്കുന്നത് സൾഫുറിക് ആസിഡ് എക്സ്പോഷർ കുറയ്ക്കുന്നതിനുള്ള നല്ലൊരു മാർഗമാണ്. ', 'അല്ലെങ്കിൽ ഏതെങ്കിലും ആസിഡ് എക്സ്പോഷർ. ', 'ഇതുകൂടാതെ, കാൽസ്യം അല് മിനേറ്റ് സിമന്റ് പോലുള്ള പ്രത്യേക സിമന്റ് ഉപയോഗിക്കാം. ', 'ആസിഡ് ആക്രമണത്തിന് റെ വളരെ ഉയർന്ന പ്രതിരോധം. ', 'വീണ്ടും ഇത് നമുക്ക് വേണ്ടാത്ത വിവിധ ഘട്ടങ്ങളുടെ വിവരണം നൽകുന്നു. ', 'ഇത് കൂടുതൽ വിശദമായി നോക്കൂ. ', 'കെമിക്കൽ സൾഫുറിക് ആസിഡ് ആക്രമണവും ജൈവ ഉത്പാദനവും തമ്മിൽ വ്യത്യാസമുണ്ട്. ', 'സൾഫുറിക് ആസിഡ് ആക്രമണം. ', 'വീണ്ടും, സിസ്റ്റത്തിൽ നിങ്ങൾ രൂപപ്പെടുത്തുന്ന ഉൽപ്പന്നങ്ങളുടെ തരം, ', 'നിങ്ങളുടെ സൂക്ഷ്മഘടന തികച്ചും വ്യത്യസ്തമായിരിക്കാം. ', 'അതുകൊണ്ട് ഈ കേസിൽ കൂടുതൽ ചർച്ചയ്ക്കായി അല്ല, നിങ്ങളുടെ വിവരത്തിനു വേണ്ടിയാണ് ഞാൻ ഇത് നൽകുന്നത്. ', 'അങ്ങനെ മലിനജല ശൃംഖലകൾ സിമന്റീഷ്യൻ വസ്തുക്കൾക്ക് വളരെ ആക്രമണാത്മകമായ ഒരു പരിസ്ഥിതി നൽകുന്നു. ', 'നന്ദി. ', 'നന്ദി.']
2024-02-23 12:41:08,352 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: local variable 'firstLet' referenced before assignment. Input text: ['ഇന്ന് നാം സൾഫേറ്റ് ആക്രമണത്തെക്കുറിച്ചുള്ള ചർച്ച പുനരാരംഭിക്കും. ', 'കഴിഞ്ഞ ക്ലാസിൽ, സൾഫേറ്റുകൾ സിമന്റീഷ്യസ് സിസ്റ്റത്തിലേക്ക് എങ്ങനെ? കടക്കുന്നു, ', 'സിമന്റ് ഫാസുകൾ ജലാംശം വച്ച് ഉപരിതലത്തിൽ നിന്ന് വ്യത്യസ്ത തരം സംയുക്തങ്ങൾ രൂപപ്പെടുത്തുന്നു. ', 'അകത്തേക്കു പോകുക. ', 'എത്രിന് ഗൈറ്റ് രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുമോ എന്നതിനെക്കുറിച്ച് നമുക്ക് അല്പം സംസാരിക്കാം. ', 'തീർച്ചയായും, എത്രിന്ജിറ്റിന് വികസനത്തിന് സാധ്യതയുള്ള ഒരു ഘടനയുണ്ടെന്ന് നമുക്കറിയാം. ', 'ഈര് ന്നം കുടിച്ചുകൊണ്ട് പ്രധാനമായും ഈര് ന്നം വലിച്ചെടുക്കുന്നതിലൂടെയാണ് ഈര് ന്നം വലിച്ചെടുക്കുന്നത്. ', 'അത് തകര് ക്കാന് കാരണമാകുന്ന ഒരു പരിസ്ഥിതി, ശരിയാണ്. ', 'എന്നാൽ നേരിട്ടുള്ള തെളിവ് എന്താണെന്നും എത്രിന്ജിറ്റിന്. ', 'ബെറ്റിന് റെ സിസ്റ്റം വിപുലീകരിക്കാന് കാരണമാകുന്നു. ', 'പ്രഥമ എത്രിന്ജിറ്റ് പ്രക്രിയയുടെ ആദ്യഘട്ടത്തിൽ രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റാണ് എന്ന് നമുക്കറിയാം. ', 'സിമന്റ് ഹൈഡ്രേഷനിൽ, സിമന്റ് അല് മിനേറ്റുകൾ പോലുള്ള ഘട്ടങ്ങൾ. ', 'സിമന്റിന് ചേര് ന്ന സൾഫേറ്റ്, ആദ്യകാല എട്രിംഗിറ്റും ഈ ആദ്യകാല എട്രിംഗിറ്റും. ', 'പിന്നീട് മോണോ സൾഫേറ്റായി മാറുന്നു, കാരണം സിസ്റ്റത്തിൽ അമിതമായ അല് മിനേറ്റ് ഉണ്ട്. ', 'ഇപ്പോൾ പ്രാഥമിക എത്രിന്ജിറ്റ് രൂപീകരണത്തിന്റെ തെളിവുകളും ഉണ്ട്. അത് സിമന്റുകളിൽ സംഭവിക്കുന്നു. ', 'സൾഫേറ്റ് കൂടുതലുള്ള സ്ഥലത്ത്. ', 'അതായത്, നീ വളരെ ദീർഘകാലം എത്രിന്ജിറ്റ് നിക്ഷേപിക്കുന്നത് തുടരുന്നു. ', 'ശരി, ശരി. ', 'ഇത് സംഭവിക്കുന്നത് സൾഫാറ്റിന്റെ ആന്തരിക സ്രോതസ്സുകളാണ്. ', 'ബാഹ്യ എത്രിന്ജിറ്റ് എന്നത് ബാഹ്യ പരിസ്ഥിതികളിൽ നിന്ന് വരുന്ന സൾഫേറ്റുകൾ ഉണ്ടാകുമ്പോൾ. ', 'സൾഫാറ്റിന്റെ അകലം പുറത്ത് നിന്ന്. ', 'ഇതിനു പുറമെ, വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണം നാം വിളിക്കാം. ', 'ആന്തരികമായി അടിച്ചമർത്തപ്പെട്ട എത്രിന്ജിറ്റിന്റെ രൂപീകരണം, അത് പിന്നീട് വളരുന്നു. ', 'ഇതിനർത്ഥം ചില കാരണങ്ങളാൽ ആദ്യഘട്ടങ്ങളിൽ എട്രിംഗിറ്റ് രൂപപ്പെടുന്നില്ലെന്നും. ', 'ചില ഘടകങ്ങളുടെ കൂട്ടായ്മ അതിനെ കഠിനമായ അവസ്ഥയില് രൂപീകരിക്കാൻ കാരണമായി. ', 'വ്യക്തമായും, കഠിനമായ ബെറ്റണിന്റെ ഉള്ളിൽ ഒരു വിപുലമായ വസ്തു രൂപം കൊള്ളുമ്പോൾ. ', 'നിങ്ങൾക്കു് ഇതിലൂടെ വലിയ നാശനഷ്ടങ്ങൾ ഉണ്ടാകുന്നു. ഇത് ഡിഎഫ് അല്ലെങ്കിൽ വൈകിയ എട്രിംഗിറ്റ് എന്നും അറിയപ്പെടുന്നു. ', 'രൂപീകരണം, ശരി. ', 'ഇത് വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണത്തിന് വേണ്ടി ഉപയോഗിക്കുന്ന പൊതുവായ ഒരു പദാവലി ആണ്. ', 'പൊതുവേ പറഞ്ഞാൽ, സൾഫേറ്റ് ആക്രമണ പ്രക്രിയ ഏതൊരു വൈകി എത്രിന്ജിറ്റ് രൂപീകരണം നയിക്കുന്നു. ', 'കഠിനമായ ഘട്ടങ്ങള്. ', 'അതുകൊണ്ട് എത്രിന്ജിറ്റിന്റെ രൂപീകരണം ഒരു സെക്കൻഡറി എത്രിന്ജിറ്റിന്റെ രൂപീകരണം ആണ്. ', 'അതായത്, സാധാരണമായ ഘടകങ്ങളാൽ രൂപപ്പെടുന്ന പ്രാഥമിക എത്രിന്ജിറ്റിൽ നിന്നും നാം അതിനെ വേർതിരിക്കുന്നു. ', 'സിമന്റിന്. ജലാംശം, ശരി. ', 'ഇപ്പോൾ നിങ്ങൾ നോക്കിയാൽ ഉത്പാദനം കാരണം രൂപം കൊണ്ട ക്രിസ്റ്റലിൻ വസ്തുക്കളുടെ തരം. ', 'എത്രിന്ജിറ്റിന്റെ എത്രിന്ജിറ്റിന് നഖം രൂപം കിട്ടുന്നു. ', 'അങ്ങനെ എത്രിന്ജിറ്റ് നീണ്ട അളവിലുള്ള സൂചികളെ പോലെ രൂപപ്പെടുന്നു. ', 'എത്രിന്ജിറ്റിന്റെ നീളവും കനം അനുപാതവും ചുറ്റുമുള്ള പരിസ്ഥിതിയുടെ പിഎച്ചിനെ ആശ്രയിച്ചിരിക്കുന്നു. ', 'ഇപ്പോൾ കാണുന്നത് വളരെ ഉയർന്ന പിഎച്ച് ഉള്ളപ്പോൾ നമ്മൾ വളരെ. ', 'എത്രിന്ജിറ്റിന്റെ നീണ്ട സൂചികൾ. ', 'നമ്മൾ കുറച്ചുകൂടി ചെറിയ എത്രിന്ജിറ്റ് ക്രിസ്റ്റലുകൾ രൂപീകരിക്കുന്നു, ശരി. ', 'പക്ഷെ 12 നും 10 നും ഇടയിൽ നമ്മൾ എത്രിന്ജിറ്റ് സൂചികൾ രൂപീകരിക്കുന്നു. ', 'വളരെ ഉയർന്ന നീളമുള്ളവ. ', 'സിമന്റ് ഹൈഡ്രേറ്റേഷന്റെ ആദ്യഘട്ടങ്ങളിൽ നിങ്ങൾ. ', 'ഈ മൈക്രോക്രിസ്റ്റാലിൻ എത്രിംഗൈറ്റ് ദൈർഘ്യം വളരെ ചെറുതാണ്, ', 'വ്യാസം അല്ലെങ്കിൽ ദൈർഘ്യം കനം അനുപാതം വളരെ ചെറുതാണ്. ', 'എന്നാൽ എത്രിന്ജിറ്റ് വികസിക്കുമ്പോൾ, നിങ്ങൾക്ക് ഒരു സാഹചര്യത്തെക്കുറിച്ച് ചിന്തിക്കാം. ', 'സൾഫേറ്റ് ആക്രമണം, ഈർപ്പം ആഗിരണം ചെയ്യപ്പെടുന്ന ഒരു എത്രിന്ജിറ്റ് വികാസം, എത്രിന്ജിറ്റ് യഥാർത്ഥത്തിൽ. ', 'ഉയർന്ന നീളത്തിൽ കാണിക്കുന്ന ക്രിസ്റ്റൽ ശീലം കാണിച്ചു തുടങ്ങുക, ശരി. ', 'അതുകൊണ്ട് ഉയർന്ന പിഎച്ച് അളവിലുള്ള മൈക്രോക്രിസ്റ്റാലിൻ എത്രിംഗൈറ്റ് പുതിയ ബെറ്റിനിൽ കാണപ്പെടുന്നു. ', 'ആദ്യകാല ജലാംശം പ്രതീക്ഷിക്കുക, ശരിയാണ്. ', 'ഇപ്പോൾ ഗവേഷകരുടെ അഭിപ്രായത്തില്, ഇത് നന്നായി രേഖപ്പെടുത്തിയിട്ടുണ്ട്. ', 'ജല ആഗിരണം ചെയ്യാനുള്ള ശേഷിയുള്ള എത്രിംഗൈറ്റ് ഉയർന്ന വികാസത്തിലേക്ക് നയിക്കുന്നു, ', 'pH അവസ്ഥ വളരെ ഉയർന്നതാണെങ്കില് സംഭവിക്കും. ', 'അതിനാൽ, നിങ്ങൾ സൾഫേറ്റ് എക്സ്പോഷറുകളിലേക്ക് വന്നാൽ, pH കുറയുന്നു, ഉദാഹരണത്തിന്, നിങ്ങൾ. ', 'പരിസ്ഥിതിയിലെ പിഎച്ച് കുറവാണെങ്കിൽ, അത് എത്രിന്ജിറ്റിന്. ', 'സിസ്റ്റത്തിൽ യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുമ്പോൾ ഇത് വളരെ ആഗിരണം ചെയ്യാത്തതായിരിക്കാം. ', 'വെള്ളം ആഗിരണം ചെയ്യുകയോ കുടിക്കുകയോ ചെയ്യുന്നില്ല, അത് വളരെ ഉയർന്ന വികാസങ്ങളിലേക്ക് നയിക്കുന്നില്ല. ', 'അതിനാൽ എത്രിംഗിറ്റിന്റെ രൂപീകരണം വികസനത്തിന് കാരണമാകുന്നത് പ്രധാനമായും. ', 'പുറമേയുള്ള പിഎച്ച് ഉല് പാദവും വളരെ ഉയർന്നതാണ്. ', 'ഇത് വലിയ അളവിൽ നാം ശരിക്കും വിപുലീകരണങ്ങള് സംഭവിക്കുന്നത് കാണുന്നില്ല എന്തുകൊണ്ട് വിശദീകരിക്കുന്നു. ', 'വയല് അടിസ്ഥാനമാക്കിയുള്ള സാമ്പിളുകള്. ', 'ലാബിലെ സാമ്പിളുകളിൽ നാം വളരെ ഉയർന്ന അളവിലുള്ള വികാസത്തെ കാണുന്നു. ', 'ആക്രമണത്തിന്റെ തുടർച്ചയായ പുനരുജ്ജീവനത്തോടെയുള്ള പ്രകടനം. ', 'കാരണം, നിങ്ങള് ക്ക് നിലത്തുള്ള വെള്ളം ഉണ്ട്, അത് ആക്രമണകാരിയെ നിരന്തരം ചാർജ് ചെയ്യുന്നു. ', 'പരിഹാരം. ', 'അതിനുപുറമെ, നമുക്ക് മറ്റു ഇയോണിക് ജീവികളുടെ സാന്നിധ്യം ഉണ്ട്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിന്റെ പിഎച്ച്. ', 'അത് സംഭവിക്കുമ്പോൾ, യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എട്രിംഗിറ്റ്. ', 'സാധാരണ മുങ്ങുന്ന അവസ്ഥയില് സിസ്റ്റത്തിനുള്ളില് രൂപപ്പെടുന്നതു പോലെ പ്രതികരിക്കുന്നതോ അല്ലെങ്കില് വിശാലമായതോ ആയ. ', 'ഒരു കപ്പ് എടുത്തു സൾഫേറ്റ് പരിഹാരം ഉള്ളിൽ വച്ച് ഒരു ബെറ്റൺ. ', 'ഉള്ളില് ഒരു സാമ്പിളാണോ? ', 'ബെറ്റണിന് വളരെ ഉയർന്ന പിഎച്ച് ഉണ്ട്, 13. ', 'അപ്പോൾ അത് pH 7 അല്ലെങ്കിൽ 8 ഉള്ള സൾഫേറ്റ് പരിഹാരത്തിനുള്ളിൽ വെക്കുമ്പോൾ എന്ത് സംഭവിക്കും? ', 'നിങ്ങൾക്ക് ബെറ്റണിന്റെ പരുത്തി പുറം പരിസ്ഥിതിയിലേക്ക് ഒഴുകും. ', 'ഓക്കേ, പുറത്തെ പരിഹാരത്തിന്റെ പി. എച്ച് വളരെ ഉയർന്ന തലത്തിലേക്ക് സ്ഥിരത കൈവരിക്കുകയാണ്. ', 'ചില സന്ദർഭങ്ങളിൽ 12 ന് മുകളിലായി നാം എത്തുന്നു. ', 'ഈ സാഹചര്യത്തിൽ, രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റ് വിപുലമായ സ്വഭാവമുള്ളതാണ്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിലെ പി. എച്ച് ഉയർന്നതാണെങ്കിൽ, എത്രിന്ജിറ്റ് വ്യാപകമാണ്, അത്. ', 'ലാബോറട്ടറി പഠനങ്ങളിൽ സൾഫേറ്റ് ആക്രമണവുമായി സാധാരണയായി ബന്ധപ്പെട്ട വിപുലീകരണങ്ങളിലേക്ക്. ', 'എന്നാൽ, ഈ മേഖലയില് നാം ഒരേ തരത്തിലുള്ള വികാസങ്ങള് കാണുന്നില്ല. ', 'എത്രിംഗിറ്റിന്റെ സ്ഥിരത ഒരു പ്രത്യേക സ്ഥലത്ത് നിലവിലുള്ള പിഎച്ച് തലങ്ങളിൽ ആശ്രയിച്ചിരിക്കുന്നു. ', 'പരിസ്ഥിതി. ', 'ഉദാഹരണത്തിന്, pH വളരെ ഉയർന്നതോ 9 മുതൽ 13 വരെയുള്ള pH പരിധിയിലുള്ളതോ ആയ. ', 'ഇത് സാധാരണയായി ഒരു എത്രിന്ജിറ്റ് പരിഹാരത്തിന്റെ സ്ഥിരതയുടെ പരിധി ആണ്. ', 'അതുകൊണ്ട്, വിവിധ ഗവേഷണങ്ങളിലൂടെ വിവിധ പിഎച്ച് ശ്രേണികൾ ലഭ്യമാക്കുന്നു. ', 'സ്ഥിരതയുള്ളതാണ്. ', 'ചുറ്റുപാടിലെ അവസ്ഥ അസിഡ് ആയാൽ, ആ പരിസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ഉണ്ടാകില്ല. ', 'വളരെ സ്ഥിരതയുള്ളതാണ്. ', 'അതിനാൽ, എട്രിംഗൈറ്റ് പകരമായി പ്രവർത്തിക്കുന്നുണ്ടോ എന്ന് പരിശോധിക്കാൻ, നിങ്ങൾ ചുറ്റുമുള്ള നിലവിലുള്ള അവസ്ഥകൾ പരിശോധിക്കണം. ', 'സ്ഥിരതയുള്ളവരാകാൻ. ', 'ഉദാഹരണത്തിന്, ആസിഡ് പരിതസ്ഥിതിയിൽ, എത്രിന്ജിറ്റിന്. ', 'ഗിപ്സും, അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡും, പ്രത്യേകിച്ച് കാർബണേഷൻ സംഭവിക്കുന്നതോടെ, അത്. ', 'അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡ്, ജിപ്സം എന്നിവയുമായി ചേർന്ന് കല് സി യം കാർബണേറ്റ് ഘടകങ്ങൾ രൂപം കൊള്ളുന്നു. ', 'അസിഡ് പരിതസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ജിപ്സും ആല്യുമിനിയം ഹൈഡ്രോക്സൈഡും ആയി മാറുന്നു. ', 'വീണ്ടും, ഈ ഫീൽഡിലെ തെളിവുകൾ നോക്കിയാൽ, പൂർണ്ണമായും നിലനിൽക്കുന്ന ഘടനകൾ. ', 'ഉണങ്ങിയ കഠിനമായ ബെറ്റണിന് റെയില് എത്രിന്ജിറ്റ് കണ്ടുപിടിക്കാന് പാടില്ല. ', 'അതിനാൽ നിങ്ങൾക്ക് ഈർപ്പം ഇല്ലെങ്കിൽ, നിങ്ങൾ ശരിക്കും എട്രിംഗിറ്റിന്റെ രൂപീകരണം കാണുന്നില്ല. ', 'പിന്നീട്, നിങ്ങൾ മറ്റെവിടെയെങ്കിലും ഉണങ്ങുകയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, എത്രിന്ജിറ്റ്. ', 'ഇത് കാണാവുന്നതാണ്, പക്ഷേ ഉണക്കിയതുകൊണ്ട്, നിങ്ങൾക്ക് ഒരു അവസ്ഥ ഉണ്ടാകില്ല. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുന്നു. ', 'ഇപ്പോൾ ഞാൻ നിങ്ങളെ കാണിച്ചു തരാം അടുത്തിടെ നടന്ന ചില ലാബ് പഠനങ്ങൾ. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണവും വികാസവും. ', 'ലാബിൽ പഠിക്കുന്നതില് സാധാരണയായി നമ്മൾ പഠിക്കുന്നത് മോർട്ടാർ പ്രിസ്മാറ്റിക് സാമ്പിളുകളാണ്. ', '25 x 25 x 285 മില്ലിമീറ്റർ ഈ സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ സൂക്ഷിക്കുന്നു. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ മുങ്ങുകയും അവയിൽ നിന്ന് സാമ്പിളുകൾ ഇടയ്ക്കിടെ നീക്കം ചെയ്യുകയും ചെയ്യുന്നു. ', 'നീളം ഇവിടെ കാണിച്ചിരിക്കുന്ന നീള താരതമ്യ ഉപയോഗിച്ച് അളക്കുന്നു. ', 'അതായത്, 3 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് 50 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് സൂക്ഷിച്ചിരിക്കുന്ന മർട്ടാർ ഉപയോഗിച്ച് തയ്യാറാക്കിയ സാന്നിധ്യം. ', 'പരിഹാരങ്ങള്. ', 'ഈ കേസിൽ അത് സോഡിയം സൾഫേറ്റ് ആയിരുന്നു. ', 'അതുകൊണ്ട് നമ്മൾ ചർച്ച ചെയ്ത പോലെ കാറ്റോൺ പ്രഭാവത്തിൽ നിന്നും ഉണ്ടാകുന്ന ഏതെങ്കിലും ദ്വിതീയ സംവിധാനങ്ങൾ ഉണ്ടാകുമെന്ന് നിങ്ങൾ പ്രതീക്ഷിക്കുന്നില്ല. ', 'മഗ്നീഷ്യം ഉപയോഗിച്ച്, നിങ്ങൾക്ക് കാറ്റീന്റെ പ്രഭാവം ഉണ്ട്, അത് വളരെ ഗുരുതരമാണ്. ', 'പരിഗണനയിലാക്കണം. ', 'അതുകൊണ്ട് ഈ പ്രോജക്റ്റിൽ നാം ചെയ്തതെന്തെന്നാൽ, ദൈർഘ്യ മാറ്റം നിരന്തരം നിരീക്ഷിക്കുകയായിരുന്നു. ', 'കൂടാതെ എട്രിംഗിറ്റിന്റെ അളവ് ക്വാണ്ടിഫിക്കേഷൻ ഞങ്ങൾ എക്സ്-റേ ഡിഫ്രാക്ഷൻ വിശകലനത്തിലൂടെ ചെയ്തു. ', 'ഇവിടെ കാണിക്കുന്നത് വ്യത്യസ്തമായ വിപുലീകരണത്തിന്റെ വ്യാപ്തിയാണ്. ', '32 ആഴ്ചയിലേറെയായി എക്സ്പോഷർ ചെയ്ത മോർട്ടാർ സാമ്പിളുകൾ ഇവയാണ് 2 മിശ്രിതങ്ങൾ, ഒന്ന്. സാധാരണ. ', 'പോർട്ട്ലാന്റ് സിമന്റ്, M2 എന്നിവ പോർട്ട്ലാന്റ് പൊസോളൻ സിമന്റ് ആണ്. ', 'അതിൽ കാർബൺ പൊള്ളലേറ്റിട്ടുണ്ട്. ', '32 ആഴ്ച കഴിഞ്ഞപ്പോൾ മാത്രം കാര്യമായ വികസനം കാണിച്ച സാമ്പിളുകൾ. ', 'ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന ഒപിസി കോൺക്രീറ്റ് അല്ലെങ്കിൽ ഒപിസി മോർട്ടാർ സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'ലിറ്ററിന് 3 ഗ്രാം ലൂഷനിൽ നിങ്ങൾ വളരെ അധികം വികസനം ഉണ്ടായില്ലെങ്കിലും. ', 'സംഭരണത്തിന്റെ അവസാന ഭാഗത്തേക്കുള്ള പ്രവണത വർധിച്ചു. ', 'ഡൈനാമിക് മോഡ്യൂളിലെ മാറ്റം നോക്കുമ്പോൾ, ഇവിടെ ഡൈനാമിക് മോഡ്യൂൾ അളന്നു. ', 'വസ്തുവിന്റെ റെസോണന്റ് ആവൃത്തി പരിശോധിച്ചാണ് ഇത്. ', 'അതുകൊണ്ട് നാം പ്രിസ്മാറ്റിക് സാമ്പിളുകൾ എടുത്തു റെസോണന്റ് ഫ്രീക്വൻസി നോക്കി. ', 'ബെറ്റണിന്റെ വഷളാകുന്നതോടെ റെസോണന്റ് ഫ്രീക്വൻസി. ', 'അതുപോലെതന്നെ കുറയും. ', 'ഇത് ഒരു നാശനഷ്ടമല്ലാത്ത പരീക്ഷണത്തിലൂടെ അപ്രതീക്ഷിതമായി അളക്കുന്ന ഡൈനാമിക് മോഡുലാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് കാണാനാകുന്നതാണു ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന മോർട്ടാർ സാമ്പിൾ. ', 'സൾഫേറ്റ് പരിഹാരം, സാധാരണ പോർട്ട്ലാന്റ് സിമന്റ് അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടാർ. ', '32 ആഴ്ചയിലെ എക്സ്പോഷർ സമയത്ത് മൊഡ്യൂൾ ഗണ്യമായി കുറഞ്ഞു, മറ്റ് എല്ലാ. സാമ്പിളുകളും. ', 'ഒരു കുറവുമില്ലാതെ വളരെ സ്ഥിരമായ ഒരു ഡൈനാമിക് മോഡ്യൂളും കാണപ്പെടുന്നു. ', 'ഇനി നമുക്ക് അളവുകൾ നോക്കാം. ', 'ഇത് വീണ്ടും ഒരു കണക്കായിട്ടല്ല, ഒരു പട്ടികയായിട്ടാണ് അവതരിപ്പിച്ചിരിക്കുന്നത്. ', 'ഇപ്പോൾ നിങ്ങൾക്ക് കാണാൻ കഴിയുമെങ്കിൽ, ഒപിസി 50 ഗ്രാം ലിറ്ററിന് വിപുലീകരണം 3 ശതമാനത്തോളം. ഉയർന്നതാണ്. ', 'അതൊരു ഉയർന്ന വികസന നിലയാണ്. ', 'ഈ എ എസ് ടി എം ടെസ്റ്റ് ചെയ്യുമ്പോൾ, ഇത് എ എസ് ടി എം സി 1012 പ്രകാരം ആണ്, ഈ ടെസ്റ്റ് രീതി ചെയ്യുമ്പോൾ. ', 'സാധാരണ മോർട്ടറുകളുടെ കാര്യത്തിൽ, നിങ്ങളുടെ വികസനം 0.1% കവിയുന്നുവെങ്കിൽ, 6 മാസത്തെ ഇടവേളയിൽ. ', 'ആ മോർട്ടാർ അല്ലെങ്കിൽ ആ പ്രത്യേക ബോണ്ടറും മോർട്ടാർ സംയോജനവും പ്രതിരോധം ഇല്ലാത്തവയാണെന്ന് നിങ്ങൾ പറയും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങള് ക്ക് വേണ്ടി. ', 'അത് ഒരു സ്വമേധയാ നടപടിക്രമം മാത്രമാണ്. ', 'ഇത് യഥാർത്ഥത്തിൽ ബെറ്റണിന്റെയും സൾഫാറ്റിന്റെയും സ്വഭാവം വെളിപ്പെടുത്തുന്നില്ല. ', 'സമ്പന്നമായ പരിസ്ഥിതി, എന്നാൽ ഈ തുടർച്ചയായ മുങ്ങൽ ടെസ്റ്റ് നിങ്ങളുടെ സാമ്പിൾ ഒരു വികസനം അവസാനിക്കുന്നു എങ്കിൽ. ', 'ആറുമാസത്തിനുള്ളിൽ 0.1% ൽ കൂടുതൽ, അത് സിമന്റ് പ്രതിരോധം ഇല്ല എന്ന് കരുതപ്പെടുന്നു. ', 'സൾഫേറ്റ് ആക്രമണം. ', 'എന്നിരുന്നാലും, ഈ കേസിൽ വെറും 32 ആഴ്ചയിലേയ്ക്ക് 3% വരെ വ്യാപനം രേഖപ്പെടുത്തിയിരുന്നു. ', 'അതായത് എട്ടുമാസം, ഏഴു മുതൽ എട്ടുമാസം വരെ നിങ്ങൾക്ക് 3% വരെ എക്സ്പോഷർ ഉണ്ടായിരുന്നു. ', 'ഒരു ലിറ്ററിന് 3 ഗ്രാം ഒപിസി കണക്കിലെടുത്താൽ അത് ഇപ്പോഴും 0.1% മാർക്കിൽ എത്തിയില്ല. ', 'അതേസമയം, ഒരു ലിറ്ററിന് 50 ഗ്രാം പരിഹാരവും പിപിസി അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടറും ഉള്ളപ്പോൾ അത് ഇപ്പോഴും. ', '0.1%, വിപുലീകരണം 0.1% ൽ താഴെയാണ്. ', 'ലിറ്ററിന് 3 ഗ്രാം ഉള്ള പിപിസി, വിപുലീകരണം ഒന്നും തന്നെയില്ല. ', 'അതായത്, അത് വളരെ പ്രയാസം ശ്രദ്ധിക്കപ്പെടുന്നു. ', 'മുങ്ങുന്ന സമയത്തുനിന്ന് അവസാനത്തെ അളവിലേക്ക് മാറ്റം വരുത്താൻ പ്രയാസമാണ്. ', 'അത് കഴിഞ്ഞു. ', 'അപ്പോൾ ഇത് സിസ്റ്റത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എത്രിന്ജിറ്റ് ഉള്ളടക്കത്തിലേക്ക് എങ്ങനെ വിവർത്തനം ചെയ്യപ്പെടുന്നു? ', 'ഇപ്പോൾ ക്രസ്റ്റലിൻ മാത്രം നിലനിൽക്കുന്ന ഘട്ടങ്ങൾ കണ്ടെത്താനായി എക്സ്-റേ ഡിഫ്രാക്ഷൻ ചെയ്തു. ', '∙ എത്രിംഗിറ്റിന്റെ അളവും ക്രസ്റ്റലിൻ ഘട്ടങ്ങൾക്കിടയിലും നിർണ്ണയിച്ചു. ', 'ഇവിടെ എത്രിന്ജിറ്റ് അളവ് ഈ വരിയിൽ നൽകിയിരിക്കുന്നു. ', 'എട്രിംഗിറ്റിന്റെ അളവിൽ സ്ഥിരമായ വർധനയുണ്ടെന്ന് നിങ്ങൾക്ക് കാണാം. ', 'എക്സ്പോഷർ സമയം 9 ആഴ്ചയിൽ നിന്ന് 25 ആഴ്ച വരെ വർദ്ധിപ്പിക്കുക. ', 'അങ്ങനെ ഞങ്ങൾ ഒരു തരം രേഖപ്പെടുത്തി, അങ്ങനെ ഞങ്ങൾ രേഖപ്പെടുത്തി എട്രിംഗിറ്റ് ഉള്ളടക്കം നിർണ്ണയിച്ചു. ', 'എക്സ്-റേ ഡിഫ്രാക്ഷൻ. ', 'ഇത് യഥാർത്ഥത്തിൽ നിലവിലുണ്ടായിരുന്ന എല്ലാ ക്രിസ്റ്റലിൻ ഘടകങ്ങളുടെയും ശതമാനം മാത്രമാണ്. ', 'അത് വളരെ വ്യക്തമായ ബന്ധമാണ്. ']
2024-02-23 12:42:22,689 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: local variable 'firstLet' referenced before assignment. Input text: ['ആക്രമണത്തിന്റെ തുടർച്ചയായ പുനരുജ്ജീവനത്തോടെയുള്ള പ്രകടനം. ', 'കാരണം, നിങ്ങള് ക്ക് നിലത്തുള്ള വെള്ളം ഉണ്ട്, അത് ആക്രമണകാരിയെ നിരന്തരം ചാർജ് ചെയ്യുന്നു. ', 'പരിഹാരം. ', 'അതിനുപുറമെ, നമുക്ക് മറ്റു ഇയോണിക് ജീവികളുടെ സാന്നിധ്യം ഉണ്ട്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിന്റെ പിഎച്ച്. ', 'അത് സംഭവിക്കുമ്പോൾ, യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എട്രിംഗിറ്റ്. ', 'സാധാരണ മുങ്ങുന്ന അവസ്ഥയില് സിസ്റ്റത്തിനുള്ളില് രൂപപ്പെടുന്നതു പോലെ പ്രതികരിക്കുന്നതോ അല്ലെങ്കില് വിശാലമായതോ ആയ. ', 'ഒരു കപ്പ് എടുത്തു സൾഫേറ്റ് പരിഹാരം ഉള്ളിൽ വച്ച് ഒരു ബെറ്റൺ. ', 'ഉള്ളില് ഒരു സാമ്പിളാണോ? ', 'ബെറ്റണിന് വളരെ ഉയർന്ന പിഎച്ച് ഉണ്ട്, 13. ', 'അപ്പോൾ അത് pH 7 അല്ലെങ്കിൽ 8 ഉള്ള സൾഫേറ്റ് പരിഹാരത്തിനുള്ളിൽ വെക്കുമ്പോൾ എന്ത് സംഭവിക്കും? ', 'നിങ്ങൾക്ക് ബെറ്റണിന്റെ പരുത്തി പുറം പരിസ്ഥിതിയിലേക്ക് ഒഴുകും. ', 'ഓക്കേ, പുറത്തെ പരിഹാരത്തിന്റെ പി. എച്ച് വളരെ ഉയർന്ന തലത്തിലേക്ക് സ്ഥിരത കൈവരിക്കുകയാണ്. ', 'ചില സന്ദർഭങ്ങളിൽ 12 ന് മുകളിലായി നാം എത്തുന്നു. ', 'ഈ സാഹചര്യത്തിൽ, രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റ് വിപുലമായ സ്വഭാവമുള്ളതാണ്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിലെ പി. എച്ച് ഉയർന്നതാണെങ്കിൽ, എത്രിന്ജിറ്റ് വ്യാപകമാണ്, അത്. ', 'ലാബോറട്ടറി പഠനങ്ങളിൽ സൾഫേറ്റ് ആക്രമണവുമായി സാധാരണയായി ബന്ധപ്പെട്ട വിപുലീകരണങ്ങളിലേക്ക്. ', 'എന്നാൽ, ഈ മേഖലയില് നാം ഒരേ തരത്തിലുള്ള വികാസങ്ങള് കാണുന്നില്ല. ', 'എത്രിംഗിറ്റിന്റെ സ്ഥിരത ഒരു പ്രത്യേക സ്ഥലത്ത് നിലവിലുള്ള പിഎച്ച് തലങ്ങളിൽ ആശ്രയിച്ചിരിക്കുന്നു. ', 'പരിസ്ഥിതി. ', 'ഉദാഹരണത്തിന്, pH വളരെ ഉയർന്നതോ 9 മുതൽ 13 വരെയുള്ള pH പരിധിയിലുള്ളതോ ആയ. ', 'ഇത് സാധാരണയായി ഒരു എത്രിന്ജിറ്റ് പരിഹാരത്തിന്റെ സ്ഥിരതയുടെ പരിധി ആണ്. ', 'അതുകൊണ്ട്, വിവിധ ഗവേഷണങ്ങളിലൂടെ വിവിധ പിഎച്ച് ശ്രേണികൾ ലഭ്യമാക്കുന്നു. ', 'സ്ഥിരതയുള്ളതാണ്. ', 'ചുറ്റുപാടിലെ അവസ്ഥ അസിഡ് ആയാൽ, ആ പരിസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ഉണ്ടാകില്ല. ', 'വളരെ സ്ഥിരതയുള്ളതാണ്. ', 'അതിനാൽ, എട്രിംഗൈറ്റ് പകരമായി പ്രവർത്തിക്കുന്നുണ്ടോ എന്ന് പരിശോധിക്കാൻ, നിങ്ങൾ ചുറ്റുമുള്ള നിലവിലുള്ള അവസ്ഥകൾ പരിശോധിക്കണം. ', 'സ്ഥിരതയുള്ളവരാകാൻ. ', 'ഉദാഹരണത്തിന്, ആസിഡ് പരിതസ്ഥിതിയിൽ, എത്രിന്ജിറ്റിന്. ', 'ഗിപ്സും, അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡും, പ്രത്യേകിച്ച് കാർബണേഷൻ സംഭവിക്കുന്നതോടെ, അത്. ', 'അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡ്, ജിപ്സം എന്നിവയുമായി ചേർന്ന് കല് സി യം കാർബണേറ്റ് ഘടകങ്ങൾ രൂപം കൊള്ളുന്നു. ', 'അസിഡ് പരിതസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ജിപ്സും ആല്യുമിനിയം ഹൈഡ്രോക്സൈഡും ആയി മാറുന്നു. ', 'വീണ്ടും, ഈ ഫീൽഡിലെ തെളിവുകൾ നോക്കിയാൽ, പൂർണ്ണമായും നിലനിൽക്കുന്ന ഘടനകൾ. ', 'ഉണങ്ങിയ കഠിനമായ ബെറ്റണിന് റെയില് എത്രിന്ജിറ്റ് കണ്ടുപിടിക്കാന് പാടില്ല. ', 'അതിനാൽ നിങ്ങൾക്ക് ഈർപ്പം ഇല്ലെങ്കിൽ, നിങ്ങൾ ശരിക്കും എട്രിംഗിറ്റിന്റെ രൂപീകരണം കാണുന്നില്ല. ', 'പിന്നീട്, നിങ്ങൾ മറ്റെവിടെയെങ്കിലും ഉണങ്ങുകയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, എത്രിന്ജിറ്റ്. ', 'ഇത് കാണാവുന്നതാണ്, പക്ഷേ ഉണക്കിയതുകൊണ്ട്, നിങ്ങൾക്ക് ഒരു അവസ്ഥ ഉണ്ടാകില്ല. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുന്നു. ', 'ഇപ്പോൾ ഞാൻ നിങ്ങളെ കാണിച്ചു തരാം അടുത്തിടെ നടന്ന ചില ലാബ് പഠനങ്ങൾ. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണവും വികാസവും. ', 'ലാബിൽ പഠിക്കുന്നതില് സാധാരണയായി നമ്മൾ പഠിക്കുന്നത് മോർട്ടാർ പ്രിസ്മാറ്റിക് സാമ്പിളുകളാണ്. ', '25 x 25 x 285 മില്ലിമീറ്റർ ഈ സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ സൂക്ഷിക്കുന്നു. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ മുങ്ങുകയും അവയിൽ നിന്ന് സാമ്പിളുകൾ ഇടയ്ക്കിടെ നീക്കം ചെയ്യുകയും ചെയ്യുന്നു. ', 'നീളം ഇവിടെ കാണിച്ചിരിക്കുന്ന നീള താരതമ്യ ഉപയോഗിച്ച് അളക്കുന്നു. ', 'അതായത്, 3 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് 50 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് സൂക്ഷിച്ചിരിക്കുന്ന മർട്ടാർ ഉപയോഗിച്ച് തയ്യാറാക്കിയ സാന്നിധ്യം. ', 'പരിഹാരങ്ങള്. ', 'ഈ കേസിൽ അത് സോഡിയം സൾഫേറ്റ് ആയിരുന്നു. ', 'അതുകൊണ്ട് നമ്മൾ ചർച്ച ചെയ്ത പോലെ കാറ്റോൺ പ്രഭാവത്തിൽ നിന്നും ഉണ്ടാകുന്ന ഏതെങ്കിലും ദ്വിതീയ സംവിധാനങ്ങൾ ഉണ്ടാകുമെന്ന് നിങ്ങൾ പ്രതീക്ഷിക്കുന്നില്ല. ', 'മഗ്നീഷ്യം ഉപയോഗിച്ച്, നിങ്ങൾക്ക് കാറ്റീന്റെ പ്രഭാവം ഉണ്ട്, അത് വളരെ ഗുരുതരമാണ്. ', 'പരിഗണനയിലാക്കണം. ', 'അതുകൊണ്ട് ഈ പ്രോജക്റ്റിൽ നാം ചെയ്തതെന്തെന്നാൽ, ദൈർഘ്യ മാറ്റം നിരന്തരം നിരീക്ഷിക്കുകയായിരുന്നു. ', 'കൂടാതെ എട്രിംഗിറ്റിന്റെ അളവ് ക്വാണ്ടിഫിക്കേഷൻ ഞങ്ങൾ എക്സ്-റേ ഡിഫ്രാക്ഷൻ വിശകലനത്തിലൂടെ ചെയ്തു. ', 'ഇവിടെ കാണിക്കുന്നത് വ്യത്യസ്തമായ വിപുലീകരണത്തിന്റെ വ്യാപ്തിയാണ്. ', '32 ആഴ്ചയിലേറെയായി എക്സ്പോഷർ ചെയ്ത മോർട്ടാർ സാമ്പിളുകൾ ഇവയാണ് 2 മിശ്രിതങ്ങൾ, ഒന്ന്. സാധാരണ. ', 'പോർട്ട്ലാന്റ് സിമന്റ്, M2 എന്നിവ പോർട്ട്ലാന്റ് പൊസോളൻ സിമന്റ് ആണ്. ', 'അതിൽ കാർബൺ പൊള്ളലേറ്റിട്ടുണ്ട്. ', '32 ആഴ്ച കഴിഞ്ഞപ്പോൾ മാത്രം കാര്യമായ വികസനം കാണിച്ച സാമ്പിളുകൾ. ', 'ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന ഒപിസി കോൺക്രീറ്റ് അല്ലെങ്കിൽ ഒപിസി മോർട്ടാർ സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'ലിറ്ററിന് 3 ഗ്രാം ലൂഷനിൽ നിങ്ങൾ വളരെ അധികം വികസനം ഉണ്ടായില്ലെങ്കിലും. ', 'സംഭരണത്തിന്റെ അവസാന ഭാഗത്തേക്കുള്ള പ്രവണത വർധിച്ചു. ', 'ഡൈനാമിക് മോഡ്യൂളിലെ മാറ്റം നോക്കുമ്പോൾ, ഇവിടെ ഡൈനാമിക് മോഡ്യൂൾ അളന്നു. ', 'വസ്തുവിന്റെ റെസോണന്റ് ആവൃത്തി പരിശോധിച്ചാണ് ഇത്. ', 'അതുകൊണ്ട് നാം പ്രിസ്മാറ്റിക് സാമ്പിളുകൾ എടുത്തു റെസോണന്റ് ഫ്രീക്വൻസി നോക്കി. ', 'ബെറ്റണിന്റെ വഷളാകുന്നതോടെ റെസോണന്റ് ഫ്രീക്വൻസി. ', 'അതുപോലെതന്നെ കുറയും. ', 'ഇത് ഒരു നാശനഷ്ടമല്ലാത്ത പരീക്ഷണത്തിലൂടെ അപ്രതീക്ഷിതമായി അളക്കുന്ന ഡൈനാമിക് മോഡുലാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് കാണാനാകുന്നതാണു ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന മോർട്ടാർ സാമ്പിൾ. ', 'സൾഫേറ്റ് പരിഹാരം, സാധാരണ പോർട്ട്ലാന്റ് സിമന്റ് അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടാർ. ', '32 ആഴ്ചയിലെ എക്സ്പോഷർ സമയത്ത് മൊഡ്യൂൾ ഗണ്യമായി കുറഞ്ഞു, മറ്റ് എല്ലാ. സാമ്പിളുകളും. ', 'ഒരു കുറവുമില്ലാതെ വളരെ സ്ഥിരമായ ഒരു ഡൈനാമിക് മോഡ്യൂളും കാണപ്പെടുന്നു. ', 'ഇനി നമുക്ക് അളവുകൾ നോക്കാം. ', 'ഇത് വീണ്ടും ഒരു കണക്കായിട്ടല്ല, ഒരു പട്ടികയായിട്ടാണ് അവതരിപ്പിച്ചിരിക്കുന്നത്. ', 'ഇപ്പോൾ നിങ്ങൾക്ക് കാണാൻ കഴിയുമെങ്കിൽ, ഒപിസി 50 ഗ്രാം ലിറ്ററിന് വിപുലീകരണം 3 ശതമാനത്തോളം. ഉയർന്നതാണ്. ', 'അതൊരു ഉയർന്ന വികസന നിലയാണ്. ', 'ഈ എ എസ് ടി എം ടെസ്റ്റ് ചെയ്യുമ്പോൾ, ഇത് എ എസ് ടി എം സി 1012 പ്രകാരം ആണ്, ഈ ടെസ്റ്റ് രീതി ചെയ്യുമ്പോൾ. ', 'സാധാരണ മോർട്ടറുകളുടെ കാര്യത്തിൽ, നിങ്ങളുടെ വികസനം 0.1% കവിയുന്നുവെങ്കിൽ, 6 മാസത്തെ ഇടവേളയിൽ. ', 'ആ മോർട്ടാർ അല്ലെങ്കിൽ ആ പ്രത്യേക ബോണ്ടറും മോർട്ടാർ സംയോജനവും പ്രതിരോധം ഇല്ലാത്തവയാണെന്ന് നിങ്ങൾ പറയും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങള് ക്ക് വേണ്ടി. ', 'അത് ഒരു സ്വമേധയാ നടപടിക്രമം മാത്രമാണ്. ', 'ഇത് യഥാർത്ഥത്തിൽ ബെറ്റണിന്റെയും സൾഫാറ്റിന്റെയും സ്വഭാവം വെളിപ്പെടുത്തുന്നില്ല. ', 'സമ്പന്നമായ പരിസ്ഥിതി, എന്നാൽ ഈ തുടർച്ചയായ മുങ്ങൽ ടെസ്റ്റ് നിങ്ങളുടെ സാമ്പിൾ ഒരു വികസനം അവസാനിക്കുന്നു എങ്കിൽ. ', 'ആറുമാസത്തിനുള്ളിൽ 0.1% ൽ കൂടുതൽ, അത് സിമന്റ് പ്രതിരോധം ഇല്ല എന്ന് കരുതപ്പെടുന്നു. ', 'സൾഫേറ്റ് ആക്രമണം. ', 'എന്നിരുന്നാലും, ഈ കേസിൽ വെറും 32 ആഴ്ചയിലേയ്ക്ക് 3% വരെ വ്യാപനം രേഖപ്പെടുത്തിയിരുന്നു. ', 'അതായത് എട്ടുമാസം, ഏഴു മുതൽ എട്ടുമാസം വരെ നിങ്ങൾക്ക് 3% വരെ എക്സ്പോഷർ ഉണ്ടായിരുന്നു. ', 'ഒരു ലിറ്ററിന് 3 ഗ്രാം ഒപിസി കണക്കിലെടുത്താൽ അത് ഇപ്പോഴും 0.1% മാർക്കിൽ എത്തിയില്ല. ', 'അതേസമയം, ഒരു ലിറ്ററിന് 50 ഗ്രാം പരിഹാരവും പിപിസി അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടറും ഉള്ളപ്പോൾ അത് ഇപ്പോഴും. ', '0.1%, വിപുലീകരണം 0.1% ൽ താഴെയാണ്. ', 'ലിറ്ററിന് 3 ഗ്രാം ഉള്ള പിപിസി, വിപുലീകരണം ഒന്നും തന്നെയില്ല. ', 'അതായത്, അത് വളരെ പ്രയാസം ശ്രദ്ധിക്കപ്പെടുന്നു. ', 'മുങ്ങുന്ന സമയത്തുനിന്ന് അവസാനത്തെ അളവിലേക്ക് മാറ്റം വരുത്താൻ പ്രയാസമാണ്. ', 'അത് കഴിഞ്ഞു. ', 'അപ്പോൾ ഇത് സിസ്റ്റത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എത്രിന്ജിറ്റ് ഉള്ളടക്കത്തിലേക്ക് എങ്ങനെ വിവർത്തനം ചെയ്യപ്പെടുന്നു? ', 'ഇപ്പോൾ ക്രസ്റ്റലിൻ മാത്രം നിലനിൽക്കുന്ന ഘട്ടങ്ങൾ കണ്ടെത്താനായി എക്സ്-റേ ഡിഫ്രാക്ഷൻ ചെയ്തു. ', '∙ എത്രിംഗിറ്റിന്റെ അളവും ക്രസ്റ്റലിൻ ഘട്ടങ്ങൾക്കിടയിലും നിർണ്ണയിച്ചു. ', 'ഇവിടെ എത്രിന്ജിറ്റ് അളവ് ഈ വരിയിൽ നൽകിയിരിക്കുന്നു. ', 'എട്രിംഗിറ്റിന്റെ അളവിൽ സ്ഥിരമായ വർധനയുണ്ടെന്ന് നിങ്ങൾക്ക് കാണാം. ', 'എക്സ്പോഷർ സമയം 9 ആഴ്ചയിൽ നിന്ന് 25 ആഴ്ച വരെ വർദ്ധിപ്പിക്കുക. ', 'അങ്ങനെ ഞങ്ങൾ ഒരു തരം രേഖപ്പെടുത്തി, അങ്ങനെ ഞങ്ങൾ രേഖപ്പെടുത്തി എട്രിംഗിറ്റ് ഉള്ളടക്കം നിർണ്ണയിച്ചു. ', 'എക്സ്-റേ ഡിഫ്രാക്ഷൻ. ', 'ഇത് യഥാർത്ഥത്തിൽ നിലവിലുണ്ടായിരുന്ന എല്ലാ ക്രിസ്റ്റലിൻ ഘടകങ്ങളുടെയും ശതമാനം മാത്രമാണ്. ', 'അത് വളരെ വ്യക്തമായ ബന്ധമാണ്. ']
2024-02-23 12:43:02,301 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech [POST]
Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 152, in extract_text_from_vtt
    vtt = read_buffer(StringIO(vtt_content))
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/webvtt.py", line 68, in read_buffer
    parser = WebVTTParser().read_from_buffer(buffer)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 32, in read_from_buffer
    self._validate(content)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/webvtt/parsers.py", line 258, in _validate
    raise MalformedFileError('The file does not have a valid format')
webvtt.errors.MalformedFileError: The file does not have a valid format

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    logging.error(f"Exception occurred: {err}. Input text: {extracted_text}")
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-02-23 12:43:11,904 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: local variable 'firstLet' referenced before assignment. Input text: ['ഉണങ്ങിയ കഠിനമായ ബെറ്റണിന് റെയില് എത്രിന്ജിറ്റ് കണ്ടുപിടിക്കാന് പാടില്ല. ', 'അതിനാൽ നിങ്ങൾക്ക് ഈർപ്പം ഇല്ലെങ്കിൽ, നിങ്ങൾ ശരിക്കും എട്രിംഗിറ്റിന്റെ രൂപീകരണം കാണുന്നില്ല. ', 'പിന്നീട്, നിങ്ങൾ മറ്റെവിടെയെങ്കിലും ഉണങ്ങുകയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, എത്രിന്ജിറ്റ്. ', 'ഇത് കാണാവുന്നതാണ്, പക്ഷേ ഉണക്കിയതുകൊണ്ട്, നിങ്ങൾക്ക് ഒരു അവസ്ഥ ഉണ്ടാകില്ല. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുന്നു. ', 'ഇപ്പോൾ ഞാൻ നിങ്ങളെ കാണിച്ചു തരാം അടുത്തിടെ നടന്ന ചില ലാബ് പഠനങ്ങൾ. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണവും വികാസവും. ', 'ലാബിൽ പഠിക്കുന്നതില് സാധാരണയായി നമ്മൾ പഠിക്കുന്നത് മോർട്ടാർ പ്രിസ്മാറ്റിക് സാമ്പിളുകളാണ്. ', '25 x 25 x 285 മില്ലിമീറ്റർ ഈ സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ സൂക്ഷിക്കുന്നു. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ മുങ്ങുകയും അവയിൽ നിന്ന് സാമ്പിളുകൾ ഇടയ്ക്കിടെ നീക്കം ചെയ്യുകയും ചെയ്യുന്നു. ', 'നീളം ഇവിടെ കാണിച്ചിരിക്കുന്ന നീള താരതമ്യ ഉപയോഗിച്ച് അളക്കുന്നു. ', 'അതായത്, 3 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് 50 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് സൂക്ഷിച്ചിരിക്കുന്ന മർട്ടാർ ഉപയോഗിച്ച് തയ്യാറാക്കിയ സാന്നിധ്യം. ', 'പരിഹാരങ്ങള്. ', 'ഈ കേസിൽ അത് സോഡിയം സൾഫേറ്റ് ആയിരുന്നു. ', 'അതുകൊണ്ട് നമ്മൾ ചർച്ച ചെയ്ത പോലെ കാറ്റോൺ പ്രഭാവത്തിൽ നിന്നും ഉണ്ടാകുന്ന ഏതെങ്കിലും ദ്വിതീയ സംവിധാനങ്ങൾ ഉണ്ടാകുമെന്ന് നിങ്ങൾ പ്രതീക്ഷിക്കുന്നില്ല. ', 'മഗ്നീഷ്യം ഉപയോഗിച്ച്, നിങ്ങൾക്ക് കാറ്റീന്റെ പ്രഭാവം ഉണ്ട്, അത് വളരെ ഗുരുതരമാണ്. ', 'പരിഗണനയിലാക്കണം. ', 'അതുകൊണ്ട് ഈ പ്രോജക്റ്റിൽ നാം ചെയ്തതെന്തെന്നാൽ, ദൈർഘ്യ മാറ്റം നിരന്തരം നിരീക്ഷിക്കുകയായിരുന്നു. ', 'കൂടാതെ എട്രിംഗിറ്റിന്റെ അളവ് ക്വാണ്ടിഫിക്കേഷൻ ഞങ്ങൾ എക്സ്-റേ ഡിഫ്രാക്ഷൻ വിശകലനത്തിലൂടെ ചെയ്തു. ', 'ഇവിടെ കാണിക്കുന്നത് വ്യത്യസ്തമായ വിപുലീകരണത്തിന്റെ വ്യാപ്തിയാണ്. ', '32 ആഴ്ചയിലേറെയായി എക്സ്പോഷർ ചെയ്ത മോർട്ടാർ സാമ്പിളുകൾ ഇവയാണ് 2 മിശ്രിതങ്ങൾ, ഒന്ന്. സാധാരണ. ', 'പോർട്ട്ലാന്റ് സിമന്റ്, M2 എന്നിവ പോർട്ട്ലാന്റ് പൊസോളൻ സിമന്റ് ആണ്. ', 'അതിൽ കാർബൺ പൊള്ളലേറ്റിട്ടുണ്ട്. ', '32 ആഴ്ച കഴിഞ്ഞപ്പോൾ മാത്രം കാര്യമായ വികസനം കാണിച്ച സാമ്പിളുകൾ. ', 'ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന ഒപിസി കോൺക്രീറ്റ് അല്ലെങ്കിൽ ഒപിസി മോർട്ടാർ സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'ലിറ്ററിന് 3 ഗ്രാം ലൂഷനിൽ നിങ്ങൾ വളരെ അധികം വികസനം ഉണ്ടായില്ലെങ്കിലും. ', 'സംഭരണത്തിന്റെ അവസാന ഭാഗത്തേക്കുള്ള പ്രവണത വർധിച്ചു. ', 'ഡൈനാമിക് മോഡ്യൂളിലെ മാറ്റം നോക്കുമ്പോൾ, ഇവിടെ ഡൈനാമിക് മോഡ്യൂൾ അളന്നു. ', 'വസ്തുവിന്റെ റെസോണന്റ് ആവൃത്തി പരിശോധിച്ചാണ് ഇത്. ', 'അതുകൊണ്ട് നാം പ്രിസ്മാറ്റിക് സാമ്പിളുകൾ എടുത്തു റെസോണന്റ് ഫ്രീക്വൻസി നോക്കി. ', 'ബെറ്റണിന്റെ വഷളാകുന്നതോടെ റെസോണന്റ് ഫ്രീക്വൻസി. ', 'അതുപോലെതന്നെ കുറയും. ', 'ഇത് ഒരു നാശനഷ്ടമല്ലാത്ത പരീക്ഷണത്തിലൂടെ അപ്രതീക്ഷിതമായി അളക്കുന്ന ഡൈനാമിക് മോഡുലാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് കാണാനാകുന്നതാണു ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന മോർട്ടാർ സാമ്പിൾ. ', 'സൾഫേറ്റ് പരിഹാരം, സാധാരണ പോർട്ട്ലാന്റ് സിമന്റ് അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടാർ. ', '32 ആഴ്ചയിലെ എക്സ്പോഷർ സമയത്ത് മൊഡ്യൂൾ ഗണ്യമായി കുറഞ്ഞു, മറ്റ് എല്ലാ. സാമ്പിളുകളും. ', 'ഒരു കുറവുമില്ലാതെ വളരെ സ്ഥിരമായ ഒരു ഡൈനാമിക് മോഡ്യൂളും കാണപ്പെടുന്നു. ', 'ഇനി നമുക്ക് അളവുകൾ നോക്കാം. ', 'ഇത് വീണ്ടും ഒരു കണക്കായിട്ടല്ല, ഒരു പട്ടികയായിട്ടാണ് അവതരിപ്പിച്ചിരിക്കുന്നത്. ', 'ഇപ്പോൾ നിങ്ങൾക്ക് കാണാൻ കഴിയുമെങ്കിൽ, ഒപിസി 50 ഗ്രാം ലിറ്ററിന് വിപുലീകരണം 3 ശതമാനത്തോളം. ഉയർന്നതാണ്. ', 'അതൊരു ഉയർന്ന വികസന നിലയാണ്. ', 'ഈ എ എസ് ടി എം ടെസ്റ്റ് ചെയ്യുമ്പോൾ, ഇത് എ എസ് ടി എം സി 1012 പ്രകാരം ആണ്, ഈ ടെസ്റ്റ് രീതി ചെയ്യുമ്പോൾ. ', 'സാധാരണ മോർട്ടറുകളുടെ കാര്യത്തിൽ, നിങ്ങളുടെ വികസനം 0.1% കവിയുന്നുവെങ്കിൽ, 6 മാസത്തെ ഇടവേളയിൽ. ', 'ആ മോർട്ടാർ അല്ലെങ്കിൽ ആ പ്രത്യേക ബോണ്ടറും മോർട്ടാർ സംയോജനവും പ്രതിരോധം ഇല്ലാത്തവയാണെന്ന് നിങ്ങൾ പറയും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങള് ക്ക് വേണ്ടി. ', 'അത് ഒരു സ്വമേധയാ നടപടിക്രമം മാത്രമാണ്. ', 'ഇത് യഥാർത്ഥത്തിൽ ബെറ്റണിന്റെയും സൾഫാറ്റിന്റെയും സ്വഭാവം വെളിപ്പെടുത്തുന്നില്ല. ', 'സമ്പന്നമായ പരിസ്ഥിതി, എന്നാൽ ഈ തുടർച്ചയായ മുങ്ങൽ ടെസ്റ്റ് നിങ്ങളുടെ സാമ്പിൾ ഒരു വികസനം അവസാനിക്കുന്നു എങ്കിൽ. ', 'ആറുമാസത്തിനുള്ളിൽ 0.1% ൽ കൂടുതൽ, അത് സിമന്റ് പ്രതിരോധം ഇല്ല എന്ന് കരുതപ്പെടുന്നു. ', 'സൾഫേറ്റ് ആക്രമണം. ', 'എന്നിരുന്നാലും, ഈ കേസിൽ വെറും 32 ആഴ്ചയിലേയ്ക്ക് 3% വരെ വ്യാപനം രേഖപ്പെടുത്തിയിരുന്നു. ', 'അതായത് എട്ടുമാസം, ഏഴു മുതൽ എട്ടുമാസം വരെ നിങ്ങൾക്ക് 3% വരെ എക്സ്പോഷർ ഉണ്ടായിരുന്നു. ', 'ഒരു ലിറ്ററിന് 3 ഗ്രാം ഒപിസി കണക്കിലെടുത്താൽ അത് ഇപ്പോഴും 0.1% മാർക്കിൽ എത്തിയില്ല. ', 'അതേസമയം, ഒരു ലിറ്ററിന് 50 ഗ്രാം പരിഹാരവും പിപിസി അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടറും ഉള്ളപ്പോൾ അത് ഇപ്പോഴും. ', '0.1%, വിപുലീകരണം 0.1% ൽ താഴെയാണ്. ', 'ലിറ്ററിന് 3 ഗ്രാം ഉള്ള പിപിസി, വിപുലീകരണം ഒന്നും തന്നെയില്ല. ', 'അതായത്, അത് വളരെ പ്രയാസം ശ്രദ്ധിക്കപ്പെടുന്നു. ', 'മുങ്ങുന്ന സമയത്തുനിന്ന് അവസാനത്തെ അളവിലേക്ക് മാറ്റം വരുത്താൻ പ്രയാസമാണ്. ', 'അത് കഴിഞ്ഞു. ', 'അപ്പോൾ ഇത് സിസ്റ്റത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എത്രിന്ജിറ്റ് ഉള്ളടക്കത്തിലേക്ക് എങ്ങനെ വിവർത്തനം ചെയ്യപ്പെടുന്നു? ', 'ഇപ്പോൾ ക്രസ്റ്റലിൻ മാത്രം നിലനിൽക്കുന്ന ഘട്ടങ്ങൾ കണ്ടെത്താനായി എക്സ്-റേ ഡിഫ്രാക്ഷൻ ചെയ്തു. ', '∙ എത്രിംഗിറ്റിന്റെ അളവും ക്രസ്റ്റലിൻ ഘട്ടങ്ങൾക്കിടയിലും നിർണ്ണയിച്ചു. ', 'ഇവിടെ എത്രിന്ജിറ്റ് അളവ് ഈ വരിയിൽ നൽകിയിരിക്കുന്നു. ', 'എട്രിംഗിറ്റിന്റെ അളവിൽ സ്ഥിരമായ വർധനയുണ്ടെന്ന് നിങ്ങൾക്ക് കാണാം. ', 'എക്സ്പോഷർ സമയം 9 ആഴ്ചയിൽ നിന്ന് 25 ആഴ്ച വരെ വർദ്ധിപ്പിക്കുക. ', 'അങ്ങനെ ഞങ്ങൾ ഒരു തരം രേഖപ്പെടുത്തി, അങ്ങനെ ഞങ്ങൾ രേഖപ്പെടുത്തി എട്രിംഗിറ്റ് ഉള്ളടക്കം നിർണ്ണയിച്ചു. ', 'എക്സ്-റേ ഡിഫ്രാക്ഷൻ. ', 'ഇത് യഥാർത്ഥത്തിൽ നിലവിലുണ്ടായിരുന്ന എല്ലാ ക്രിസ്റ്റലിൻ ഘടകങ്ങളുടെയും ശതമാനം മാത്രമാണ്. ', 'അത് വളരെ വ്യക്തമായ ബന്ധമാണ്. ']
2024-02-23 12:43:37,952 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: local variable 'firstLet' referenced before assignment. Input text: ['അപ്പോൾ ഇത് സിസ്റ്റത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എത്രിന്ജിറ്റ് ഉള്ളടക്കത്തിലേക്ക് എങ്ങനെ വിവർത്തനം ചെയ്യപ്പെടുന്നു? ', 'ഇപ്പോൾ ക്രസ്റ്റലിൻ മാത്രം നിലനിൽക്കുന്ന ഘട്ടങ്ങൾ കണ്ടെത്താനായി എക്സ്-റേ ഡിഫ്രാക്ഷൻ ചെയ്തു. ', '∙ എത്രിംഗിറ്റിന്റെ അളവും ക്രസ്റ്റലിൻ ഘട്ടങ്ങൾക്കിടയിലും നിർണ്ണയിച്ചു. ']
2024-02-23 12:51:45,571 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: local variable 'firstLet' referenced before assignment. Input text: ['പിശക് ഫംഗ്ഷൻ ആണ് പിശക് ഫംഗ്ഷൻ മറ്റൊരു സ്വഭാവം ഉണ്ട്. ', 'ഇത് v x y t by v ഒന്നും 1 - മിനുസ് പിശക് ഫംഗ്ഷൻ അല്ല. ', 'y over 4 nu t. ഈ. മുഴുവൻ. ', 'ഈറ്റ ആണ്, ഈറ്റ ഫംഗ്ഷൻ 1 എന്ന മൂല്യത്തിന് തുല്യമാണ്. ', 'ഇത് v x y t ന്റെ മൂല്യം ഏകദേശം 0 ആയിരിക്കും. ', 'അതുകൊണ്ട്, ഈ മൂല്യം eta തുല്യമാണ്, eta തുല്യമാണ്, അത് നിങ്ങൾക്ക് ഡെൽറ്റ തുല്യമാണ് 4 മടങ്ങ് നൽകും. ', '∙ t, ഡെൽറ്റ അടിസ്ഥാനപരമായി y ആണ്, ഇത് എന്താണ് സംഭവിക്കുന്നതെന്ന് നിർവചിക്കാനുള്ള ഒരു സ്വാഭാവിക നീള സ്കെയിലായിരിക്കും. ']
2024-02-26 00:35:26,979 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 962.00 MiB (GPU 0; 23.69 GiB total capacity; 4.32 GiB already allocated; 888.94 MiB free; 5.03 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 962.00 MiB (GPU 0; 23.69 GiB total capacity; 4.32 GiB already allocated; 888.94 MiB free; 5.03 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-02-27 13:32:44,751 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: local variable 'firstLet' referenced before assignment. Input text: ['ഇന്ന് നാം സൾഫേറ്റ് ആക്രമണത്തെക്കുറിച്ചുള്ള ചർച്ച പുനരാരംഭിക്കും. ', 'കഴിഞ്ഞ ക്ലാസിൽ, സൾഫേറ്റുകൾ സിമന്റീഷ്യസ് സിസ്റ്റത്തിലേക്ക് എങ്ങനെ? കടക്കുന്നു, ', 'സിമന്റ് ഫാസുകൾ ജലാംശം വച്ച് ഉപരിതലത്തിൽ നിന്ന് വ്യത്യസ്ത തരം സംയുക്തങ്ങൾ രൂപപ്പെടുത്തുന്നു. ', 'അകത്തേക്കു പോകുക. ', 'എത്രിന് ഗൈറ്റ് രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുമോ എന്നതിനെക്കുറിച്ച് നമുക്ക് അല്പം സംസാരിക്കാം. ', 'തീർച്ചയായും, എത്രിന്ജിറ്റിന് വികസനത്തിന് സാധ്യതയുള്ള ഒരു ഘടനയുണ്ടെന്ന് നമുക്കറിയാം. ', 'ഈര് ന്നം കുടിച്ചുകൊണ്ട് പ്രധാനമായും ഈര് ന്നം വലിച്ചെടുക്കുന്നതിലൂടെയാണ് ഈര് ന്നം വലിച്ചെടുക്കുന്നത്. ', 'അത് തകര് ക്കാന് കാരണമാകുന്ന ഒരു പരിസ്ഥിതി, ശരിയാണ്. ', 'എന്നാൽ നേരിട്ടുള്ള തെളിവ് എന്താണെന്നും എത്രിന്ജിറ്റിന്. ', 'ബെറ്റിന് റെ സിസ്റ്റം വിപുലീകരിക്കാന് കാരണമാകുന്നു. ', 'പ്രഥമ എത്രിന്ജിറ്റ് പ്രക്രിയയുടെ ആദ്യഘട്ടത്തിൽ രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റാണ് എന്ന് നമുക്കറിയാം. ', 'സിമന്റ് ഹൈഡ്രേഷനിൽ, സിമന്റ് അല് മിനേറ്റുകൾ പോലുള്ള ഘട്ടങ്ങൾ. ', 'സിമന്റിന് ചേര് ന്ന സൾഫേറ്റ്, ആദ്യകാല എട്രിംഗിറ്റും ഈ ആദ്യകാല എട്രിംഗിറ്റും. ', 'പിന്നീട് മോണോ സൾഫേറ്റായി മാറുന്നു, കാരണം സിസ്റ്റത്തിൽ അമിതമായ അല് മിനേറ്റ് ഉണ്ട്. ', 'ഇപ്പോൾ പ്രാഥമിക എത്രിന്ജിറ്റ് രൂപീകരണത്തിന്റെ തെളിവുകളും ഉണ്ട്. അത് സിമന്റുകളിൽ സംഭവിക്കുന്നു. ', 'സൾഫേറ്റ് കൂടുതലുള്ള സ്ഥലത്ത്. ', 'അതായത്, നീ വളരെ ദീർഘകാലം എത്രിന്ജിറ്റ് നിക്ഷേപിക്കുന്നത് തുടരുന്നു. ', 'ശരി, ശരി. ', 'ഇത് സംഭവിക്കുന്നത് സൾഫാറ്റിന്റെ ആന്തരിക സ്രോതസ്സുകളാണ്. ', 'ബാഹ്യ എത്രിന്ജിറ്റ് എന്നത് ബാഹ്യ പരിസ്ഥിതികളിൽ നിന്ന് വരുന്ന സൾഫേറ്റുകൾ ഉണ്ടാകുമ്പോൾ. ', 'സൾഫാറ്റിന്റെ അകലം പുറത്ത് നിന്ന്. ', 'ഇതിനു പുറമെ, വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണം നാം വിളിക്കാം. ', 'ആന്തരികമായി അടിച്ചമർത്തപ്പെട്ട എത്രിന്ജിറ്റിന്റെ രൂപീകരണം, അത് പിന്നീട് വളരുന്നു. ', 'ഇതിനർത്ഥം ചില കാരണങ്ങളാൽ ആദ്യഘട്ടങ്ങളിൽ എട്രിംഗിറ്റ് രൂപപ്പെടുന്നില്ലെന്നും. ', 'ചില ഘടകങ്ങളുടെ കൂട്ടായ്മ അതിനെ കഠിനമായ അവസ്ഥയില് രൂപീകരിക്കാൻ കാരണമായി. ', 'വ്യക്തമായും, കഠിനമായ ബെറ്റണിന്റെ ഉള്ളിൽ ഒരു വിപുലമായ വസ്തു രൂപം കൊള്ളുമ്പോൾ. ', 'നിങ്ങൾക്കു് ഇതിലൂടെ വലിയ നാശനഷ്ടങ്ങൾ ഉണ്ടാകുന്നു. ഇത് ഡിഎഫ് അല്ലെങ്കിൽ വൈകിയ എട്രിംഗിറ്റ് എന്നും അറിയപ്പെടുന്നു. ', 'രൂപീകരണം, ശരി. ', 'ഇത് വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണത്തിന് വേണ്ടി ഉപയോഗിക്കുന്ന പൊതുവായ ഒരു പദാവലി ആണ്. ', 'പൊതുവേ പറഞ്ഞാൽ, സൾഫേറ്റ് ആക്രമണ പ്രക്രിയ ഏതൊരു വൈകി എത്രിന്ജിറ്റ് രൂപീകരണം നയിക്കുന്നു. ', 'കഠിനമായ ഘട്ടങ്ങള്. ', 'അതുകൊണ്ട് എത്രിന്ജിറ്റിന്റെ രൂപീകരണം ഒരു സെക്കൻഡറി എത്രിന്ജിറ്റിന്റെ രൂപീകരണം ആണ്. ', 'അതായത്, സാധാരണമായ ഘടകങ്ങളാൽ രൂപപ്പെടുന്ന പ്രാഥമിക എത്രിന്ജിറ്റിൽ നിന്നും നാം അതിനെ വേർതിരിക്കുന്നു. ', 'സിമന്റിന്. ജലാംശം, ശരി. ', 'ഇപ്പോൾ നിങ്ങൾ നോക്കിയാൽ ഉത്പാദനം കാരണം രൂപം കൊണ്ട ക്രിസ്റ്റലിൻ വസ്തുക്കളുടെ തരം. ', 'എത്രിന്ജിറ്റിന്റെ എത്രിന്ജിറ്റിന് നഖം രൂപം കിട്ടുന്നു. ', 'അങ്ങനെ എത്രിന്ജിറ്റ് നീണ്ട അളവിലുള്ള സൂചികളെ പോലെ രൂപപ്പെടുന്നു. ', 'എത്രിന്ജിറ്റിന്റെ നീളവും കനം അനുപാതവും ചുറ്റുമുള്ള പരിസ്ഥിതിയുടെ പിഎച്ചിനെ ആശ്രയിച്ചിരിക്കുന്നു. ', 'ഇപ്പോൾ കാണുന്നത് വളരെ ഉയർന്ന പിഎച്ച് ഉള്ളപ്പോൾ നമ്മൾ വളരെ. ', 'എത്രിന്ജിറ്റിന്റെ നീണ്ട സൂചികൾ. ', 'നമ്മൾ കുറച്ചുകൂടി ചെറിയ എത്രിന്ജിറ്റ് ക്രിസ്റ്റലുകൾ രൂപീകരിക്കുന്നു, ശരി. ', 'പക്ഷെ 12 നും 10 നും ഇടയിൽ നമ്മൾ എത്രിന്ജിറ്റ് സൂചികൾ രൂപീകരിക്കുന്നു. ', 'വളരെ ഉയർന്ന നീളമുള്ളവ. ', 'സിമന്റ് ഹൈഡ്രേറ്റേഷന്റെ ആദ്യഘട്ടങ്ങളിൽ നിങ്ങൾ. ', 'ഈ മൈക്രോക്രിസ്റ്റാലിൻ എത്രിംഗൈറ്റ് ദൈർഘ്യം വളരെ ചെറുതാണ്, ', 'വ്യാസം അല്ലെങ്കിൽ ദൈർഘ്യം കനം അനുപാതം വളരെ ചെറുതാണ്. ', 'എന്നാൽ എത്രിന്ജിറ്റ് വികസിക്കുമ്പോൾ, നിങ്ങൾക്ക് ഒരു സാഹചര്യത്തെക്കുറിച്ച് ചിന്തിക്കാം. ', 'സൾഫേറ്റ് ആക്രമണം, ഈർപ്പം ആഗിരണം ചെയ്യപ്പെടുന്ന ഒരു എത്രിന്ജിറ്റ് വികാസം, എത്രിന്ജിറ്റ് യഥാർത്ഥത്തിൽ. ', 'ഉയർന്ന നീളത്തിൽ കാണിക്കുന്ന ക്രിസ്റ്റൽ ശീലം കാണിച്ചു തുടങ്ങുക, ശരി. ', 'അതുകൊണ്ട് ഉയർന്ന പിഎച്ച് അളവിലുള്ള മൈക്രോക്രിസ്റ്റാലിൻ എത്രിംഗൈറ്റ് പുതിയ ബെറ്റിനിൽ കാണപ്പെടുന്നു. ', 'ആദ്യകാല ജലാംശം പ്രതീക്ഷിക്കുക, ശരിയാണ്. ', 'ഇപ്പോൾ ഗവേഷകരുടെ അഭിപ്രായത്തില്, ഇത് നന്നായി രേഖപ്പെടുത്തിയിട്ടുണ്ട്. ', 'ജല ആഗിരണം ചെയ്യാനുള്ള ശേഷിയുള്ള എത്രിംഗൈറ്റ് ഉയർന്ന വികാസത്തിലേക്ക് നയിക്കുന്നു, ', 'pH അവസ്ഥ വളരെ ഉയർന്നതാണെങ്കില് സംഭവിക്കും. ', 'അതിനാൽ, നിങ്ങൾ സൾഫേറ്റ് എക്സ്പോഷറുകളിലേക്ക് വന്നാൽ, pH കുറയുന്നു, ഉദാഹരണത്തിന്, നിങ്ങൾ. ', 'പരിസ്ഥിതിയിലെ പിഎച്ച് കുറവാണെങ്കിൽ, അത് എത്രിന്ജിറ്റിന്. ', 'സിസ്റ്റത്തിൽ യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുമ്പോൾ ഇത് വളരെ ആഗിരണം ചെയ്യാത്തതായിരിക്കാം. ', 'വെള്ളം ആഗിരണം ചെയ്യുകയോ കുടിക്കുകയോ ചെയ്യുന്നില്ല, അത് വളരെ ഉയർന്ന വികാസങ്ങളിലേക്ക് നയിക്കുന്നില്ല. ', 'അതിനാൽ എത്രിംഗിറ്റിന്റെ രൂപീകരണം വികസനത്തിന് കാരണമാകുന്നത് പ്രധാനമായും. ', 'പുറമേയുള്ള പിഎച്ച് ഉല് പാദവും വളരെ ഉയർന്നതാണ്. ', 'ഇത് വലിയ അളവിൽ നാം ശരിക്കും വിപുലീകരണങ്ങള് സംഭവിക്കുന്നത് കാണുന്നില്ല എന്തുകൊണ്ട് വിശദീകരിക്കുന്നു. ', 'വയല് അടിസ്ഥാനമാക്കിയുള്ള സാമ്പിളുകള്. ', 'ലാബിലെ സാമ്പിളുകളിൽ നാം വളരെ ഉയർന്ന അളവിലുള്ള വികാസത്തെ കാണുന്നു. ', 'ആക്രമണത്തിന്റെ തുടർച്ചയായ പുനരുജ്ജീവനത്തോടെയുള്ള പ്രകടനം. ', 'കാരണം, നിങ്ങള് ക്ക് നിലത്തുള്ള വെള്ളം ഉണ്ട്, അത് ആക്രമണകാരിയെ നിരന്തരം ചാർജ് ചെയ്യുന്നു. ', 'പരിഹാരം. ', 'അതിനുപുറമെ, നമുക്ക് മറ്റു ഇയോണിക് ജീവികളുടെ സാന്നിധ്യം ഉണ്ട്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിന്റെ പിഎച്ച്. ', 'അത് സംഭവിക്കുമ്പോൾ, യഥാർത്ഥത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എട്രിംഗിറ്റ്. ', 'സാധാരണ മുങ്ങുന്ന അവസ്ഥയില് സിസ്റ്റത്തിനുള്ളില് രൂപപ്പെടുന്നതു പോലെ പ്രതികരിക്കുന്നതോ അല്ലെങ്കില് വിശാലമായതോ ആയ. ', 'ഒരു കപ്പ് എടുത്തു സൾഫേറ്റ് പരിഹാരം ഉള്ളിൽ വച്ച് ഒരു ബെറ്റൺ. ', 'ഉള്ളില് ഒരു സാമ്പിളാണോ? ', 'ബെറ്റണിന് വളരെ ഉയർന്ന പിഎച്ച് ഉണ്ട്, 13. ', 'അപ്പോൾ അത് pH 7 അല്ലെങ്കിൽ 8 ഉള്ള സൾഫേറ്റ് പരിഹാരത്തിനുള്ളിൽ വെക്കുമ്പോൾ എന്ത് സംഭവിക്കും? ', 'നിങ്ങൾക്ക് ബെറ്റണിന്റെ പരുത്തി പുറം പരിസ്ഥിതിയിലേക്ക് ഒഴുകും. ', 'ഓക്കേ, പുറത്തെ പരിഹാരത്തിന്റെ പി. എച്ച് വളരെ ഉയർന്ന തലത്തിലേക്ക് സ്ഥിരത കൈവരിക്കുകയാണ്. ', 'ചില സന്ദർഭങ്ങളിൽ 12 ന് മുകളിലായി നാം എത്തുന്നു. ', 'ഈ സാഹചര്യത്തിൽ, രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റ് വിപുലമായ സ്വഭാവമുള്ളതാണ്. ', 'ചുറ്റുമുള്ള പരിഹാരത്തിലെ പി. എച്ച് ഉയർന്നതാണെങ്കിൽ, എത്രിന്ജിറ്റ് വ്യാപകമാണ്, അത്. ', 'ലാബോറട്ടറി പഠനങ്ങളിൽ സൾഫേറ്റ് ആക്രമണവുമായി സാധാരണയായി ബന്ധപ്പെട്ട വിപുലീകരണങ്ങളിലേക്ക്. ', 'എന്നാൽ, ഈ മേഖലയില് നാം ഒരേ തരത്തിലുള്ള വികാസങ്ങള് കാണുന്നില്ല. ', 'എത്രിംഗിറ്റിന്റെ സ്ഥിരത ഒരു പ്രത്യേക സ്ഥലത്ത് നിലവിലുള്ള പിഎച്ച് തലങ്ങളിൽ ആശ്രയിച്ചിരിക്കുന്നു. ', 'പരിസ്ഥിതി. ', 'ഉദാഹരണത്തിന്, pH വളരെ ഉയർന്നതോ 9 മുതൽ 13 വരെയുള്ള pH പരിധിയിലുള്ളതോ ആയ. ', 'ഇത് സാധാരണയായി ഒരു എത്രിന്ജിറ്റ് പരിഹാരത്തിന്റെ സ്ഥിരതയുടെ പരിധി ആണ്. ', 'അതുകൊണ്ട്, വിവിധ ഗവേഷണങ്ങളിലൂടെ വിവിധ പിഎച്ച് ശ്രേണികൾ ലഭ്യമാക്കുന്നു. ', 'സ്ഥിരതയുള്ളതാണ്. ', 'ചുറ്റുപാടിലെ അവസ്ഥ അസിഡ് ആയാൽ, ആ പരിസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ഉണ്ടാകില്ല. ', 'വളരെ സ്ഥിരതയുള്ളതാണ്. ', 'അതിനാൽ, എട്രിംഗൈറ്റ് പകരമായി പ്രവർത്തിക്കുന്നുണ്ടോ എന്ന് പരിശോധിക്കാൻ, നിങ്ങൾ ചുറ്റുമുള്ള നിലവിലുള്ള അവസ്ഥകൾ പരിശോധിക്കണം. ', 'സ്ഥിരതയുള്ളവരാകാൻ. ', 'ഉദാഹരണത്തിന്, ആസിഡ് പരിതസ്ഥിതിയിൽ, എത്രിന്ജിറ്റിന്. ', 'ഗിപ്സും, അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡും, പ്രത്യേകിച്ച് കാർബണേഷൻ സംഭവിക്കുന്നതോടെ, അത്. ', 'അല് മ്യൂ ണി മി ൻ ഹൈ ഡ്രോക്സൈ ഡ്, ജിപ്സം എന്നിവയുമായി ചേർന്ന് കല് സി യം കാർബണേറ്റ് ഘടകങ്ങൾ രൂപം കൊള്ളുന്നു. ', 'അസിഡ് പരിതസ്ഥിതിയിൽ എത്രിന്ജിറ്റ് ജിപ്സും ആല്യുമിനിയം ഹൈഡ്രോക്സൈഡും ആയി മാറുന്നു. ', 'വീണ്ടും, ഈ ഫീൽഡിലെ തെളിവുകൾ നോക്കിയാൽ, പൂർണ്ണമായും നിലനിൽക്കുന്ന ഘടനകൾ. ', 'ഉണങ്ങിയ കഠിനമായ ബെറ്റണിന് റെയില് എത്രിന്ജിറ്റ് കണ്ടുപിടിക്കാന് പാടില്ല. ', 'അതിനാൽ നിങ്ങൾക്ക് ഈർപ്പം ഇല്ലെങ്കിൽ, നിങ്ങൾ ശരിക്കും എട്രിംഗിറ്റിന്റെ രൂപീകരണം കാണുന്നില്ല. ', 'പിന്നീട്, നിങ്ങൾ മറ്റെവിടെയെങ്കിലും ഉണങ്ങുകയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, എത്രിന്ജിറ്റ്. ', 'ഇത് കാണാവുന്നതാണ്, പക്ഷേ ഉണക്കിയതുകൊണ്ട്, നിങ്ങൾക്ക് ഒരു അവസ്ഥ ഉണ്ടാകില്ല. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണം വിപുലീകരണത്തിന് കാരണമാകുന്നു. ', 'ഇപ്പോൾ ഞാൻ നിങ്ങളെ കാണിച്ചു തരാം അടുത്തിടെ നടന്ന ചില ലാബ് പഠനങ്ങൾ. ', 'എത്രിംഗിറ്റിന്റെ രൂപീകരണവും വികാസവും. ', 'ലാബിൽ പഠിക്കുന്നതില് സാധാരണയായി നമ്മൾ പഠിക്കുന്നത് മോർട്ടാർ പ്രിസ്മാറ്റിക് സാമ്പിളുകളാണ്. ', '25 x 25 x 285 മില്ലിമീറ്റർ ഈ സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ സൂക്ഷിക്കുന്നു. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ ഉള്ളിൽ മുങ്ങുകയും അവയിൽ നിന്ന് സാമ്പിളുകൾ ഇടയ്ക്കിടെ നീക്കം ചെയ്യുകയും ചെയ്യുന്നു. ', 'നീളം ഇവിടെ കാണിച്ചിരിക്കുന്ന നീള താരതമ്യ ഉപയോഗിച്ച് അളക്കുന്നു. ', 'അതായത്, 3 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് 50 ഗ്രാം സൾഫേറ്റ് ലിറ്ററിന് സൂക്ഷിച്ചിരിക്കുന്ന മർട്ടാർ ഉപയോഗിച്ച് തയ്യാറാക്കിയ സാന്നിധ്യം. ', 'പരിഹാരങ്ങള്. ', 'ഈ കേസിൽ അത് സോഡിയം സൾഫേറ്റ് ആയിരുന്നു. ', 'അതുകൊണ്ട് നമ്മൾ ചർച്ച ചെയ്ത പോലെ കാറ്റോൺ പ്രഭാവത്തിൽ നിന്നും ഉണ്ടാകുന്ന ഏതെങ്കിലും ദ്വിതീയ സംവിധാനങ്ങൾ ഉണ്ടാകുമെന്ന് നിങ്ങൾ പ്രതീക്ഷിക്കുന്നില്ല. ', 'മഗ്നീഷ്യം ഉപയോഗിച്ച്, നിങ്ങൾക്ക് കാറ്റീന്റെ പ്രഭാവം ഉണ്ട്, അത് വളരെ ഗുരുതരമാണ്. ', 'പരിഗണനയിലാക്കണം. ', 'അതുകൊണ്ട് ഈ പ്രോജക്റ്റിൽ നാം ചെയ്തതെന്തെന്നാൽ, ദൈർഘ്യ മാറ്റം നിരന്തരം നിരീക്ഷിക്കുകയായിരുന്നു. ', 'കൂടാതെ എട്രിംഗിറ്റിന്റെ അളവ് ക്വാണ്ടിഫിക്കേഷൻ ഞങ്ങൾ എക്സ്-റേ ഡിഫ്രാക്ഷൻ വിശകലനത്തിലൂടെ ചെയ്തു. ', 'ഇവിടെ കാണിക്കുന്നത് വ്യത്യസ്തമായ വിപുലീകരണത്തിന്റെ വ്യാപ്തിയാണ്. ', '32 ആഴ്ചയിലേറെയായി എക്സ്പോഷർ ചെയ്ത മോർട്ടാർ സാമ്പിളുകൾ ഇവയാണ് 2 മിശ്രിതങ്ങൾ, ഒന്ന്. സാധാരണ. ', 'പോർട്ട്ലാന്റ് സിമന്റ്, M2 എന്നിവ പോർട്ട്ലാന്റ് പൊസോളൻ സിമന്റ് ആണ്. ', 'അതിൽ കാർബൺ പൊള്ളലേറ്റിട്ടുണ്ട്. ', '32 ആഴ്ച കഴിഞ്ഞപ്പോൾ മാത്രം കാര്യമായ വികസനം കാണിച്ച സാമ്പിളുകൾ. ', 'ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന ഒപിസി കോൺക്രീറ്റ് അല്ലെങ്കിൽ ഒപിസി മോർട്ടാർ സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'ലിറ്ററിന് 3 ഗ്രാം ലൂഷനിൽ നിങ്ങൾ വളരെ അധികം വികസനം ഉണ്ടായില്ലെങ്കിലും. ', 'സംഭരണത്തിന്റെ അവസാന ഭാഗത്തേക്കുള്ള പ്രവണത വർധിച്ചു. ', 'ഡൈനാമിക് മോഡ്യൂളിലെ മാറ്റം നോക്കുമ്പോൾ, ഇവിടെ ഡൈനാമിക് മോഡ്യൂൾ അളന്നു. ', 'വസ്തുവിന്റെ റെസോണന്റ് ആവൃത്തി പരിശോധിച്ചാണ് ഇത്. ', 'അതുകൊണ്ട് നാം പ്രിസ്മാറ്റിക് സാമ്പിളുകൾ എടുത്തു റെസോണന്റ് ഫ്രീക്വൻസി നോക്കി. ', 'ബെറ്റണിന്റെ വഷളാകുന്നതോടെ റെസോണന്റ് ഫ്രീക്വൻസി. ', 'അതുപോലെതന്നെ കുറയും. ', 'ഇത് ഒരു നാശനഷ്ടമല്ലാത്ത പരീക്ഷണത്തിലൂടെ അപ്രതീക്ഷിതമായി അളക്കുന്ന ഡൈനാമിക് മോഡുലാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് കാണാനാകുന്നതാണു ഉയർന്ന അളവിൽ സൂക്ഷിച്ചിരിക്കുന്ന മോർട്ടാർ സാമ്പിൾ. ', 'സൾഫേറ്റ് പരിഹാരം, സാധാരണ പോർട്ട്ലാന്റ് സിമന്റ് അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടാർ. ', '32 ആഴ്ചയിലെ എക്സ്പോഷർ സമയത്ത് മൊഡ്യൂൾ ഗണ്യമായി കുറഞ്ഞു, മറ്റ് എല്ലാ. സാമ്പിളുകളും. ', 'ഒരു കുറവുമില്ലാതെ വളരെ സ്ഥിരമായ ഒരു ഡൈനാമിക് മോഡ്യൂളും കാണപ്പെടുന്നു. ', 'ഇനി നമുക്ക് അളവുകൾ നോക്കാം. ', 'ഇത് വീണ്ടും ഒരു കണക്കായിട്ടല്ല, ഒരു പട്ടികയായിട്ടാണ് അവതരിപ്പിച്ചിരിക്കുന്നത്. ', 'ഇപ്പോൾ നിങ്ങൾക്ക് കാണാൻ കഴിയുമെങ്കിൽ, ഒപിസി 50 ഗ്രാം ലിറ്ററിന് വിപുലീകരണം 3 ശതമാനത്തോളം. ഉയർന്നതാണ്. ', 'അതൊരു ഉയർന്ന വികസന നിലയാണ്. ', 'ഈ എ എസ് ടി എം ടെസ്റ്റ് ചെയ്യുമ്പോൾ, ഇത് എ എസ് ടി എം സി 1012 പ്രകാരം ആണ്, ഈ ടെസ്റ്റ് രീതി ചെയ്യുമ്പോൾ. ', 'സാധാരണ മോർട്ടറുകളുടെ കാര്യത്തിൽ, നിങ്ങളുടെ വികസനം 0.1% കവിയുന്നുവെങ്കിൽ, 6 മാസത്തെ ഇടവേളയിൽ. ', 'ആ മോർട്ടാർ അല്ലെങ്കിൽ ആ പ്രത്യേക ബോണ്ടറും മോർട്ടാർ സംയോജനവും പ്രതിരോധം ഇല്ലാത്തവയാണെന്ന് നിങ്ങൾ പറയും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങള് ക്ക് വേണ്ടി. ', 'അത് ഒരു സ്വമേധയാ നടപടിക്രമം മാത്രമാണ്. ', 'ഇത് യഥാർത്ഥത്തിൽ ബെറ്റണിന്റെയും സൾഫാറ്റിന്റെയും സ്വഭാവം വെളിപ്പെടുത്തുന്നില്ല. ', 'സമ്പന്നമായ പരിസ്ഥിതി, എന്നാൽ ഈ തുടർച്ചയായ മുങ്ങൽ ടെസ്റ്റ് നിങ്ങളുടെ സാമ്പിൾ ഒരു വികസനം അവസാനിക്കുന്നു എങ്കിൽ. ', 'ആറുമാസത്തിനുള്ളിൽ 0.1% ൽ കൂടുതൽ, അത് സിമന്റ് പ്രതിരോധം ഇല്ല എന്ന് കരുതപ്പെടുന്നു. ', 'സൾഫേറ്റ് ആക്രമണം. ', 'എന്നിരുന്നാലും, ഈ കേസിൽ വെറും 32 ആഴ്ചയിലേയ്ക്ക് 3% വരെ വ്യാപനം രേഖപ്പെടുത്തിയിരുന്നു. ', 'അതായത് എട്ടുമാസം, ഏഴു മുതൽ എട്ടുമാസം വരെ നിങ്ങൾക്ക് 3% വരെ എക്സ്പോഷർ ഉണ്ടായിരുന്നു. ', 'ഒരു ലിറ്ററിന് 3 ഗ്രാം ഒപിസി കണക്കിലെടുത്താൽ അത് ഇപ്പോഴും 0.1% മാർക്കിൽ എത്തിയില്ല. ', 'അതേസമയം, ഒരു ലിറ്ററിന് 50 ഗ്രാം പരിഹാരവും പിപിസി അടിസ്ഥാനമാക്കിയുള്ള മോർട്ടറും ഉള്ളപ്പോൾ അത് ഇപ്പോഴും. ', '0.1%, വിപുലീകരണം 0.1% ൽ താഴെയാണ്. ', 'ലിറ്ററിന് 3 ഗ്രാം ഉള്ള പിപിസി, വിപുലീകരണം ഒന്നും തന്നെയില്ല. ', 'അതായത്, അത് വളരെ പ്രയാസം ശ്രദ്ധിക്കപ്പെടുന്നു. ', 'മുങ്ങുന്ന സമയത്തുനിന്ന് അവസാനത്തെ അളവിലേക്ക് മാറ്റം വരുത്താൻ പ്രയാസമാണ്. ', 'അത് കഴിഞ്ഞു. ', 'അപ്പോൾ ഇത് സിസ്റ്റത്തിൽ രൂപം കൊണ്ടിരിക്കുന്ന എത്രിന്ജിറ്റ് ഉള്ളടക്കത്തിലേക്ക് എങ്ങനെ വിവർത്തനം ചെയ്യപ്പെടുന്നു? ', 'ഇപ്പോൾ ക്രസ്റ്റലിൻ മാത്രം നിലനിൽക്കുന്ന ഘട്ടങ്ങൾ കണ്ടെത്താനായി എക്സ്-റേ ഡിഫ്രാക്ഷൻ ചെയ്തു. ', '∙ എത്രിംഗിറ്റിന്റെ അളവും ക്രസ്റ്റലിൻ ഘട്ടങ്ങൾക്കിടയിലും നിർണ്ണയിച്ചു. ', 'ഇവിടെ എത്രിന്ജിറ്റ് അളവ് ഈ വരിയിൽ നൽകിയിരിക്കുന്നു. ', 'എട്രിംഗിറ്റിന്റെ അളവിൽ സ്ഥിരമായ വർധനയുണ്ടെന്ന് നിങ്ങൾക്ക് കാണാം. ', 'എക്സ്പോഷർ സമയം 9 ആഴ്ചയിൽ നിന്ന് 25 ആഴ്ച വരെ വർദ്ധിപ്പിക്കുക. ', 'അങ്ങനെ ഞങ്ങൾ ഒരു തരം രേഖപ്പെടുത്തി, അങ്ങനെ ഞങ്ങൾ രേഖപ്പെടുത്തി എട്രിംഗിറ്റ് ഉള്ളടക്കം നിർണ്ണയിച്ചു. ', 'എക്സ്-റേ ഡിഫ്രാക്ഷൻ. ', 'ഇത് യഥാർത്ഥത്തിൽ നിലവിലുണ്ടായിരുന്ന എല്ലാ ക്രിസ്റ്റലിൻ ഘടകങ്ങളുടെയും ശതമാനം മാത്രമാണ്. ', 'അത് വളരെ വ്യക്തമായ ബന്ധമാണ്. ', 'ഇത് നമുക്ക് ലഭിച്ച ഇടത്തരം വായനകളിൽ നിന്നും എടുത്ത പോയിന്റുകളുടെ ഒരു കൂട്ടം ആണ്. ', 'ഈ പ്രക്രിയയില് എടുത്തത്. ', 'അതിനാൽ തുടർച്ചയായ മുങ്ങൽ പഠനത്തിലൂടെ. ', 'സിസ്റ്റത്തിൽ യഥാർത്ഥത്തിൽ രൂപം കൊള്ളുന്ന എത്രിന്ജിറ്റിന്റെ അളവ് വളരെ കൂടുതലാണ്. ', 'എന്നാൽ ഇത് യാഥാർത്ഥ്യമാകുമോ ഇല്ലയോ എന്നത് നിലവിലുള്ള അവസ്ഥയെ ആശ്രയിച്ചിരിക്കുന്നു. ', 'ബെറ്റിന് റെ ഘടനയുടെ ചുറ്റും നാം എപ്പോഴും ഉയർന്ന പി. എച്ച് ഉള്ള ഒരു പരിസ്ഥിതിയിലാണോ. ', 'അല്ലെങ്കിൽ നമ്മൾ pH കുറവുള്ള ഒരു പരിതസ്ഥിതിയിലാണോ, അവിടെ മറ്റ് എത്രിന്ജിറ്റ് രൂപങ്ങൾ. ', 'എത്രിന്ജിറ്റിന് മറ്റു ഉൽപ്പന്നങ്ങളിലേക്ക് ചൊരിയാൻ കഴിയുമ്പോള്. ', 'അത് ത്രിന്ജിറ്റിനോട് ബന്ധപ്പെട്ടിരിക്കുന്ന വിപുലീകരണ നിലയ്ക്ക് കാരണമാകില്ല. ', 'തീർച്ചയായും, ചില മോഡലുകൾ ലീനിയറായതോ ക്വാഡ്രേറ്റിക് ആയതോ ആയ. ', 'ഡാറ്റയിലൂടെ എന്തെങ്കിലും സജ്ജീകരിച്ചിരിക്കുന്നു. ', 'അതുകൊണ്ട് ഈ ആവശ്യകത നിറവേറ്റാനാണ് ഇത്. ', 'ഇവിടെ കാണുന്നത് 50 ഗ്രാം ലിറ്ററിന് പരിഹാരം ഉപയോഗിച്ച് ഒപിസി മോർട്ടാർ. വളരെ. ', 'ഉയർന്ന വിപുലീകരണ നിലയും വീണ്ടും അത് ക്വാഡ്രാറ്റിക് തരത്തിലുള്ള ബന്ധത്തിൽ ഉൾക്കൊള്ളുന്നുവെങ്കിൽ. ', 'നിങ്ങൾക്ക് ക്വാഡ്രാറ്റിക് സമവാക്യവുമായി ബന്ധപ്പെട്ട സ്ഥിരതകൾ ലഭിക്കും. ', 'അതുപോലെ തന്നെ 3 ഗ്രാം ലിറ്ററിന് പരിഹാരം വീണ്ടും ക്വാഡ്രാറ്റിക്. ', 'പക്ഷെ, ഈ ബന്ധം നിങ്ങളെ അതിന് നയിക്കുന്നതെന്ത്? അത് നിങ്ങളെ സഹായിക്കും. ', 'വിപുലീകരണം ഒരു നിർണായക മൂല്യം കവിയുന്ന കാലഘട്ടം പ്രവചിക്കുന്നതില്. ', 'ആ നിർണായക മൂല്യം ASTM C1012 ൽ 0.1% ആയി രേഖപ്പെടുത്തിയിട്ടുണ്ടെങ്കിലും, ', 'നിങ്ങളുടെ സൈറ്റിൽ നിലനിൽക്കുന്ന അവസ്ഥയുടെ തരം നിങ്ങൾ ആഗ്രഹിക്കുന്ന ആ വിമർശനാത്മക വികസനം. ', 'അങ്ങനെ ആകണം. ', 'അതിനനുസരിച്ച്, നിങ്ങൾക്ക് പരീക്ഷണം ശരിയായി പരിഷ്ക്കരിക്കാനും മറ്റൊരു വിധത്തിൽ വ്യാഖ്യാനിക്കാനും കഴിയും. ', 'ഡാറ്റ. ', 'ഈ കേസിൽ യാതൊരു കുറവുമില്ല. ', 'ഈ സാഹചര്യത്തിൽ, നിങ്ങളുടെ സാമ്പിളുകൾ നിരന്തരം ഉള്ളിൽ ഉള്ളതിനാൽ, ചുരുങ്ങൽ പൂർണ്ണമായും ഒഴിവാക്കപ്പെടുന്നു. ', 'സൾഫേറ്റ് പരിഹാരം. ', 'അതുകൊണ്ട് ഈ കേസിൽ ഉണക്കലും നനയലും ഇല്ല. ', 'അതിനാൽ നിങ്ങൾ ഉണക്കിയും നനയ്ക്കുകയും ചെയ്യുമ്പോൾ, സാമ്പിൾ ഒരു നിശ്ചിത കാലയളവിൽ പരിഹാരത്തിനുള്ളിൽ തന്നെ തുടരുന്നു. ', 'പിന്നെ അത് ഉണക്കൽ പരിതസ്ഥിതിയിൽ വച്ച് സിസ്റ്റത്തിലേക്ക് തിരികെ വയ്ക്കുന്നു. ', 'അതുവഴി നെറ്റ് നീളത്തിലെ മാറ്റം ഉണ്ടാകാം. അത് ചുരുങ്ങിയതായിരിക്കും. ', 'തീർച്ചയായും, സൾഫേറ്റ് മൂലം നിങ്ങളുടെ മോർട്ടറുകളും കോൺക്രീറ്റുകളും സംരക്ഷിക്കപ്പെടാനുള്ള വിവിധ മാർഗങ്ങളെക്കുറിച്ച് സംസാരിക്കുന്നു. ', 'ആദ്യം, ഏറ്റവും പ്രധാനമായി, കുറഞ്ഞ C3S എംഎൻ ഉപയോഗം ആണ്, കാരണം വീണ്ടും നാം. വളരെ. ', 'വികസനവും എത്രിംഗിറ്റ് രൂപീകരണവും തമ്മിലുള്ള ബന്ധം വ്യക്തമാണ്, പക്ഷേ കുറഞ്ഞ C3S മ്നു. ', 'ആദ്യകാല ജലാംശം പ്രക്രിയയിൽ രൂപപ്പെടുന്ന പ്രാഥമിക എത്രിന്ജിറ്റ്. ', 'എല്ലായിടത്തും സ്ഥിരത പുലർത്തുന്നു. ', 'ഇത് സൾഫേറ്റ് പോലുള്ള മറ്റ് സൾഫേറ്റ് രൂപങ്ങളിലേക്ക് പരിവർത്തനം ചെയ്യുന്നില്ല, അവയ്ക്ക് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ് സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫേറ്റ്. സൾഫ. ', 'ബാഹ്യ സൾഫേറ്റുകൾ ബെറ്റണിന് അകത്ത് വന്നാൽ എട്രിംഗിറ്റിലേക്കു മാറുന്നതിന്റെ. ', 'അങ്ങനെ കുറഞ്ഞ സി 3 എസ് മ്നസ് സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റിന് അടിസ്ഥാനം ആകുന്നു. ', 'അതിനെ നാം SRC എന്ന് വിളിക്കുന്നു, അല്ലെങ്കിൽ സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ്. ', 'സിമന്റ് സിമന്റ് സി3 എസ് കുറവുള്ളതും, ', 'ജലാംശം ലഭിച്ച ശേഷം കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ഉത്പാദിപ്പിക്കുന്നത്. ', 'ഒരു മോളി സി 3 എസ് ല് 3 മടങ്ങ് കല് സിം ഹൈഡ്രോക്സൈഡ് ഉല് പാദിപ്പിക്കുമെന്ന് നിങ്ങള് ക്ക് നന്നായി അറിയാം. ', 'സി. 2 എസ് ലേക്ക്. ', 'അതിനാൽ നിങ്ങൾക്ക് കൂടുതൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ഉണ്ടെങ്കിൽ ഗിപ്സം രൂപപ്പെടാനുള്ള പ്രവണത കൂടുതലാണ് കാരണം. ', 'ബാഹ്യ സൾഫേറ്റുകൾ കാൽസ്യം ഹൈഡ്രോക്സൈഡുമായി പ്രതിപ്രവർത്തനം ചെയ്യുമ്പോൾ നിങ്ങൾ ജിപ്സം രൂപീകരിക്കുന്നു. ', 'അതുകൊണ്ട് സിപ്സസ് രൂപീകരണം കുറയ്ക്കുന്നതിലൂടെ ബെറ്റണിന്റെ പ്രതിരോധം മെച്ചപ്പെടുത്താനും കഴിയും. ', 'അല്ലെങ്കിൽ സൾഫേറ്റ് ആക്രമണത്തിന് വേണ്ടി മോർട്ടാർ. ', 'ഉയർന്ന അലുമിന സിമന്റുകളും സൂപ്പർ സൾഫേറ്റ് സിമന്റുകളും വലിയ തോതിൽ ഉപയോഗിക്കാറില്ല. ', 'ഇന്ന്, പ്രധാനമായും നമ്മൾ സംസാരിച്ച മറ്റ് പ്രശ്നങ്ങളില് നിന്നും. ', 'ജലവൈദ്യുത ഘട്ടങ്ങളുടെ സ്ഥിരത. ', 'സൾഫേറ്റ് എക്സ്പോഷർ കണക്കിലെടുത്ത് ഈ സിമന്റ് രണ്ടും വളരെ നന്നായി പ്രവർത്തിക്കുന്നു. കാരണം വീണ്ടും അവിടെ. ', 'ഈ സംവിധാനങ്ങളിൽ യഥാർഥത്തിൽ സംഭവിക്കുന്ന വൈകി എട്രിംഗിറ്റിന്റെ രൂപീകരണവും ഇല്ല. ', 'ഇപ്പോൾ, തീർച്ചയായും, മിക്കവാറും എല്ലാ കാര്യങ്ങളിലും ഒരു ഭാഗമാകുന്ന രണ്ട് പ്രധാന വശങ്ങളുണ്ട്. ', 'ഈ സാഹചര്യത്തില്, ഈ പ്രശ്നങ്ങള് ക്കു് സംരക്ഷണ സംവിധാനങ്ങള് നല് കുന്നതു്. ', 'ഒന്നാമതായി, പൊസോളാനിക് വസ്തുക്കളും ധാതുഭൂമിയുടെ മിശ്രിതങ്ങളും ഉപയോഗിക്കുന്നു. ', 'ഇത് മിക്ക കേസുകളിലും ഗുണം ചെയ്യും, കാരണം ഇത് കാൽസ്യം അളവ് കുറയ്ക്കും. ', 'സിസ്റ്റത്തില് ഉള്ള ഹൈഡ്രോക്സൈഡ്. ', 'അതുകൊണ്ട്, കുറവ് ജിപ്സസ് രൂപം. കൊണ്ടിരിക്കുന്നു. ', 'ഗിപ്സും രൂപപ്പെടാൻ കുറവുണ്ടെങ്കിൽ നിലവിലുള്ളവയുടെ പരിവർത്തനം കുറവായിരിക്കും. ', 'മോണോ സൾഫേറ്റ് ഉം അല്മുനിനേറ്റ് ഉം എത്രിന്ജിറ്റായി മാറുന്നു കാരണം നേരത്തെ ചർച്ച ചെയ്തതുപോലെ ജിപ്സസ് രൂപീകരണം സംഭവിക്കുന്നു. ', 'ഈ പ്രക്രിയയിലെ ആദ്യ ചുവടുവെപ്പാണ്. ', 'അതിനാൽ ആ ചുവട് നിയന്ത്രിക്കാൻ ശ്രമിക്കുകയാണെങ്കിൽ അടുത്ത ചുവട് സ്വപ്രേരിതമായി നടക്കില്ല. ', 'അതായത്, നിങ്ങൾക്ക് കുറവ് ജിപ്സസ് ഉണ്ടെങ്കിൽ, അത് സോഡിയം സൾഫേറ്റിന് നല്ലതാണ്. ', 'ഇപ്പോൾ സിസ്റ്റത്തിൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് കുറവുണ്ടെങ്കിൽ എന്ത് സംഭവിക്കും? ', 'മഗ്നീഷ്യം സൾഫേറ്റ് പോലുള്ള ഒരു അസിഡ്. സംവിധാനം. ', 'ആ കേസിൽ എന്തു സംഭവിക്കും? ', 'അതുകൊണ്ട് പോര് റ്റ് ലാന്റിറ്റിൻറെ അളവ് കുറവുള്ള ധാതു ചേരുവകളുള്ള കോൺക്രീറ്റ് എങ്ങനെ. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് പരിഹാരങ്ങൾ നേരിടുന്നതുണ്ടോ? ', 'ഒ. പി. സി. യുമായി താരതമ്യം ചെയ്യുമ്പോൾ അവ നല്ലതോ ചീത്തയോ ആയിരിക്കും? ', 'അവള് അതിലും മോശമായിരിക്കും. ', 'മഗ്നീഷ്യം സൾഫാറ്റിനെ സംബന്ധിച്ചിടത്തോളം, ആസിഡ് ഉത്പാദിപ്പിക്കുന്ന സൾഫാറ്റിനെ അടിസ്ഥാനമാക്കിയുള്ള ഏതൊരു ആക്രമണവും. ', 'സിസ്റ്റത്തിലെ അവസ്ഥകൾ. ', 'അതുകൊണ്ട് എസ്ടിഎംഎസ് പ്രതിരോധം സംബന്ധിച്ച് മോശമായിരിക്കും. ', 'ഇപ്പോൾ നാം സംസാരിക്കുന്നത് രാസ സംവിധാനത്തെക്കുറിച്ചാണ്. ', 'സൾഫേറ്റ് നുഴഞ്ഞുകയറ്റത്തിന്റെ ഭൌതിക സംവിധാനത്തെ നാം ശരിക്കും അഭിസംബോധന. ചെയ്യുന്നില്ല. ', 'സിസ്റ്റത്തിന്റെ സുതാര്യതയെ കുറിച്ചാണ്. ', 'ഇപ്പോൾ നമ്മൾ സ്കിഎം ഉപയോഗിക്കുമ്പോൾ സൾഫേറ്റിന് വിധേയമായ വയലിൽ യഥാർത്ഥ കോൺക്രീറ്റ് സാമ്പിളുകൾ. ', 'സൾഫേറ്റ് പരിഹാരം ഉള്ളിൽ കടന്ന് കടക്കുന്നതിനെ വലിയ തോതിൽ പ്രതിരോധിക്കാൻ സാധിക്കും. ', 'ഇപ്പോൾ രാസപരമായി മിനറൽ മിശ്രിതം അടിസ്ഥാനമാക്കിയുള്ള കോൺക്രീറ്റുകളിൽ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് അഭാവം. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് ആക്രമണത്തിന് റെ കാര്യത്തിൽ ഒരു നെഗറ്റീവ് വശം. ', 'എന്നാൽ ആക്രമണ പരിഹാരത്തിന്റെ ഭൌതിക ആഴത്തില് അത് സംഭവിക്കുന്നു. ', 'സിസ്റ്റത്തിലെ താഴ്ന്ന സുതാര്യത കാരണം വലിയ തോതിൽ പരിമിതപ്പെടുത്താവുന്നതാണ്. ', 'പക്ഷേ, സൾഫേറ്റ് ആക്രമണത്തെ സംബന്ധിച്ചിടത്തോളം നടക്കുന്ന രാസവിദ്യാ പഠനങ്ങൾ നോക്കിയാൽ. ', 'മഗ്നീഷ്യം സൾഫേറ്റ് ഉപയോഗിച്ച് മിക്കപ്പോഴും നിങ്ങൾ കാണും. ', 'മിനറൽ അഡിറ്റീവുകൾ വളരെ നല്ലതല്ല, അത് ആസിഡ് ആക്രമണത്തിൽ നാം പിന്നീട് കാണും. ', 'പഠനങ്ങളും. ', 'പക്ഷെ, തീർച്ചയായും, നാം ഇപ്പോഴും ആശങ്കപ്പെടേണ്ട ഏറ്റവും പ്രധാനപ്പെട്ട സ്വഭാവം. ', 'ബെറ്റണിലെ വെള്ളം കുറഞ്ഞ സിമന്റ് അനുപാതം, ബെറ്റണിനെ അപ്രാപ്യമാക്കുന്നതും. ', 'സൾഫേറ്റ് പരിഹാരങ്ങളുടെ നുഴഞ്ഞുകയറ്റത്തിനെതിരെ നിങ്ങള് ക്ക് നല് കാവുന്ന പ്രതിരോധത്തിന്റെ ആദ്യ വരി. ', 'സൾഫേറ്റ് ആക്രമണത്തിലെ സി. 3. എയുടെ സ്വാധീനത്തെ കുറിച്ചുള്ള ചില ലബോറട്ടറി തെളിവുകൾ ഇതാ. ', 'ഇത് കാനഡയിൽ നിന്നാണ്. ', 'ഇവിടെ നിങ്ങൾക്ക് വളരെ വ്യക്തമായി കാണാം, സിമന്റിൽ വളരെ ഉയർന്ന C3A ശതമാനം ഉണ്ടെങ്കിൽ. ', '12.3 ശതമാനം സി 3 എ. ഇവ ഏതുതരം സാമ്പിളുകളാണെന്ന് പോലും അറിയാനാവില്ല. ', 'ഈ സാമ്പിളുകൾ സൾഫേറ്റ് പരിഹാരങ്ങളിൽ പൂർണ്ണമായും മുങ്ങിപ്പോയി. ഇവിടെ നിങ്ങൾക്ക് 3.5% ', 'C3A ഉയർന്ന അളവിലുള്ള കാറ്റലക്ഷണത്തിന് ശേഷം സിലിണ്ട്രിക് സാമ്പിളുകൾ യഥാർത്ഥത്തിൽ കേടായിട്ടില്ല. ', 'സൾഫേറ്റ് പരിഹാരങ്ങൾ. ', 'C3A നേരിട്ട് കാരണം നാം ചെയ്യുന്ന ലാബോറട്ടറി പഠനങ്ങളുടെ അടിസ്ഥാനത്തിൽ. ', 'C3A കുറവുള്ള ബെറ്റണിന്റെ പ്രകടനം താരതമ്യപ്പെടുത്തുമ്പോൾ വളരെ മികച്ചതാണെന്ന് നിങ്ങൾക്ക് വ്യക്തമായി കാണാം. ', 'C3A ഉയർന്ന കോൺക്രീറ്റ് പ്രകടനത്തിന്. ', 'നിങ്ങൾ യഥാർത്ഥ സൈറ്റ് അടിസ്ഥാനമാക്കിയുള്ള പഠനങ്ങൾക്ക് പോകുമ്പോൾ, ഇത്തരത്തിലുള്ള പഠനത്തിന്റെ ഏറ്റവും നല്ല ഉദാഹരണം. ', 'അമേരിക്കയിലെ പോർട്ട്ലാന്റ് സിമന്റ് അസോസിയേഷന്റെ പിസിഎ നടത്തിയ പ്രവര് ത്തനത്തെക്കുറിച്ച്. ', 'ഏതാണ്ട് മുപ്പത് മുതൽ മുപ്പത് വർഷം വരെ നീണ്ടുനിന്ന ഒരു പഠനത്തിലാണ് അവർ ഈ പഠനം നടത്തിയത്. ', 'കൊളറാഡോയിലെ ഈ കോണ്ക്രീറ്റ് സാമ്പിളുകളിൽ ശേഖരിച്ച. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണ് കൂടാതെ മഡിസിൻ തടാകത്തിനകത്ത് മുങ്ങിയ ഈ സാമ്പിളുകളും. ', 'ദക്ഷിണ ദക്കോട്ടയില് സൾഫേറ്റ് ഉള്ളടക്കം കൂടുതലായിരുന്നു. ', 'അങ്ങനെ ഇവ ഭാഗികമായി മുങ്ങിപ്പോയി. സംഭവിച്ചേക്കാവുന്ന കാര്യങ്ങളുടെ യാഥാർത്ഥ്യപരമായ ഫലങ്ങൾ. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണിലായിരിക്കുമ്പോള് ബെറ്റണിന് റെ മേല്. ', 'രസകരമെന്നു പറയട്ടെ, അവരുടെ പഠനം വ്യക്തമായി കാണിച്ചത് വെള്ളം സിമന്റ് ഉള്ള ഏതെങ്കിലും കോൺക്രീറ്റ്. ', 'ഈ എക്സ്പോഷറിൽ 0. 45 ൽ കൂടുതലുള്ള അനുപാതം കേടായി. ', 'അങ്ങനെ ഇത് ഒരു യാഥാർത്ഥ്യമായ എക്സ്പോഷർ ആയിരുന്നു സൾഫേറ്റ് പരിഹാരം വളരെ കേന്ദ്രീകരിച്ച അല്ല ആയിരുന്നു. ', 'യഥാർത്ഥത്തിൽ കണ്ടത്. ', 'ബെറ്റണിന്റെ സാമ്പിളുകൾ വളരെ ചെറുതല്ല, അവർ വളരെ വലിയ സിലിണ്ടറുകൾ ആയിരുന്നു. ', 'ഏഴ് വർഷത്തെ എക്സ്പോഷർ അവർ ഈ നിഗമനം വന്നു. ', '0.45 വെള്ള സിമന്റ് അനുപാതം കേടായി. ', 'ഇത് വളരെ രസകരമാണ് കാണിക്കുന്നത് 0.45 എന്നത് വെള്ളം സിമന്റ് അനുപാതം പരിമിതപ്പെടുത്തുന്നതാണ്. ', 'സൾഫേറ്റ് സമ്പന്നമായ പരിസ്ഥിതികൾ സംബന്ധിച്ചിടത്തോളം ഈ 0.45 കോഡൽ ഭൂരിഭാഗവും പ്രതിഫലിക്കുന്നു. ', 'സ്പെസിഫിക്കേഷനുകളും. ', 'സൾഫേറ്റ് പ്രതിരോധം സംബന്ധിച്ച്, ', 'വെള്ളം സിമന്റ് അനുപാതം കുറയ്ക്കുക 0.45 കുറയുന്നു. ', 'ഈ ഡാറ്റ പിന്നീട് കാലിഫോർണിയ സർവകലാശാലയിലെ ഗവേഷകർ വിശകലനം. ചെയ്തു. ', 'ബെർക്കി ഈ ഡാറ്റ മറ്റൊരു രീതിയില് പിന്നീട് അവതരിപ്പിച്ചു. ', 'വെള്ളം സിമന്റ് അനുപാതവും അവർ എന്തായിരുന്നു? ', '40 വർഷത്തിനു ശേഷവും സുരക്ഷിതമായിരുന്ന കോൺക്രീറ്റ് കാണിക്കാൻ സാധിക്കുന്നതാണു്. ', 'സിമന്റിന് C3A ഉള്ളടക്കം പരിഗണിക്കാതെ തന്നെ സുരക്ഷിതമായി തുടരുന്നു. ഈ കോൺക്രീറ്റുകളിലെല്ലാം വെള്ളം ഉണ്ടായിരുന്നു. ', 'സിമന്റ് അനുപാതങ്ങൾ 0.45 ൽ കുറവാണ്. ', 'സിമന്റ് സിമന്റ് സിസ്റ്റത്തിൽ ഉയർന്ന C3A ഉണ്ടായിരുന്നാലും. ', '0.45 ന് താഴെ നിലനിര് ത്തുന്നതോടെ പ്രകടനം വളരെ നല്ലതായിരുന്നു. ', '40 വർഷത്തിനു ശേഷമുള്ള എല്ലാ കോൺക്രീറ്റുകളും വെള്ള സിമന്റ് ഉള്ളവയാണ്. ', 'അനുപാതം 0.45 ൽ കുറവാണ്. ', 'വീണ്ടും, മിക്ക സവിശേഷതകളും നോക്കിയാൽ, സിമന്റ് പരിധി അടിസ്ഥാനപരമായി കൂടുതൽ സംസാരിക്കുന്നത്. ', 'സിമന്റ് തരം 2 സാധാരണയായി മിതമായ അളവിൽ ഉള്ള സിസ്റ്റത്തിൽ C3A ന്റെ വ്യാപ്തി. ', 'സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റുകൾ. ', 'അതായത്, അവയിൽ 8% C3A ഉണ്ട്. ', 'ടൈപ്പ് 3 ന് സാധാരണയായി C3A ഉള്ളടക്കം കൂടുതലായിരിക്കും, കാരണം നമുക്ക് വേഗത്തിൽ കഠിനമാക്കാനുള്ള സവിശേഷതകൾ ആവശ്യമാണ്. ', 'ഈ സിമന്റുകളിൽ നിന്നും എന്നാൽ സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റുകളായ ടൈപ്പ് 5 സിമന്റുകളിൽ നിന്നാണ് ഞാൻ സംസാരിക്കുന്നത്. ', 'ഇവിടെ എ. എസ്. ടി. എം. സവിശേഷതകളെക്കുറിച്ച്. ', 'ടൈപ്പ് 5 സൾഫേറ്റ് പ്രതിരോധം സിമന്റ് ആണ് അവിടെ C3A ഉള്ളടക്കം കുറവ് നിയന്ത്രിക്കണം. ', '5% ൽ കുറവാണ്. ', 'എന്നാൽ പ്രശ്നം 5 തരം സിമന്റ് സൾഫേറ്റ് പ്രതിരോധം പരിശോധന ഒരിക്കലും. ', 'നിങ്ങൾ എപ്പോഴും 5% ൽ താഴെ C3A ഉള്ളവരായിരിക്കും. ', 'സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ് ഉപയോഗിക്കുമ്പോൾ നിങ്ങളെ സംരക്ഷിക്കുമെന്ന് ആളുകൾ കരുതുന്നു. ', 'സൾഫേറ്റ് ആക്രമണത്തില് നിന്നും. ', 'പിന്നെന്തിനാ ഇത് ഒരു പ്രശ്നമായിരിക്കുന്നത്? ', 'സൾഫേറ്റ് പ്രതിരോധം ഉണ്ടെങ്കിലും നാം എന്തിനാണ് സൾഫേറ്റ് പ്രതിരോധം പരിശോധിക്കുന്നത്? ', 'സിമന്റ്? ', 'കാരണം മിശ്രിതം രൂപകൽപ്പന ചെയ്യാന് നാം വ്യക്തമായി തയ്യാറാകുന്നില്ലെങ്കിൽ നാം മിശ്രിതം. ', 'സിമന്റ് വെള്ളം അനുപാതം ഒരു കാര്യമാണ്. ', 'രണ്ടാമതായി, സിസ്റ്റവുമായി ബന്ധപ്പെട്ട് മറ്റു തരത്തിലുള്ള കേടുപാടുകളും ഉണ്ടാകുന്നതായി നമുക്കറിയാം. ', 'ജിപ്സസ് രൂപീകരണവുമായി ബന്ധപ്പെട്ട ഫിസിക്കൽ സോൾറ്റ് ആക്രമണവും എത്രിംഗിറ്റുമായി ബന്ധപ്പെട്ട മറ്റ് വശവും. ', 'യഥാർത്ഥ കോൺക്രീറ്റ് സാമ്പിളുകളിൽ പരാജയത്തിന്റെ പ്രധാന സംവിധാനം ആയിരിക്കില്ല. ', 'ഒരു ലബോറട്ടറി പഠനത്തിൽ നാം തുടർച്ചയായ മുങ്ങൽ നടത്തുന്നു. ', 'വ്യക്തമായി വിപുലീകരണവുമായി നേരിട്ട് ബന്ധപ്പെട്ടിരിക്കുന്നു, എന്നാൽ ഒരു യാഥാർത്ഥ്യബോധമുള്ള അവസ്ഥയിൽ എത്രിന്ജിറ്റ്. ', 'ഒന്നാമതായി, അത് സൾഫാറ്റിന്റെ മറ്റു രൂപങ്ങളിലേക്ക് പരിവർത്തനം ചെയ്യപ്പെടാം, അത്. ', 'നിങ്ങളുടെ ഘടനയെ നശിപ്പിക്കുന്നതിനു് പ്രധാനമായ ഒരു സംവിധാനം ആയിരിക്കണം. ', 'അതുകൊണ്ട്, നിങ്ങൾ ടൈപ്പ് 5 സിമന്റ് ഉപയോഗിക്കുമ്പോൾ പോലും, അത് സൾഫേറ്റ് ബന്ധപ്പെട്ട പരിശോധനകൾക്കും. ', 'നാം ആഗ്രഹിക്കുന്ന പ്രകടനം നേടുന്നുണ്ടോ എന്ന്. ', 'ചോദ്യം ചെയ്യപ്പെടുന്ന തുടർച്ചയായ മുങ്ങൽ അടിസ്ഥാനമാക്കിയുള്ള ASTM C1012 സൾഫേറ്റുകൾ. ', 'പല ഗവേഷകരും. ', 'സൾഫേറ്റ് ആക്രമണത്തിലെ യഥാർത്ഥ പ്രതിരോധം. ', 'സിസ്റ്റത്തിന്റെ സുതാര്യതയുടെ ഫലങ്ങള് നാം ശരിക്കും ഉൾക്കൊള്ളുന്നില്ലെന്നാല് ബെറ്റിന് റെ കാര്യങ്ങള്. ', 'എന്തായാലും അത് ചർച്ചക്ക് അപ്പുറം ആണ്. ', 'എ. എസ്. ടി. എം. മാനദണ്ഡങ്ങളിൽ നിർദ്ദേശിച്ചിരിക്കുന്ന വിവിധ പരിശോധന രീതികൾ പുനഃസംഗ്രഹിക്കുക. ', 'ഏറ്റവും കൂടുതൽ ഉപയോഗിക്കുന്നത് ASTM C1012 ആണ്. ', '5% സോഡിയം സൾഫേറ്റ് അല്ലെങ്കിൽ 5% മഗ്നീഷ്യം സൾഫേറ്റ് അല്ലെങ്കിൽ നിങ്ങൾക്ക് ഒരു മിശ്രിതം ഉപയോഗിക്കാമെന്ന്. അവർ പറയുന്നു. ', 'സോഡിയം, മഗ്നീഷ്യം, സൾഫേറ്റ് എന്നിവയുടെ. ', 'ഈ സംവിധാനങ്ങളോ പ്രതികരണങ്ങളോ. ', 'തികച്ചും വ്യത്യസ്തമാണ്. ', 'അതിനാൽ നിങ്ങൾ പരീക്ഷയെ എങ്ങനെ നടത്തുന്നു എന്നതിനെക്കുറിച്ച് വളരെ ശ്രദ്ധിക്കണം. ', 'ശരിയായ സൾഫേറ്റ് പരിഹാരം തിരഞ്ഞെടുക്കുന്നത് വളരെ പ്രധാനമാണ്, സാധാരണയായി വിപുലീകരണം അളക്കുന്നു. ', '6 അല്ലെങ്കിൽ 12 മാസം ശേഷം കോൺക്രീറ്റ് അല്ലെങ്കിൽ മോർട്ടാർ യഥാർത്ഥത്തിൽ 20 മെഗാപാസ്കൽ എത്തുന്നത് മാത്രം. ', 'സൾഫേറ്റ് പരിഹാരത്തിന് വിധേയമായി, ഒരു മിനിമം അളവ്. ', 'സിസ്റ്റത്തില് ഇതിനകം തന്നെ വികസിപ്പിച്ചെടുത്ത കരുത്ത്. ', 'വീണ്ടും പരിശോധന പരിഹാരം 50 ഗ്രാം ആണ് ലിറ്ററിന് സൊഡിയം സൾഫേറ്റ്. പരിഹാരം. ', '20 മെഗാപാസ്കല് ല് അധിക സിമന്റിംഗ് വസ്തുക്കളും പ്രതികരിക്കാന് സാധിക്കും. ', 'അതിനർത്ഥം നമ്മൾ 7 ദിവസം മാത്രം ചികിത്സിക്കുന്നു എന്ന് നാം പറയുന്നില്ല എന്നാണ്. ', 'ഏഴു ദിവസത്തിനകം ഒ. പി. സി. വിറക്കുന്ന ചാരത്തോട് താരതമ്യം ചെയ്യുമ്പോൾ വ്യത്യസ്തമായ ഒരു നിലയിലുള്ള പ്രതികരണമായിരിക്കും ഉണ്ടാകുക. ', 'അതുകൊണ്ട് നമ്മൾ പറയുന്നത് എല്ലാ സാമ്പിളുകളും ഒരേ ശക്തി നേടിയെടുക്കുന്നതുവരെ. ', 'സൾഫേറ്റ് പരിഹാരത്തിന് നാം അവയെ വിധേയമാക്കും. ', 'ഇപ്പോൾ നിങ്ങൾ ഈ രംഗത്ത് കാണാനാകുന്ന മറ്റ് സൾഫേറ്റ് ബന്ധപ്പെട്ട സംവിധാനങ്ങൾ. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷൻ എന്ന് വിളിക്കപ്പെടുന്ന ഒരു വസ്തു. ', 'സൾഫേറ്റ് സമ്പന്നമായ മണ്ണിൽ ഉൾച്ചേർത്തിരിക്കുന്ന നിരകൾ. ', 'മണ്ണിന്റെ വായു ഇന്റർഫേസിൽ കൂടുതൽ നാശനഷ്ടങ്ങൾ ഉണ്ടാവുക, അത് നിരയുടെ ഭാഗത്ത് അല്ല. ', 'മണ്ണിൽ പൂർണമായും മുങ്ങിപ്പോയിരിക്കുന്നു. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷന്റെ അധിക ഫലങ്ങൾ. ', 'ഉപ്പ് ക്രിസ്റ്റലൈസേഷൻ പ്രധാനമായും ഉപ്പുകളുടെ അണുവിന് റെ ഉള്ളിലെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന്, റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന് റെ അണുവിന്. ', 'വെള്ളം നീരാവിയിലൂടെയും ഉപ്പിന്റെ ഉരുകൽ വഴിയും. ', 'സൾഫാറ്റിന്റെ വിവിധ രൂപങ്ങൾ തമ്മിലുള്ള മാറ്റം, അത് വികാസത്തിൽ മാറ്റം വരുത്തുന്നു അല്ലെങ്കിൽ. ', 'ജലങ്ങളില് ചേര് ന്നതിനാല് ക്രിസ്റ്റല് ലീവുകളുടെ അളവുകള് മാറ്റം. ', 'ജലാംശം മൂലം ക്രിസ്റ്റലിന്റെ വലിപ്പം മാറുന്നു. ', 'സിസ്റ്റത്തിലെ സമ്മർദ്ദം. ', 'ഇതിനു പുറമെ, ഞങ്ങൾ സംസാരിച്ച മറ്റ് വശങ്ങളും ഉണ്ട്. ', 'ഇത് ഒരു വിക്കി ആക്ഷൻ ആണ്. ഇത് ഇത്തരത്തിലുള്ള കേസുകളിൽ വളരെ പ്രധാനമാണ്. ', 'ഒരു വശത്ത് തികച്ചും വരണ്ടതും മറ്റേ വശത്ത് തികച്ചും വരണ്ടതുമായ ഒരു പരിസ്ഥിതിയും. ', 'രസകരമെന്നു പറയട്ടെ, നിങ്ങൾ വെള്ളം സിമന്റ് അനുപാതം കുറവാണെങ്കിൽ. ', 'നിങ്ങളുടെ സിസ്റ്റത്തിലെ വോട്ടെണ്ണൽ നിരക്ക് 0.45 ആണ് വോട്ടെണ്ണൽ നിരക്ക്. ', 'സക്ഷണം സംഭവിക്കും കാര്യമായി കുറയുന്നു. ', 'അതിനാൽ ഈ 0.45 ന്റെ അർത്ഥം രാസപരമായി മാത്രമല്ല, ', 'ഒരു ഭൌതിക ആക്രമണ കാഴ്ചപ്പാട്. ', 'പോർട്ട്ലാന്റ് സിമന്റ് അസോസിയേഷനിൽ നിന്നും ഉപ്പിന്റെ ക്രിസ്റ്റലൈസേഷന് റെ തെളിവുകളാണിവ. ', 'സിമന്റ് തരം 5 ഉള്ള കോൺക്രീറ്റുകളെ സംബന്ധിച്ചുള്ള പിസിഎ നടത്തിയ ദീർഘകാല പഠനമാണിത്. ', 'ഇരുവരും സൾഫേറ്റ് പ്രതിരോധമുള്ള സിമന്റ് കൊണ്ടാണ് നിർമ്മിച്ചിരിക്കുന്നത്. ', 'ഒന്നിന് 0.65 എന്ന ഉയർന്ന വെള്ള സിമന്റ് അനുപാതമുണ്ട്, മറ്റൊന്നിന് 0.39 എന്നതും കാണാനാകും. ', 'വ്യക്തമായി പ്രകടനം. ', '12 വർഷത്തിനു ശേഷം കോൺക്രീറ്റിന്റെ കാഴ്ചശക്തി 5 ആയിരുന്നതിനാൽ അത് പരമാവധി മോശമായി. ', 'നില. ', 'ഇവിടെ 16 വർഷത്തിനു ശേഷവും കോൺക്രീറ്റിന് 2 റേറ്റിംഗ് ഉണ്ടായിരുന്നു. അതായത്, അത് വളരെക്കാലം. ', 'അത് പൂർണമായും തകര് ന്നുപോകും മുമ്പ് പോകേണ്ട വഴി. ', 'സൾഫേറ്റ് സംബന്ധിച്ച മിക്ക ഗവേഷണ പഠനങ്ങളിലും കാണിച്ചിരിക്കുന്നത്. ', 'വെള്ള സിമന്റ് അനുപാതം വളരെ പ്രധാനമാണ്. ', 'സൾഫേറ്റ് പ്രതിരോധം നിർണ്ണയിക്കുന്ന പ്രധാന ഘടകമാണ്. ', 'ഇപ്പോൾ മറ്റൊരു തരത്തിലുള്ള സൾഫേറ്റ് ആക്രമണം റിട്രോഗേറ്റ് രൂപീകരണം വൈകിപ്പിക്കുന്നു. ', 'ഇത് ആദ്യമായി കോൺക്രീറ്റിൽ കണ്ടെത്തിയത് എങ്ങനെയാണ്? ', 'യുകെയിലെ ചില റെയിൽവേ സ്ലീപ്പർമാർക്ക് ചില പിളർപ്പുകൾ കാണിക്കാൻ തുടങ്ങിയപ്പോഴാണ് ഇത് സംഭവിച്ചത്. ', 'റെയിൽവേ സ്ലീപ്പറുകൾ ഒരു പ്രീ-കാസ്റ്റ് യാർഡിൽ നിർമ്മിക്കുന്നു. സാധാരണയായി ഇവ പ്രീ-സ്ട്രെസ്ഡ് പ്രീ-കാസ്റ്റ് ആണ്. ', 'റെയിൽവേ സ്ലീപ്പറുകൾ സാധാരണയായി താപനിലയിലുള്ള കഠിനതയ്ക്ക് വിധേയമാണ്, അതിനാൽ കരുത്ത് വർദ്ധിപ്പിക്കുന്നു. ', 'ഈ ഉറങ്ങുന്ന വികസനവും മാപ്പ് ക്രാക്ക് അല്ലെങ്കിൽ ക്രമരഹിതമായി ക്രാക്ക് ശേഷം. ', '15 മുതൽ 20 വർഷം വരെ സേവനം ചെയ്തു. ', 'അങ്ങനെ അന്വേഷിച്ചവർ വിചാരിച്ചു ഇത് ആൽക്കലി സിലിക്കയുടെ പ്രതികരണത്തിന്റെ ഫലമാണെന്ന്. ', 'എന്നാൽ പിന്നീട് അവർ കണ്ടത് ആ പ്രതികരണ സംയുക്തം സിസ്റ്റത്തിൽ ഇല്ലായിരുന്നു എന്നാണ്. ', 'ഈ പിളര് ക്കുകള് മറ്റൊരിടത്തേക്കും ബന്ധിപ്പിച്ചിരിക്കണം. ', 'അങ്ങനെ അവർ സൂക്ഷ്മമായ വിശകലനം ചെയ്യുമ്പോൾ ഈ കോൺക്രീറ്റ്. ', 'ഈ സിസ്റ്റത്തിൽ എത്രിന്ജിറ്റിന്റെ രൂപീകരണം കാണിക്കുന്നു. ', 'വാസ്തവത്തില് അവര് പിളര് ക്കുകളുടെയും ശൂന്യതകളുടെയും സ്ഥലങ്ങള് പിടിച്ചടക്കാൻ തുടങ്ങി. ', 'അല്പം കഴിഞ്ഞ് ഞാന് ചില ചിത്രങ്ങള് കാണിച്ചു തരാം. ', 'സിമന്റ് പേസ്റ്റും അഗ്രഗേറ്റും തമ്മിലുള്ള ഇന്റർഫേസ് ഇതാണ്. ', 'ഈ ഇന്റർഫേസിൽ സൂക്ഷിച്ചിരിക്കുന്നതും നിങ്ങൾക്ക് ഇന്റർഫേസ് മുഴുവൻ എട്രിംഗൈറ്റ് കാണാൻ കഴിയും. ', 'ഈ കൂട്ടായ്മകളിൽ പലതും എത്രിന്ജിറ്റിന്റെ രൂപീകരണം കാണുന്നു. ', 'അതായത്, ഈ മൈക്രോസ്ട്രക്ചറൽ പഠനത്തിൽ ഇത് കണ്ടെത്തി, പിന്നെ അവർ ഒരു നിഗമനത്തിലെത്തി. ', 'ഈ എത്രിന്ജിറ്റ് സിസ്റ്റം പരിഷ്കരിച്ചതായിരിക്കും. ', 'കാരണം, ആദ്യഘട്ടങ്ങളിൽ അത് രൂപപ്പെടാൻ കഴിഞ്ഞില്ല, ഈ ആദ്യഘട്ടത്തിൽ എട്രിംഗിറ്റിന്റെ. ', 'സിസ്റ്റം താപനിലയിൽ കഠിനമായി പാകപ്പെടുന്നതുകൊണ്ടാണ് ഇത് സംഭവിക്കുന്നത്. ', 'നിങ്ങൾ വളരെ ഉയർന്ന താപനില സിസ്റ്റം നൽകുന്നു എങ്കിൽ, നാം സാധാരണയായി സംസാരിക്കുന്നത്. ', '70 ഡിഗ്രി സെൽഷ്യസ് കൂടുതലുള്ള താപനിലയിൽ ഈ ഘട്ടത്തിൽ എത്രിന്ജിറ്റ് രൂപപ്പെടുക. ', 'അഥവാ നിങ്ങൾക്ക് സുൽഫേറ്റുകൾ ഉണ്ടെങ്കിൽ അവ എളുപ്പത്തിൽ. ', 'സൾഫേറ്റുകൾ തുടക്കത്തിൽ എളുപ്പത്തിൽ ലയിക്കുന്നില്ലെങ്കിൽ നിങ്ങൾ. ', 'സാധാരണ ബെറ്റണിന് റെ പോലെ ആദ്യഘട്ടങ്ങളിൽ എത്രിന്ജിറ്റിന് രൂപം കിട്ടും. ', 'അതിനാൽ എത്രിന്ജിറ്റ് രൂപീകരണം പ്രധാനമായും നീരാവിയിൽ ഉയർന്ന താപനിലയിൽ അടയ്ക്കുന്നതാണ്. ', 'സിസ്റ്റത്തിൽ സൾഫേറ്റുകളുടെ വളരെ കുറഞ്ഞ ലയിക്കുന്നതാണെങ്കിൽ വീണ്ടും എട്രിംഗൈറ്റ്. ', 'രൂപീകരണം. തടയാം. ', 'അങ്ങനെ, ഈ സൾഫേറ്റുകൾക്ക് സംഭവിക്കുന്നത്, അവ നേരത്തെ പുറത്തിറങ്ങാത്തതുകൊണ്ട് അവ. ', 'സി. എസ്. എച്ച്. യിൽ സൾഫേറ്റുകൾ സി. എസ്. എച്ച്. യിൽ ആഗിരണം ചെയ്യപ്പെടുന്നു. ', 'വാസ്തവത്തില് ചൂട് കറക്കുന്ന സിമന്റിനെ അല്ലെങ്കിൽ ചൂട് കറക്കുന്ന കോൺക്രീറ്റ് എടുക്കുകയാണെങ്കിൽ നിങ്ങള് വളരെ വ്യക്തമായി കാണും. ', 'സി. എസ്. എച്ച്. യുടെ വിശകലനം ചെയ്യുമ്പോൾ അതിൽ ധാരാളം സൾഫർ അടങ്ങിയിരിക്കുന്നതും ഈ സൾഫേറ്റ്. ', 'അത് റ്റ്രിംഗിറ്റ് അല്ലെങ്കിൽ മോണോ സൾഫേറ്റ് പോലുള്ള പ്രതികരണ ഉൽപ്പന്നങ്ങളിലേക്ക് പോയിരിക്കുമായിരുന്നു. ', 'അതുകൊണ്ട് ഈ സൾഫേറ്റുകൾ CSH ലേക്ക് പോകുന്നു, പിന്നീട് ഈർപ്പം ഉള്ളപ്പോൾ അലുമിനേറ്റുകളുമായി വീണ്ടും സംയോജിപ്പിക്കുന്നു. ', 'കഠിനമായ ബെറ്റണിൽ എത്രിന്ജിറ്റ് രൂപീകരിക്കാൻ ലഭ്യമാണ്, ഇത് വിപുലമായ സമ്മർദ്ദത്തിന് കാരണമാകുന്നു. ', 'അത് നിങ്ങളുടെ ബെറ്റണിന്റെ തകരാൻ കാരണമാകും. ', 'വീണ്ടും ഇത് ചൂട് കറക്കിയ ബെറ്റണിന്റെ തെളിവാണ്. ', 'ഇന്റർഫേസൽ ട്രാൻസിഷൻ സോണിൽ. ', 'രസകരമെന്നു പറയട്ടെ, സൂക്ഷ്മമായ തെളിവുകൾ കാണിച്ച ഗവേഷണങ്ങളുടെ ഒരു ഭാഗം. ', 'ഇടിസിലും, പിളർപ്പുകളിലും വലിയ ശൂന്യതകളിലും എത്രിന്ജിറ്റ് രൂപം കൊണ്ടിരുന്നു. ', 'ഈ ശൂന്യത പൂർണമായും എത്രിന്ജിറ്റിലാണ് നിറഞ്ഞിരിക്കുന്നത്. ', 'അതുകൊണ്ട് പല ഗവേഷകരും വിശ്വസിച്ചു. ', 'സൾഫേറ്റുകളുടെ വൈകി പുറത്തിറക്കലിന് പുറമെ, പാലിക്കേണ്ടിയിരുന്ന മറ്റ് അവസ്ഥ. ', 'സിസ്റ്റത്തിൽ സൂക്ഷ്മമായ നുറുക്കുകളും ശൂന്യതകളും ഉണ്ടായിരുന്നു. ', 'ഗവേഷകർ നേരത്തെ വിശ്വസിച്ചതും ഇതുതന്നെ. ', 'പക്ഷെ പിന്നീട് ഈ പ്രതിഭാസം മനസ്സിലാക്കിയതോടെ ആളുകൾ ഒരു ധാരണയിലെത്തി. ', 'പോറുകളിലും ശൂന്യതകളിലും രൂപപ്പെടുന്ന എത്രിന്ജിറ്റല്ല വിപുലീകരണത്തിന് കാരണമാകുന്നത്. ', 'സി. എസ്. എച്ച്. യിൽ രൂപപ്പെടുന്ന എത്രിന്ജിറ്റാണ് വിപുലീകരണത്തിന് കാരണമാകുന്നത്. ', 'ഈ സി. എസ്. എച്ച്. എൽ. എഫിന് വളരെ ചെറിയ ഇടം ഉണ്ട്. ', 'എത്രിന്ജിറ്റ് രൂപപ്പെടുകയാണെങ്കിൽ, അത് ഒരു വിപുലീകരണം സൃഷ്ടിക്കുന്നു. ', 'ഇവിടെ നിന്നും എത്രിന്ജിറ്റ് നവീകരിക്കാൻ കഴിയുന്ന മേഖലകളിലേക്ക് പോകുന്നു. ', 'അവ വളര് ന്നു വളര് ന്നു, വളരെ വലിയ നിക്ഷേപങ്ങള് രൂപീകരിക്കുന്നു. ', 'ഉദാഹരണത്തിന്, ശൂന്യതയുള്ള സ്ഥലങ്ങളിലേക്ക്, കൂടുതൽ പൊറസ് ഉള്ള ഇന്റർഫേസൽ ട്രാൻസിഷൻ സോണിലേക്ക്. ', 'സിസ്റ്റത്തില് ലഭ്യമാണ്. ', 'അങ്ങനെ, പോറുകളിലും, ശൂന്യതകളിലും, പിളർപ്പുകളിലും എത്രിന്ജിറ്റിന്റെ രൂപീകരണം. ', 'നിങ്ങളുടെ വൈകിയ എത്രിന്ജിറ്റ് രൂപീകരണത്തിന്റെ ഒരു ഭാഗം. ', 'തുളുമ്പുകളും ശൂന്യതകളും. ', 'അതിനാൽ ഡിഎഫ് കാരണം പ്രാഥമിക എത്രിന്ജിറ്റ് സിഎസ്എച്ചിൽ ഇപ്പോഴും രൂപപ്പെടുന്നു. ', 'ഒടുവിൽ എത്രിന്ജിറ്റ് ന്യൂക്ലിയേറ്റ് ചെയ്യാനും വളര് ന്നതിനും കഴിയുന്ന മേഖലകളിലേക്ക് നീങ്ങുന്നു. ', 'വളരെ വലിയ തോതിൽ. ', 'ഇത് ഗവേഷകരുടെ ചർച്ചാ വിഷയമായിരുന്നു. പക്ഷെ പിന്നീട് അത് വ്യക്തമായി. ', 'സി. എസ്. എച്ച്. യിൽ എട്രിംഗിറ്റ് രൂപീകരണം ക്രാക്ക് ചെയ്യുകയും പിന്നീട് എട്രിംഗിറ്റ് വീണ്ടും നിക്ഷേപിക്കുകയും ചെയ്യുന്നുവെന്ന് കാണിച്ചു. ', 'അത് അവിടെയാണു രൂപപ്പെട്ടതെന്ന് വിശ്വസിക്കാൻ ആളുകളെ പ്രേരിപ്പിക്കുന്ന വിള്ളലുകളിലായിരുന്നു അത്. ', 'അപ്പോൾ ഡിഎഫ് ശരിക്കും ഒരു പ്രശ്നമാണോ? ', 'നിങ്ങളുടെ ബെറ്റണിന്റെ താപനില 70 ഡിഗ്രിക്ക് താഴെയായി നിയന്ത്രിക്കുന്ന കാലത്തോളം അത് വേണ്ട. ', 'ഇപ്പോൾ നാം പലപ്പോഴും അറിയുന്നു ആ താപനില നീരാവി കറന്റ്, നിങ്ങൾ തീർച്ചയായും നിയന്ത്രിക്കാൻ കഴിയും. ', 'പമ്പിന്റെ താപനില 70 നു താഴെയാക്കുന്നതാണെങ്കിലും പ്രശ്നം സിമന്റിന് കാരണമാണ്. ', 'ജലാംശം ചേർക്കുമ്പോൾ ആദ്യഘട്ടങ്ങളിൽ ബെറ്റണിന്റെ ഉള്ളടക്കം വളരെ കൂടുതലാണ്. ', 'ചൂട് അതിനെ മയക്കിപ്പറഞ്ഞാൽ ആന്തരിക താപനില 70 ലധികം ഉയരാൻ സാധ്യതയുണ്ട്. ', 'അതുകൊണ്ട് നാം വളരെ ശ്രദ്ധാലുവായിരിക്കണം, പ്രത്യേകിച്ച് കോൺക്രീറ്റ് ചൂട് കഠിനമായി മലിനമാക്കുന്ന സമയത്ത്. ', 'ഉയർന്ന പ്രകടനമുള്ള കോൺക്രീറ്റുകൾ, സിമന്റ് ഉള്ളടക്കം കുറവായ വെള്ളത്തിൽ വളരെ കൂടുതലുള്ള സിമന്റ്. ', 'അനുപാതങ്ങള്. ', 'എന്നാൽ ഉയർന്ന പ്രകടനമുള്ള കോൺക്രീറ്റുകളുമായി ബന്ധപ്പെട്ട്, നിങ്ങൾ മറ്റൊരാളെ നോക്കണം. ', 'വശം. ', 'സിസ്റ്റത്തിൽ വളരെ ചെറിയ പൊറസ് ഉണ്ടെന്നത് വളരെയധികം ഈർപ്പം അനുവദിക്കില്ല. ', 'ഈ തരത്തിലുള്ള ബെറ്റണിന് റെ അകത്ത് കയറാൻ. ', 'ഈർപ്പം ലഭ്യമല്ലാത്ത പക്ഷം എത്രിന്ജിറ്റ് വികസനം സിസ്റ്റത്തിൽ സംഭവിക്കില്ല. ', 'അങ്ങനെ നിങ്ങൾ ഒരു ബെറ്റണിനെ തിരഞ്ഞെടുത്താൽ, അത് കുറഞ്ഞ വെള്ളം സിമന്റ് അനുപാതമുള്ളതാകും. ', 'സിസ്റ്റത്തിൽ നിങ്ങൾ അനുയോജ്യമാക്കിയ ആദ്യഘട്ട പ്രക്രിയകൾ പരിഗണിക്കാതെ തന്നെ ഡിഎഫിന്. ', 'പോസോളാനിക് വസ്തുക്കളുടെ ഉപയോഗവും സഹായിക്കുന്നു. ', 'എന്തിന്? ', 'വീണ്ടും നാം സിസ്റ്റത്തിന്റെ പൊറസതയും സുതാര്യതയും കുറയ്ക്കുന്നു, പിന്നെ നമ്മൾ വീണ്ടും സൃഷ്ടിക്കുന്നു. ', 'പ്ളൈൻ പോർട്ട്ലാന്റ് എന്ന സ്ഥലത്തുള്ളതിനേക്കാൾ അല്പം താഴ്ന്ന പിഎച്ച് അവസ്ഥ. ', 'സിമന്റ്. ', 'അതുകൊണ്ട് പോസോളാനിക് കോൺക്രീറ്റുകളിലെ എത്രിംഗിറ്റ് രൂപീകരണം അത് നയിക്കുന്നത്ര വിപുലീകരണത്തിന് കാരണമാകില്ല. ', 'സാധാരണ സിമന്റിറ്റി കോണ്ഫീറ്റുകളില്. ', 'അതുകൊണ്ട് പോസോളാനിക് വസ്തുക്കൾ ചേർക്കുന്നതിലൂടെ ഗുണകരമായ ഫലങ്ങൾ ഉണ്ടാകും. ', 'ഒന്നാമതായി, ലഭ്യമായ അല് മിനേറ്റ് അളവ് കുറയ്ക്കുക, അത് എത്രിന്ജിറ്റ് രൂപീകരിക്കാൻ കഴിയും. ', 'നേരിട്ടുള്ള ഫലവും. ', 'പോസോളാനിക് വസ്തുക്കൾ ഉണ്ടെങ്കിൽ, എത്രിന്ജിറ്റ് രൂപീകരിക്കുന്ന അല് മിനേറ്റ് അളവ് കുറയുന്നു. ', 'അങ്ങനെ, ഉള്ളിൽ പൊസോളാനിക് വസ്തുക്കൾ ഉള്ളപ്പോൾ എത്രിന്ജിറ്റ് രൂപീകരണം യാന്ത്രികമായി കുറയുന്നു. ', 'സിസ്റ്റം. ', 'രാസ ആക്രമണത്തിന്റെ മറ്റു രൂപങ്ങളിലേക്ക് നീങ്ങുന്നു. ', 'അതുകൊണ്ട് സൾഫാറ്റിനെ കുറിച്ച് ഞങ്ങൾ ധാരാളം സംസാരിച്ചു. ', 'ക്ലോറൈഡ് ആക്രമണത്തെ നോക്കിയാൽ നമുക്ക് കൺട്രീറ്റ് എങ്ങനെ? ', 'ക്ലോറൈഡ് മൂലം മോശമാകുന്നതാണെങ്കിലും ഈ ക്ലോറൈഡ് എങ്ങനെ? ', 'ബെറ്റണിന് അകത്തു കടന്ന് അത് ആയുധം കയറ്റുന്ന ഉരുക്ക് നിലയിലെത്തുന്ന. ', 'ഉരുക്ക് പൊടിയിടുന്നതു വരെ. ', 'അതിനാൽ ക്ലോറിഡ് ആക്രമണത്തിന്റെ ഉൽപ്പന്നങ്ങൾ അല്ലെങ്കിൽ സിമന്റീഷ്യസ് ഹൈഡ്രേഷൻ ഉൽപ്പന്നങ്ങളുമായി ക്ലോറിഡ് പ്രതിപ്രവർത്തനം. ', 'സിസ്റ്റം വികസനത്തിന് കാരണമാകില്ല. ', 'ഉത്പന്നങ്ങളുടെ തരം യഥാർത്ഥത്തിൽ വികസനം കാരണമാകുന്നില്ല എങ്കിലും പ്രതികരണത്തിന്റെ തരം. ', 'വളരെ സമാനമാണ്. ', 'സൾഫേറ്റ് പ്രതികരണം ഓർക്കുക. ', 'ഇവിടെ C3A+ ക്ലോറിഡ് ഉണ്ട്, അത് ക്ലോറൊഅലുമിനേറ്റ് രൂപീകരണത്തിന് കാരണമാകും. ', 'C3A പ്ലസ് സൾഫേറ്റ് കാൽസ്യം സൾഫുലുമിനേറ്റ് രൂപീകരണത്തിന് കാരണമാകുന്നു. ', 'C3A + ക്ലോറിഡ് കാൽസ്യം ക്ലോറൊ അല് മിനേറ്റ് രൂപീകരിക്കും. ', 'ഫ്രൈഡലിന്റെ ഉപ്പ്, കാൽസ്യം, ക്ലോറൊഅലുമിനേറ്റ് എന്നിവയാണ് ഇതിന്റെ സാധാരണ രൂപങ്ങളിലൊന്ന്. ', 'കാൽസ്യം ക്ലോറോ അല്യുമിനേറ്റ് അടിസ്ഥാനപരമായി എട്രിംഗിറ്റ് രൂപീകരണത്തിന് സമാനമായ ഒരു രൂപീകരണമാണ്, ', 'സൾഫാറ്റിന് പകരം സിസ്റ്റത്തിൽ ക്ലോറൈഡ് ഉണ്ടെന്ന് മനസ്സിലാക്കുക. ഇത് ഗുണകരമാണ്. ', 'കാരണം നിങ്ങൾ ഒരു വികസനമില്ലാത്ത ഉൽപ്പന്നം രൂപപ്പെടുത്തുക മാത്രമല്ല, നിങ്ങൾ ഒരു കെണിയിൽ. ', 'നിങ്ങളുടെ ബെറ്റിന് റെ ഉള്ളില് കയറിയ ചില ക്ലോറിഡുകള്. ', 'നിങ്ങളുടെ ബെറ്റണിന് റെ ഉള്ളില് കയറുന്ന ക്ലോറിഡ് ആക്രമണത്തിന് റെ സൌജന്യ അവസ്ഥയില് ആയിരിക്കണം. ', 'ഉരുക്ക് ഉപരിതലത്തിൽ. ', 'ക്ലോറൈഡുകൾ സിമന്റ് ബന്ധിപ്പിക്കുന്നതുകൊണ്ട് നിങ്ങൾ അളവ് കുറയ്ക്കുന്നു. ', 'ചൊറൊസിനു കാരണമാകുന്ന ക്ലോറൈഡുകൾ. ', 'അതിനാൽ C3A ന്റെ സഹായത്തോടെ ക്ലോറൈഡ് ബന്ധിപ്പിക്കുന്നത്. ', 'ക്ലോറൈഡ് പരിഹാരങ്ങളും ഈ ബന്ധിപ്പിക്കുന്ന സംവിധാനവും നിങ്ങൾ പകരം വയ്ക്കുന്നുവെങ്കിൽ മെച്ചപ്പെടുത്താം. ', 'അല് മിനാ റ്റുകള് അടങ്ങിയിരിക്കുന്ന ധാതു ചേര് ണങ്ങളുള്ള സിമന്റിന്. ', 'ഉദാഹരണത്തിന്, കളിമണ്ണ്, നിങ്ങൾക്ക് സ്ലഗ് ഉണ്ട്, ഇവ സിസ്റ്റത്തിലേക്ക് ധാരാളം അലുമിനേറ്റ് സംഭാവന. ചെയ്യുന്നു. ', 'ഈ അലുമിനേറ്റുകൾ ക്ലോറൈഡ് അയോണുകളെ ഒരു വികസനമില്ലാത്ത ഉൽപ്പന്നമായി ബന്ധിപ്പിക്കും. ', 'അവസാനമായി, സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ് സിമന്റ് സിമന്റ് സിമന്റ് അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. അടങ്ങിയിരിക്കുന്ന സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമന്റ്. സിമ. ', 'ക്ലോറൈഡ് ആക്രമണത്തിൽ പ്രകടനം. ', 'സൾഫേറ്റ് ആക്രമണത്തില്, ഞങ്ങൾ സംസാരിച്ചത് താഴ്ന്ന സി 3 എയെക്കുറിച്ചാണ്. ', 'ക്ലോറൈഡ് ആക്രമണത്തില്, അത് വിപരീതമാണ്. ', 'നമുക്ക് ഉയർന്ന സിമന്റ് ആവശ്യമുണ്ട്. ', 'ചൊറൊസിനു പ്രതിരോധം. ', 'അതുകൊണ്ട് നാശന പ്രതിരോധം മെച്ചപ്പെടുത്തുന്നു, പ്രതിരോധം അല്ല. ', 'അതുകൊണ്ട് ഞാൻ നിങ്ങളെ മഗ്നീഷ്യം ക്ലോറൈഡ് ആക്രമണത്തിന്റെ ചില ചിത്രങ്ങൾ കാണിച്ചു തരാം. ', 'അതുകൊണ്ട് മഗ്നീഷ്യം അയൺ ഈ കേസിൽ പങ്കാളിയാണ്. ', 'അതിനാൽ നിങ്ങൾ യഥാർത്ഥത്തിൽ ഈ ഉപരിതലത്തിൽ ബ്രൂസൈറ്റ് എന്ന് വിളിക്കുന്ന ഒരു പാളി രൂപപ്പെടാൻ നയിക്കും. ', 'അല്ലെങ്കിൽ മഗ്നീഷ്യം ഹൈഡ്രോക്സൈഡ്. ', 'ഫ്രിഡെലിന്റെ ഉപ്പിന്റെ രൂപീകരണത്തിന് തെളിവുകളും ഉണ്ട്. ', 'കല് സിയം ക്ലോറോ അല് മിനേറ്റ് ആണ്. ', 'ചിലപ്പോഴൊക്കെ സി. എസ്. എച്ച്. യുമായി കലർന്ന അവസ്ഥയിലാണ് ഇത് രൂപപ്പെടുന്നത്. ', 'അതുകൊണ്ട് ക്ലോറൊഅലുമിനേറ്റ് നേരിട്ട് ഒറ്റ നിക്ഷേപമായി കണ്ടെത്താൻ സാധിക്കില്ല. ', 'ചിലപ്പോള് അത് സി. എസ്. എച്ച്. യുമായി കലര് ന്നുപോകും. ', 'രസകരമെന്നു പറയട്ടെ, ക്ലോറൈഡ് ആക്രമണത്തിന് നിങ്ങളുടെ സേവനത്തിന്റെ ദ്രാവകത വർദ്ധിപ്പിക്കാനാകും. ', 'കാരണം, നിങ്ങളുടെ കല് സിം ഹൈഡ്രോക്സൈഡ് വീണ്ടും പുറത്തുവരുന്നു. ', 'അതിനാൽ നിങ്ങൾ ഒരു ഖര ഉൽപ്പന്നം നീക്കം ചെയ്യുകയും ഉള്ളിൽ ഒരു പൊറസ് ഉണ്ടാക്കുകയും ചെയ്യുന്നു. ', 'കാരണം നിങ്ങളുടെ മറ്റു ഉൽപ്പന്നങ്ങളുടെ നിക്ഷേപം അത്രയല്ല. ', 'നിങ്ങളുടെ മിക്ക ഉൽപ്പന്നങ്ങളും പരിഹരിക്കാവുന്നവയാണ്. ', 'ഉദാഹരണത്തിന്, നിങ്ങളുടെ കാൽസ്യം ഹൈഡ്രോക്സൈഡ് ക്ലോറൈഡുമായി പ്രതിപ്രവർത്തനം ചെയ്താൽ, അത് എന്ത് രൂപം കൊള്ളും? ', 'വളരെ ലയിക്കുന്ന കാൽസ്യം ക്ലോറൈഡ് സിസ്റ്റത്തിൽ നിന്നും നീക്കം ചെയ്യപ്പെടുന്നു. ', 'മറ്റൊരു കേസിൽ, സൾഫേറ്റ് ആക്രമണം, കാൽസ്യം ഹൈഡ്രോക്സൈഡ് സൾഫേറ്റ് പ്രതികരിക്കുകയും. ', 'ജിപ്സും ജിപ്സും എളുപ്പത്തിൽ ലയിക്കാന് സാധിച്ചില്ല. ', 'അത് സിസ്റ്റത്തിൽ തുടരുകയും നിക്ഷേപമായി കാണപ്പെടുകയും ചെയ്തു. ', 'ഇവിടെ നിങ്ങൾ ഒരു വർദ്ധനവ് കാരണമാകുന്നു പൊറസ്സിറ്റി നെഗറ്റീവ് ഒന്നാണ്. ', 'ക്ലോറൈഡ് ആക്രമണത്തിന്റെ ഫലങ്ങൾ. ', 'എന്നാൽ മഗ്നീഷ്യം ക്ലോറൈഡ് ആക്രമണത്തിന് പുറമെ, പൊറസ്യം വർദ്ധിപ്പിക്കുന്നതിനു പുറമേ, ', 'ഉപരിതലത്തിന്റെ മാറ്റവും സിഎസ്എച്ചിന്റെ മഗ്നീഷ്യം സിലിക്കേറ്റ് ഹൈഡ്രേറ്റായി പരിവർത്തനം ചെയ്യലും. ', 'അത് ഇപ്പോഴും സിസ്റ്റത്തിൽ. സംഭവിക്കാം. ', 'സി. എസ്. എച്ച്. യിൽ നിന്ന് കല് സി്യം നീക്കം ചെയ്യുന്ന ഏത് സിസ്റ്റത്തിലും ഇത് സംഭവിക്കുമെന്ന് ഓർക്കുക. ', 'ഇവിടെ മഗ്നീഷ്യം സി. എസ്. എച്ച്. യിൽ നിന്നും കാൽസ്യം നീക്കം ചെയ്യും. ', 'നിങ്ങൾക്ക് ഒരു ആസിഡ് ഉണ്ടെങ്കിൽ, നമുക്ക് പറയാം, നിങ്ങൾക്ക് ഹൈഡ്രോക്ലോറിക് ആസിഡ് ഉണ്ടെങ്കിൽ, ആസിഡ് അവസ്ഥകൾ. ', 'സി. എസ്. എച്ച്. യിൽ നിന്നും കാൽസ്യം നീക്കം ചെയ്യുക. ', 'അപ്പോള് പോലും അത് സിലിക്ക ഹൈഡ്രേറ്റ് ഉണ്ടാക്കും. ', 'ഇത് ഏതെങ്കിലും മെറ്റൽ അടിസ്ഥാനത്തിലുള്ള സിലിക്കേറ്റ് ഹൈഡ്രേറ്റ് ഉണ്ടാക്കില്ല. ', 'ഇവിടെ മഗ്നീഷ്യം ഉണ്ടായാല് മഗ്നീഷ്യം സിലിക്കേറ്റ് ഹൈഡ്രേറ്റ് രൂപീകരിക്കും. ', 'അസിഡ് ആക്രമണത്തെ കുറിച്ച് നമുക്ക് വേഗം സംസാരിക്കാം. ', 'അസിഡ് ആക്രമണം പ്രധാനമായും മലിനജലമുള്ള പൈപ്പുകളിലെ പ്രശ്നമാണ്. ', 'മലിനജലം കൊണ്ടുപോകുന്ന കോൺക്രീറ്റ് പൈപ്പുകൾ ആസിഡ് ആക്രമണത്തിന് വിധേയമാണ്. ', 'ചില വ്യവസായ മലിനജലങ്ങളിൽ പോലും ചിലപ്പോൾ ആസിഡ് രൂപപ്പെടാം. ', 'ആസിഡുകൾ എവിടെ കണ്ടെത്താമെന്നതിന്റെ ചില ഉദാഹരണങ്ങൾ ഞാൻ കാണിച്ചുതരാം. ', 'കനൽ പൈപ്പുകളെക്കുറിച്ച് സംസാരിക്കുമ്പോൾ സാധാരണ പ്രശ്നം സൾഫറിന്റെ രൂപീകരണവുമായി ബന്ധപ്പെട്ടതാണ്. ', 'ആസിഡ്, സൾഫുറിക് ആസിഡ്, സൾഫേറ്റ്, ആസിഡ് അവസ്ഥ എന്നിവ ഉണ്ടാകും. ', 'അതുകൊണ്ട് ഇത് അടിസ്ഥാനപരമായി ജിപ്സസ് രൂപീകരണത്തിന് കാരണമാകും. ', 'എത്രിന്ജിറ്റ് രൂപം കൊള്ളുമോ? ', 'ഉപരിതലത്തിന് സമീപമുള്ള മേഖലകളില് അല്ല. ', 'ആസിഡ് ഉള്ളിടത്ത് എത്രിന് ഗിറ്റ് രൂപപ്പെടുകയില്ല. ', 'അതിനാൽ എത്രിന്ജിറ്റ് താഴ്ന്ന പിഎച്ചിൽ സ്ഥിരതയുള്ളതല്ല. ', 'ഉപരിതല മേഖലകളിലെ എട്രിംഗിറ്റിന്റെ. ', 'നിങ്ങൾ സൾഫേറ്റ് കടന്നിരിക്കാം എന്ന് കരുതുന്ന ഒരു പ്രോട്ടോടൈപ്പിൽ പ്രവേശിച്ചാൽ. ', 'എത്രിന് ഗിറ്റ് രൂപീകരണം ഇപ്പോഴും കാണാനാകുമെന്ന് കരുതുന്നു. ', 'അതുകൊണ്ട് ഗിപ്സസ് രൂപീകരണം സൾഫുറിക് ആസിഡ് ആക്രമണത്തിൽ സാധാരണമായ ഒരു പ്രതിഭാസമാണ്. ', 'ഇതില് നിന്ന് ജൈപ്സത്തിന്റെ രൂപീകരണം മൂലം ശക്തി നഷ്ടപ്പെടുകയും ഏറ്റവും പ്രധാനമായി നഷ്ടപ്പെടുകയും. ചെയ്യുന്നു. ', 'സിമന്റിറ്റിസ് സ്വഭാവമുള്ളതാണ്, കാരണം നിങ്ങളുടെ പിഎച്ച് കുറവാണ്, അത് നിങ്ങളുടെ സി. എസ്. എച്ച്. ', 'സൾഫുറിക് ആസിഡ് എന്നത് ബെറ്റണിന് കേടുപാടുകൾ വരുത്തുന്ന ഒരു തരം ആസിഡ് മാത്രമാണ്. ', 'മറ്റു പല സന്ദർഭങ്ങളിലും ഇത് സംഭവിക്കാം. ', 'വ്യവസായ ഉല് പ്പാദനത്തില് പലപ്പോഴും സൾഫുറിക് ആസിഡ്, നൈട്രിക് ആസിഡ്, ഹൈഡ്രോക്ലോറിക് ആസിഡ് എന്നിവ ഉപയോഗിക്കുന്നു. ', 'അതുകൊണ്ട് ഇവയെല്ലാം രൂപപ്പെടാം അല്ലെങ്കിൽ ഇവയെല്ലാം ഉപയോഗിക്കുന്ന കോൺക്രീറ്റ് ഘടനകളെ കേടുവരുത്താം. ', 'ചില ഘടനകൾ. ', 'കോണ്ക്രീറ്റ് കനാലുകൾ എന്നത് സൾഫുറിക് ആസിഡ് ആക്രമണം നടക്കുന്ന ഒരു പരിസ്ഥിതി ആണ്. ', 'ബാക്ടീരിയകളുടെ പ്രവർത്തനത്തെത്തുടർന്ന് ഇത് സൂക്ഷ്മാണുക്കളുടെ പ്രവർത്തനമാണ്. ', 'ഒരു മിനിറ്റിന് ശേഷം അതിനെക്കുറിച്ച് സംസാരിക്കാം. ', 'വ്യവസായ മാലിന്യങ്ങൾ പലപ്പോഴും ആസിഡ് സ്ട്രെയിനുകൾ വഹിച്ചേക്കാം. ', 'ഉദാഹരണത്തിന്, ബെറ്റോണിന്റെ വശങ്ങളില്. ', 'രസകരമെന്നു പറയട്ടെ, ജൈവ സ്രോതസ്സുകളിൽ നിന്നും ഉത്പാദിപ്പിക്കപ്പെടുന്ന ധാരാളം ആസിഡുകൾ ഉണ്ട്. ', 'അതിനാൽ കന്നുകാലി കൃഷിയിടങ്ങളിൽ സിലേജ് ഉത്പാദനം നടത്തുക, കന്നുകാലി കൃഷിയിടങ്ങളിൽ ധാരാളം ഓർഗാനിക് ഉത്പാദനം നടത്തുക. ', 'ലാക്റ്റിക് ആസിഡ്, ഓക്സാലിക് ആസിഡ് തുടങ്ങിയവ ഉത്പാദിപ്പിക്കാവുന്നതാണ്. ', 'മലിനജല സംസ്കരണ പ്ലാന്റുകൾ ആസിഡ് ഉത്പാദനം നടക്കുന്ന മറ്റു സ്ഥലങ്ങളാണ്. ', 'സിസ്റ്റത്തില്. ', 'ആസിഡ് ആക്രമണം എന്താണ്? ', 'നിങ്ങളുടെ പ്രാഥമിക പ്രതികരണം ലളിതമായി ഒരു ക്ലാസിക് ആസിഡ് അടിസ്ഥാനമാക്കിയുള്ള പ്രതികരണം ആണ്, കാരണം നിങ്ങൾക്ക് ആസിഡ് ഉണ്ട്. ', 'പുറം പരിസ്ഥിതിയിൽ നിന്നും നിങ്ങളുടെ കാൽസ്യം, ഹൈഡ്രോക്സൈഡും മറ്റ് അടിസ്ഥാന പദാർത്ഥങ്ങളും. ', 'സിമന്റ് ഹൈഡ്രേഷൻ ഉൽപ്പന്നങ്ങളുടെ ഉള്ളിൽ കാണപ്പെടുന്നു. ', 'അതിനാൽ, സിമന്റ് മാട്രിക്സ് മൈക്രോസ്ട്രക്ചറിന്റെ തകർച്ചയിലേക്ക് നിങ്ങൾ നയിക്കുന്നു. ', 'ഉപ്പുകളുടെ രൂപീകരണം. ', 'ചില ഉപ്പുകള് ലയിക്കുന്നതും ചിലത് ലയിക്കാത്തതും ആണ്. ', 'അതിനാൽ, നിങ്ങൾക്ക് ഉപ്പുകൾ ഉണ്ടെങ്കിൽ, നിങ്ങളുടെ പൊറസ്സിറ്റി വർധിക്കും. ', 'അസംസ്കൃതമായ ഉപ്പുകൾ ഉണ്ടെങ്കിൽ അവയുടെ അസംസ്കൃതതയും വികാസവും ഉണ്ടാകാം. ', 'ഈ ഉപ്പുകള് സിസ്റ്റത്തില്. ', 'അസിഡ് ആക്രമണത്തിൽ എന്ത് സംഭവിക്കും? ', 'അതായത്, ഈ ഉൽപ്പന്നങ്ങൾ ഹൈഡ്രേറ്റേഷൻ ഉൽപ്പന്നങ്ങളാണ്. പുറത്ത് ആസിഡ് പരിഹാരം ഉണ്ട്. ', 'ആസിഡിന്റെയും പ്രോട്ടോണിന്റെയും ആനിഒണുകൾ ഉണ്ട്. ', 'കല് സി യം വഹിക്കുന്ന ജീവികളുടെ പുറകോട്ട് നീക്കം ഉണ്ടായിരിക്കുമ്പോൾ സിലിക്കോൺ. ', 'അലോമിനിയവും നിങ്ങളുടെ ഹൈഡ്രോക്സില് ഐണുകളും. ', 'പുറംഭാഗത്ത് നിന്ന് പുറത്ത് വരെയുള്ള ഇടപെടലിലൂടെയാണ് ഈ മേഖല രൂപപ്പെടുന്നത്. ', 'സ്പീഷീസ്, അകത്തേക്ക് നീങ്ങുന്ന സ്പീഷീസ്. ', 'ഈ മേഖല അടിസ്ഥാനപരമായി ആസിഡ് അല്ലെങ്കിൽ വസ്തുക്കളുടെ തരം ആണ്. ', 'പ്രതികരണ സംവിധാനമാണ്. ', 'പിന്നെ നിങ്ങളുടെ ഹൈഡ്രേറ്റഡ് ഉൽപ്പന്നങ്ങള് ക്ക് എന്ത് സംഭവിക്കും? ', 'അവസാനം, നിങ്ങൾക്ക് മാസ് നഷ്ടപ്പെടും, സാമ്പിളിന്റെ സമഗ്രത നഷ്ടപ്പെടും, ആൽക്കലിനെ നഷ്ടപ്പെടും. ', 'ഫലമായി ഇലാസ്റ്റിക് മോഡ്യൂളിലെ കരുത്ത് കുറയുന്നു, ', 'അര് ഹതത വർദ്ധിപ്പിക്കുകയും ഒടുവിൽ പിഎച്ച് കുറവ്. ', 'ആസിഡ് ആക്രമണം സാധാരണയായി ആസിഡ് ആക്രമണം ആസിഡ് ആയുധം ശക്തിപ്പെടുത്തുന്നതിനു കാരണമാകും. ', 'ഇപ്പോൾ കൂടുതൽ വ്യക്തമായി പറഞ്ഞാൽ, കോൺക്രീറ്റ് കനാലുകളിലെ ആസിഡ് ആക്രമണം നോക്കിയാൽ, അത് വളരെ രസകരമാണ്. ', 'നിങ്ങളുടെ മലിനജല പൈപ്പിന്റെ താഴത്തെ പകുതിയിൽ സാധാരണയായി കൊണ്ടുപോകുന്ന മലിനജലമുള്ളതിനാൽ നിങ്ങൾക്ക് ഒരു പ്രശ്നമുണ്ട്. ', 'മലിനജലത്തിനകത്ത് അനേറോബിക് ബാക്ടീരിയകളോ സൾഫേറ്റ് കുറയ്ക്കുന്ന ബാക്ടീരിയകളോ ഉണ്ട്. ', 'ഹൈഡ്രജൻ സൾഫേറ്റ് ഗ്യാസ് ഉത്പാദനം. ', 'ഈ ഗ്യാസ് മുകളിലേക്ക് ഉയരുന്നു, അത് പ്രവർത്തിക്കുന്ന പൈപ്പിന്റെ മുകളിലെ തലത്തിൽ കഠിനമായി കത്തിക്കുന്നു. ', 'സൾഫർ ഓക്സിഡൈസ് ചെയ്യുന്ന ബാക്ടീരിയകളോ എയ്റോബിക് ബാക്ടീരിയകളോ ഉപയോഗിച്ച് ഈ എയ്റോബിക് ബാക്ടീരിയകൾ. ', 'പുറത്ത് നിന്ന് സൾഫുറിക് ആസിഡ് ഉത്പാദിപ്പിക്കുന്നത്. ', 'അതിനാൽ നിങ്ങളുടെ പൈപ്പുകളുടെ കിരീടത്തിൽ ആസിഡ് അവസ്ഥ സൃഷ്ടിക്കുന്നു. ', 'പൈപ്പിന്റെ ഭാഗം കേടുപാടുകൾക്ക് വിധേയമായിരിക്കാം. ', 'അതിനാൽ, നിങ്ങൾ അടിസ്ഥാനപരമായി സിമന്റിസസ് വസ്തുക്കൾ നോക്കിയാൽ ആക്രമിച്ചു. ', 'നിങ്ങളുടെ ജൈവപരമായി ഉളവാക്കിയ സൾഫുറിക് ആസിഡ് ആക്രമണം, നിങ്ങൾ ഉപരിതലത്തിൽ ഉണ്ടാകും ഒരു. ചെറിയ. ', 'ബാക്ടീരിയയുടെ പ്രവർത്തനത്തെത്തുടർന്ന് രൂപപ്പെടുന്ന ബയോഫിലിം, ', 'നിങ്ങളുടെ സാമ്പിളിലെ ഒരു ആഴത്തിൽ ജിപ്സം രൂപപ്പെടുക. ', 'ഈ ജിപ്സസ് രൂപീകരണം സൾഫുറിക് ആസിഡ് ആക്രമണത്തിന്റെ ഫലമാണ്. ', 'ഉള്ളില് ഇരിക്കുന്ന സിമന്റിറ്റി വസ്തു. ', 'കാലക്രമേണ, നിങ്ങളുടെ സിമന്റിറ്റിയസ് സ്വഭാവം നഷ്ടപ്പെടും. ', 'ഉയർന്ന ആസിഡ് സാന്ദ്രതയും pH കുറയുകയും ചെയ്താൽ. ', 'നിങ്ങളുടെ സിമന്റിസസ് ഘട്ടങ്ങളുടെ വിഘടിപ്പനം. ', 'ഇത് വീണ്ടും ഒരു കനാലിന്റെ ചിത്രമാണ്. വലതുഭാഗത്ത് നിങ്ങൾക്ക് മിക്കവാറും എല്ലാ. ', 'അല്ലെങ്കിൽ ബലികേന്ദ്രീകരണത്തിനു ചുറ്റുമുള്ള മിക്കവാറും എല്ലാ കോൺക്രീറ്റുകളും നീക്കം ചെയ്യപ്പെടുന്നു. ', 'ബലപ്പെടുത്തൽ കരിങ്കുഴലായി കാണാനാവുന്നില്ല. ബെറ്റണിന്റെ മുഴുവൻ ഭാഗവും. പൂർണമായി. ', 'നീക്കം ചെയ്തു. ', 'ഇവിടെ വീണ്ടും ഒരു ചിത്രം മ്യൂറിയാറ്റിക് ആസിഡ് ആക്രമണത്തിൽ നിന്ന്. ', 'ഒരു വ്യവസായത്തിൽ നിന്നും വന്ന ആസിഡ്, ഇവിടെ ആസിഡ് ആക്രമണത്തിന്റെ തെളിവ് വ്യക്തമായി കാണാം, കാരണം. ', 'എല്ലാ സംയുക്തങ്ങളും അവശേഷിക്കുന്നു. ', 'ഇവ സിലിസിയസ് അഗ്രഗേറ്റാണ് അവ അവശേഷിക്കുന്നു പാസ്റ്റു പൂർണമായും. ', 'ആസിഡില് നിന്നും പിരിച്ചുവിടപ്പെട്ട്. ', 'സിലിസിയസ് ആയ ആഗ്രേറ്റിന് നേരിട്ട് ആസിഡ് ആക്രമണം നടത്താറില്ല. ', 'അസിഡ് ആക്രമണത്തിനെതിരെ സംരക്ഷണ സംവിധാനം പറയാമോ? ', 'നമ്മൾ സിലിസിയസ് അഗ്രേറ്റിനെ കാർബണേറ്റ് അഗ്രേറ്റുമായി മാറ്റിസ്ഥാപിച്ചാൽ എന്ത് സംഭവിക്കും? ', 'അസിഡിന് റെ ഫലമായി അഗ്രഗേറ്റുകളും കേടായിപ്പോകും. പക്ഷേ അത് നല്ല കാര്യമാണ്. ', 'സമാനമായി കേടുപാടുകൾ സംഭവിക്കുന്ന സംയുക്തവും പേസും. ', 'അങ്ങനെ നിങ്ങളുടെ ബെറ്റണിന്റെ ക്രോസ് സെക്ഷന്റെ ഏകീകൃത നഷ്ടം ഉണ്ടാകും. ', 'അഗ്രഗേറ്റുകൾ ചേർക്കുമ്പോൾ പേസ്റ്റ് പൂർണമായും പിരിച്ചുവിടുകയും അഗ്രഗേറ്റുകൾ ചിതറുകയും. ചെയ്യുന്നു. ', 'അതുകൊണ്ട് സിസ്റ്റത്തിൽ ഒരു ബന്ധനവും ഇല്ല. ', 'പലപ്പോഴും ആളുകൾ ഉപയോഗിക്കുന്നത് സിലിസിയസ് ആഗ്രേറ്റുകളേക്കാൾ കല്മണ് അഗ്രേറ്റുകളാണ്. ', 'അരി കല് പവും അസിഡ് പരിഹാരത്തിൽ പതുക്കെ നശിപ്പിക്കപ്പെടുന്നു. ', 'അതുകൊണ്ട് കല് പമണിയുടെ സംയുക്തം ഉപയോഗിക്കുന്നത് സൾഫുറിക് ആസിഡ് എക്സ്പോഷർ കുറയ്ക്കുന്നതിനുള്ള നല്ലൊരു മാർഗമാണ്. ', 'അല്ലെങ്കിൽ ഏതെങ്കിലും ആസിഡ് എക്സ്പോഷർ. ', 'ഇതുകൂടാതെ, കാൽസ്യം അല് മിനേറ്റ് സിമന്റ് പോലുള്ള പ്രത്യേക സിമന്റ് ഉപയോഗിക്കാം. ', 'ആസിഡ് ആക്രമണത്തിന് റെ വളരെ ഉയർന്ന പ്രതിരോധം. ', 'വീണ്ടും ഇത് നമുക്ക് വേണ്ടാത്ത വിവിധ ഘട്ടങ്ങളുടെ വിവരണം നൽകുന്നു. ', 'ഇത് കൂടുതൽ വിശദമായി നോക്കൂ. ', 'കെമിക്കൽ സൾഫുറിക് ആസിഡ് ആക്രമണവും ജൈവ ഉത്പാദനവും തമ്മിൽ വ്യത്യാസമുണ്ട്. ', 'സൾഫുറിക് ആസിഡ് ആക്രമണം. ', 'വീണ്ടും, സിസ്റ്റത്തിൽ നിങ്ങൾ രൂപപ്പെടുത്തുന്ന ഉൽപ്പന്നങ്ങളുടെ തരം, ', 'നിങ്ങളുടെ സൂക്ഷ്മഘടന തികച്ചും വ്യത്യസ്തമായിരിക്കാം. ', 'അതുകൊണ്ട് ഈ കേസിൽ കൂടുതൽ ചർച്ചയ്ക്കായി അല്ല, നിങ്ങളുടെ വിവരത്തിനു വേണ്ടിയാണ് ഞാൻ ഇത് നൽകുന്നത്. ', 'അങ്ങനെ മലിനജല ശൃംഖലകൾ സിമന്റീഷ്യൻ വസ്തുക്കൾക്ക് വളരെ ആക്രമണാത്മകമായ ഒരു പരിസ്ഥിതി നൽകുന്നു. ', 'നന്ദി. ', 'നന്ദി.']
2024-02-28 11:52:53,882 - ERROR - synthesize - Line 279 - Exception occurred: local variable 'firstLet' referenced before assignment.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/indic_unified_parser/helpers.py, Line 252 Error UnboundLocalError : local variable 'firstLet' referenced before assignment
2024-02-28 11:52:57,610 - ERROR - synthesize - Line 279 - Exception occurred: local variable 'firstLet' referenced before assignment.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/indic_unified_parser/helpers.py, Line 252 Error UnboundLocalError : local variable 'firstLet' referenced before assignment
2024-02-28 12:16:51,603 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['আজ আমরা সালফেট আক্রমণ নিয়ে আলোচনা শুরু করব।', 'গত ক্লাসে আমরা দেখেছি কিভাবে সালফ্যাট সিমেন্টেশন সিস্টেমে প্রবেশ করে।', 'জলযুক্ত সিমেন্ট, ফ্যাজ এবং পৃষ্ঠ থেকে শুরু করে বিভিন্ন ধরণের যৌগ গঠন করে।', 'ভেতরে।', 'আসুন আমরা একটু আলোচনা করি যে, ইট্রিংটাইট গঠন সম্প্রসারণের কারণ হয় কিনা।', 'অবশ্যই আমরা খুব ভালোভাবে জানি যে, ইট্রিংটাইটের এমন একটি গঠন রয়েছে যা বিস্তার প্রবণতা।', 'মূলত আর্দ্রতা শোষণ করে এবং এই সম্প্রসারণে আশেপাশের চাপ সৃষ্টি করতে পারে।', 'পরিবেশ যা ফাটল সৃষ্টি করে, ঠিক আছে।', 'কিন্তু সরাসরি প্রমাণ কি এবং কোন শর্তে ইট্রিংটাইট।', 'কংক্রিট সিস্টেমের সম্প্রসারণের দিকে পরিচালিত করে।', 'আমরা জানি যে প্রাথমিক ইট্রিংটাইট হল ইট্রিংটাইট, যা আসলে প্রক্রিয়াটির খুব শুরুতে গঠন হয়।', 'নিয়মিত সিমেন্ট হাইড্রেশন, যখন ফ্যাস যেমন আলুমিন্যাট সঙ্গে প্রতিক্রিয়া।', 'সিমেন্টের মধ্যে সালফ্যাট যোগ করা হয়, আমরা প্রাথমিক ettringite গঠন এবং এই ettringite।', 'পরে এটি একক sulfate রূপান্তরিত হয়, কারণ সিস্টেমে আলুমিন্যাট অতিরিক্ত উপস্থিত হয়।', 'এখন, দেরী প্রাথমিক ইট্রিংটাইট গঠনেরও প্রমাণ আছে এবং এটি সিমেন্টের মধ্যে ঘটে।', 'যেখানে সুলফেট বেশি পাওয়া যায়।', 'এর মানে হল যে আপনি বেশ দীর্ঘ সময়ের জন্য ইট্রিংটাইট জমা রাখেন।', 'ঠিক আছে, আছে।', 'এখন এটা ঘটে সালফেটের অভ্যন্তরীণ উৎসগুলির কারণে।', 'বাহ্যিক ইট্রিংটাইট যখন আমরা আছে sulphates পরিবেশ থেকে আসা কারণে।', 'বাইরের থেকে সালফ্যাট প্রবেশ।', 'এর পাশাপাশি আমরা বিলম্বিত ইট্রিংটাইট গঠনকে এমন একটি ঘটনাও বলতে পারি যা।', 'অভ্যন্তরীণভাবে নিষ্ক্রিয় করা ইট্রিংটাইটের গঠন যা বয়সের শেষের দিকে বৃদ্ধি পায়।', 'এর অর্থ হল যে কিছু কারণে অ্যাট্রিংটাইট প্রাথমিক পর্যায়ে গঠিত হয়নি। এবং।', 'কিছু অন্যান্য কারণের সংমিশ্রণ এটিকে শক্ত অবস্থায় গঠিত করেছে।', 'স্পষ্টতই যখন একটি বিস্তৃত উপাদান শক্ত কংক্রিটের ভিতরে গঠিত হয় যে যখন।', 'আপনি এর কারণে বড় ক্ষতিগ্রস্ত হন এবং এটিকে ডিইএফ বা বিলম্বিত ইট্রিংটাইট নামেও পরিচিত।', 'গঠন, ঠিক আছে।', 'এটি একটি সাধারণ শব্দ যা বিলম্বিত ইট্রিংটাইট গঠন জন্য দেওয়া হয়।', 'সাধারণভাবে বলতে গেলে, যে কোন সালফ্যাট আক্রমণ প্রক্রিয়া শেষের দিকে ettringite গঠনের পরিচালিত করে।', 'শক্ত পর্যায়ে।', 'সুতরাং, এট্রিংটাইটের যেকোনো গঠনই একটি মাধ্যমিক এট্রিংটাইট গঠন।', 'এর মানে হল আমরা এটি প্রাথমিক ettringite থেকে আলাদা করছি যা নিয়মিত কারণে গঠন।', 'সিমেন্টের হাইড্রেটেশন, ঠিক আছে।', 'এখন যদি আপনি ক্রিস্টালিন উপাদানগুলির ধরনটি দেখুন যা উত্পাদনের কারণে গঠিত হয়।', 'ইট্রিংটাইটের, ইট্রিংটাইট সুই আকারে গঠিত হয়, ঠিক আছে।', 'সুতরাং, ইট্রিংটাইট একটি দীর্ঘ মাত্রা এবং মূলত কি ঘটে।', 'ইট্রিংটাইটের দৈর্ঘ্য থেকে বেধের অনুপাতটি আশেপাশের পরিবেশের পিএইচ-এর উপর নির্ভর করে।', 'এখন দেখা যাচ্ছে যে যখন আপনি খুব উচ্চ pH স্তর আছে, আমরা আসলে গঠনের।', 'ইট্রিংটাইটের দীর্ঘ সুই।', 'আমরা ছোট স্তম্ভযুক্ত ইট্রিংটাইট স্ফটিক গঠন করছি, ঠিক আছে।', 'কিন্তু এর মাঝখানে, ১২ থেকে ১০ মধ্যে আমরা আসলে ইট্রিংটাইট সুই গঠন করছি।', 'যার দৈর্ঘ্য অনেক বেশি, ঠিক আছে।', 'সুতরাং যা ঘটবে তা হল সিমেন্ট হাইড্রেশন এর প্রথম পর্যায়ে, আপনি আসলে গঠন।', 'এই মাইক্রোক্রিস্টালিন ইট্রিংটাইট যেখানে দৈর্ঘ্য আসলে বেশ ছোট, ঠিক আছে এবং দৈর্ঘ্য।', 'ব্যাসার্ধ বা বরং দৈর্ঘ্য থেকে বেধ অনুপাত বেশ ছোট।', 'কিন্তু যখন ইট্রিংটাইট প্রসারিত হয়, আপনি একটি দৃশ্যকল্প সম্পর্কে চিন্তা করতে পারেন বাহ্যিক আছে।', 'সালফ্যাট আক্রমণ, একটি ettringite প্রসারণ যেখানে আর্দ্রতা নিমজ্জিত করা হয় এবং আসলে।', 'কস্টাল অভ্যাস দেখাতে শুরু করুন, যা উচ্চ দৈর্ঘ্যের দ্বারা দেখানো হয়, ঠিক আছে।', 'সুতরাং উচ্চ pH স্তরে মাইক্রোক্রিস্টালিন ইট্রিংটাইট তাজা কংক্রিটে দেখা যায়, যা আমরা সাধারণত।', 'তাড়াতাড়ি হাইড্রেটেশন আশা করি, ঠিক আছে।', 'এখন গবেষকদের মতে, এবং এটা ভালভাবে নথিভুক্ত করা হয়েছে যে মাইক্রোক্রিস্টালিন।', 'জল শোষণ ক্ষমতা সঙ্গে ettringite উচ্চ প্রসারিত হতে পারে, ঠিক আছে এবং এই সাধারণত।', 'যখন pH শর্তগুলো বেশ উচ্চ হয়, তখন ঘটে।', 'সুতরাং যদি আপনি সালফ্যাট এক্সপোজার আসে যেখানে পিএইচ হ্রাস করা হয়, উদাহরণস্বরূপ যখন আপনি।', 'যদি পরিবেশে pH স্তর কম থাকে, তাহলে দেখা যায় যে।', 'এই ইট্রিংটাইটটি খুব বেশি শোষণযোগ্য নয়। এবং যখন ইট্রিংটাইটটি।', 'জল শোষণ বা নিমজ্জন করে না, এটি খুব উচ্চ প্রসারিত হতে পারে না।', 'সুতরাং, ইট্রিংটাইট গঠন শুধুমাত্র সেই অবস্থার মধ্যে প্রসারিত হতে পারে। যেখানে।', 'বাইরের pHও যথেষ্ট বেশি।', 'এখন এটা অনেকটা ব্যাখ্যা করে কেন আমরা আসলে সম্প্রসারণ ঘটছে না।', 'মাঠ ভিত্তিক নমুনা।', 'ল্যাব নমুনাগুলিতে, আমরা একটি খুব উচ্চ স্তরের সম্প্রসারণ দেখতে পাই, কিন্তু একই সময়ে প্রকৃত।', 'মাঠে পারফরম্যান্স যা আক্রমণাত্মক বাহিনীর ক্রমাগত পুনর্নির্মাণের সাথে থাকে।', 'সমাধান কারণ আপনি ভূগর্ভস্থ জল আছে যা অবিচ্ছিন্নভাবে আক্রমণকারী রিচার্জ।', 'সমাধান।', 'এর পাশাপাশি, আমাদের অন্যান্য আইওনিক প্রজাতির উপস্থিতি রয়েছে, যা ধ্বংস করতে পারে।', 'আশেপাশের দ্রাবকের pH।', 'এখন যখন এটি ঘটে, তখন বাস্তবে গঠিত হচ্ছে এমন ইট্রিংটাইট শেষ পর্যন্ত হতে পারে না যেমন।', 'একটি নিয়মিত নিমজ্জন অবস্থায় সিস্টেমের ভিতরে যা গঠন করে তার মতো প্রতিক্রিয়াশীল বা বরং বিস্তৃত।', 'তাহলে কি হবে যখন আপনি একটি কাপ নিন এবং ভিতরে সালফেট সমাধান রাখুন কংক্রিট রাখুন।', 'ভেতরে নমুনা।', 'সুতরাং বেনিটনের pH খুব বেশি, ঠিক আছে। ১৩।', 'তাহলে যখন আপনি pH 7 বা 8 এর একটি সালফ্যাট সমাধানের ভিতরে এটি রাখেন তখন কী হয়?', 'আপনি কংক্রিট থেকে বাইরে পরিবেশের মধ্যে lime একটি leaching থাকবে।', 'ঠিক আছে এবং বাইরের সমাধানের পিএইচ খুব উচ্চ স্তরে স্থিতিশীল হতে শুরু করে।', 'আমরা কিছু ক্ষেত্রে ১২ এর চেয়ে বড় স্তরে পৌঁছে যাই।', 'সুতরাং এই শর্তে, যে ইট্রিংটাইট আসলে গঠন হচ্ছে তা বিস্তৃত প্রকৃতির।', 'যখন আপনার আশেপাশের দ্রাবকের pH উচ্চ হয়, তখন ইট্রিংটাইট বিস্তৃত হয় এবং এটি হতে পারে।', 'পরীক্ষাগার গবেষণায় সালফেটের আক্রমণের সাথে সাধারণত যুক্ত প্রসারিত।', 'কিন্তু ক্ষেত্রের ক্ষেত্রে আমরা একই ধরনের সম্প্রসারণ দেখতে পাচ্ছি না।', 'এট্রিংটাইটের স্থিতিশীলতাও একটি নির্দিষ্ট স্তরে বিদ্যমান পিএইচ স্তরের উপর নির্ভর করে।', 'পরিবেশ।', 'উদাহরণস্বরূপ, যখন pH খুব বেশি হয় অথবা 9 থেকে 13 এর মধ্যে থাকে।', 'এবং এটি সাধারণত একটি ettringite সমাধান স্থিতিশীলতা পরিসীমা।', 'তাই আবার বিভিন্ন গবেষণায় pH পরিসীমা প্রদান করা হয় যা এট্রিংটাইট।', 'স্থিতিশীল।', 'যখন আশেপাশের অবস্থা অ্যাসিড হয়ে যায়, তখন এই পরিবেশে ইট্রিংটাইট।', 'খুব স্থিতিশীল।', 'সুতরাং, আপনি যদি এইট্রিংটাইটটি ব্যবহার করেন তাহলে আপনার চারপাশের অবস্থার দিকে তাকাতে হবে।', 'স্থিতিশীল হতে হবে।', 'উদাহরণস্বরূপ, একটি অ্যাসিড পরিবেশে, ইট্রিংটাইট আসলে সহজেই রূপান্তরিত হতে পারে।', 'গ্যাস, অ্যালুমিনিয়াম হাইড্রক্সাইড, বিশেষ করে যদি কার্বনেশনও ঘটে, এটি হতে পারে।', 'আসলে, এটি অ্যালুমিনিয়াম হাইড্রক্সাইড এবং জিপসের সাথে ক্যালসিয়াম কার্বনেট ফ্যাজ গঠন করে।', 'সুতরাং, অ্যাসিড পরিবেশে এট্রিংটাইট জিপস এবং অ্যালুমিনিয়াম হাইড্রক্সাইডে রূপান্তরিত হবে।', 'সুতরাং আবার যদি আপনি ক্ষেত্র থেকে প্রমাণ দেখুন, কাঠামো যে সম্পূর্ণরূপে রয়ে গেছে।', 'শুকনো, শক্তকর্ষিত কংক্রিটে কোন এট্রিংটাইট পাওয়া যায়নি।', 'সুতরাং যদি আপনার কোন আর্দ্রতা না থাকে, তাহলে আপনি আসলে ইট্রিংটাইটের গঠন দেখতে পাচ্ছেন না।', 'পরবর্তী পর্যায়ে এবং যখন আপনি বিকল্প শুকনো ভিজানো আছে, কিছু ettringite আছে।', 'যে দেখা যায়, কিন্তু শুকানোর কারণে, আপনি সম্ভবত একটি অবস্থা হবে না যেখানে।', 'ইট্রিংটাইট গঠন প্রসারিত হয়।', 'এখন আমি আপনাদের কিছু সাম্প্রতিক গবেষণামূলক গবেষণায় দেখাবো, যা দেখিয়ে দেবে।', 'ইট্রিংটাইট গঠন ও সম্প্রসারণ।', 'তাই ল্যাব স্টাডিতে আমরা সাধারণত মর্টার প্রিজমিক নমুনা ব্যবহার করে গবেষণা করি যা সাধারণত।', '25 x 285 মিমি এবং এই সব সালফ্যাট সমাধানের ভিতরে সংরক্ষণ করা হয় সম্পূর্ণ।', 'সালফ্যাট সমাধানের ভিতরে নিমজ্জিত এবং পর্যায়ক্রমে নমুনাগুলি সমাধান থেকে সরানো হয়।', 'এবং দৈর্ঘ্যটি এখানে প্রদর্শিত দৈর্ঘ্যের তুলনা ব্যবহার করে পরিমাপ করা হয়।', 'সুতরাং এটি 3 গ্রাম এবং 50 প্রতি লিটার সালফেটে সংরক্ষিত মর্টার দিয়ে প্রস্তুত উপস্থিতি।', 'সমাধান।', 'এই ক্ষেত্রে এটি সোডিয়াম সালফ্যাট ছিল।', 'সুতরাং আমরা আলোচনা করেছি যে, ক্যাশন প্রভাব থেকে কোন মাধ্যমিক প্রক্রিয়া উদ্ভূত হবে না।', 'ম্যাগনেসিয়ামের সাথে, আপনি ক্যাটিও এর প্রভাব আছে, যা বেশ গুরুতর।', 'বিবেচনা করা হবে।', 'সুতরাং আমরা এই প্রকল্পে যা করেছি তা হল পর্যায়ক্রমে দৈর্ঘ্যের পরিবর্তন পর্যবেক্ষণ করছি।', 'এবং আমরা এক্স-রে বিঘ্ন বিশ্লেষণের মাধ্যমে ইট্রিংটাইটের পরিমাণ নির্ধারণ করছিলাম।', 'সুতরাং এখানে আপনি দেখানো হচ্ছে যে বিস্তার বিভিন্ন।', '32 সপ্তাহের এক্সপোজার এবং এই 2 মিশ্রণ, একটি সাধারণ সঙ্গে।', 'পোর্টল্যান্ড সিমেন্ট এবং M2 পজোলান যার অর্থ যা 30।', 'কার্বন উড়ন্ত ধুলো।', 'সুতরাং আপনি দেখতে পারেন যে 32 সপ্তাহ পরে শুধুমাত্র নমুনা উল্লেখযোগ্য প্রসারিত দেখানো।', 'উচ্চ ঘনত্বের মধ্যে সংরক্ষণ করা OPC কংক্রিট বা মর্টার নমুনা কিনা।', 'সালফ্যাট সমাধান।', '3 গ্রাম প্রতি লিটার সমাধান আপনি সত্যিই খুব বেশি প্রসারিত ছিল না যদিও।', 'স্টোরেজ এর পরবর্তী অংশে কিছু বৃদ্ধি প্রবণতা দেখা গেছে।', 'এখন আপনি যখন ডায়নামিক মডুলাসের পরিবর্তনটি দেখেন, এখানে মডুলাস পরিমাপ করা হয়েছে।', 'আসলে, উপাদানটির রেজোনেন্স ফ্রিকোয়েন্সি নিশ্চিত করে।', 'তাই আমরা প্রিজমিক নমুনা নিয়ে রেজোনেন্স ফ্রিকোয়েন্সিটা দেখলাম।', 'সুতরাং, কংক্রিটে যা ঘটেছে তা হল কংক্রিটের অবনতি ঘটে যখন রেজোনেন্স ফ্রিকোয়েন্সি ঘটে।', 'এছাড়াও হ্রাস পাবে।', 'সুতরাং এটি একটি অ-ধ্বংসাত্মক পরীক্ষা ব্যবহার করে পরোক্ষভাবে পরিমাপ করা গতিশীল মডিউল।', 'এখানে আপনি দেখতে পারেন যে উচ্চ ঘনত্বের মধ্যে সংরক্ষিত মর্টার নমুনা।', 'সালফেট সমাধান, সাধারণ পোর্টল্যান্ড সিমেন্ট ভিত্তিক মর্টার আপনি দেখতে পারেন যে গতিশীল।', '32 সপ্তাহের এক্সপোজার সময় মডিউল উল্লেখযোগ্যভাবে হ্রাস পেয়েছে, যখন অন্যান্য সমস্ত নমুনা।', 'কোন হ্রাস ছাড়া একটি মোটামুটি ধারাবাহিক গতিশীল মডিউল আছে বলে মনে হয়।', 'এখন আসুন আমরা এই পরিমাণের দিকে তাকাই।', 'এটি আবারও একটি চিত্রের পরিবর্তে টেবিল হিসাবে উপস্থাপিত শতাংশ প্রসারিত।', 'এখন আপনি যদি দেখতে পারেন যে, ওপিসি 50 গ্রাম প্রতি লিটারে সম্প্রসারণ প্রায় 3% পর্যন্ত ছিল।', 'এটা খুব উচ্চ স্তরের সম্প্রসারণ।', 'আপনি যখন এই এএসটিএম পরীক্ষা করেন, তখন এটি সি 1012 অনুযায়ী হয়, পরীক্ষার পদ্ধতিটি করেন।', 'প্রচলিত মর্টারগুলির ক্ষেত্রে, যদি আপনার এক্সপোজার ৬ মাসের মধ্যে 0.1% অতিক্রম করে।', 'আপনি যে মর্টার বা নির্দিষ্ট সংমিশ্রণ বন্ধনী এবং হিসাবে অসহিষ্ণু উল্লেখ।', 'সালফ্যাট সমাধান।', 'এটা কেবল একটি অবাঞ্ছিত পদ্ধতি।', 'এটা আসলে বাস্তব আচরণ প্রকাশ করে না যে আপনি কংক্রিট এবং সালফ্যাট থেকে আশা করতে পারেন।', 'সমৃদ্ধ পরিবেশ, কিন্তু এই ধারাবাহিক নিমজ্জন পরীক্ষা যদি আপনার নমুনা শেষ পর্যন্ত একটি সম্প্রসারণ আছে।', '৬ মাসের মধ্যে 0.1% এর বেশি হলে এটি সিমেন্টের প্রতিরোধী নয় বলে মনে করা হয়।', 'সালফ্যাট আক্রমণ।', 'তবে এই ক্ষেত্রে মাত্র ৩২ সপ্তাহের এক্সপোজারের মধ্যে ৩% পর্যন্ত প্রসারিততা রেকর্ড করা হয়েছে।', 'সুতরাং, প্রায় ৮ মাস, ৭ থেকে মাস এর মধ্যে আপনার এক্সপোজার ছিল। ৩।।', 'যদি আপনি 3 গ্রাম প্রতি লিটারে OPC দেখেন, তাহলে এটি এখনও 0.1% চিহ্নের মধ্যে পৌঁছায়নি।', 'যখন আপনি 50 গ্রাম প্রতি লিটার সমাধান এবং পিপিসি ভিত্তিক মর্টার আছে এটা এখনও কম।', '0.1%, প্রসারিত, এখনও 0.1% এরও কম।', 'পিপিসি প্রতি লিটারে ৩ গ্রাম, আর এই প্রসারিততা খুব কমই।', 'মানে, এটা প্রায় লক্ষ্য করা যায় না।', 'আপনি দেখতে পাচ্ছেন যে, নিমজ্জন থেকে শেষ পরিমাপের সময় পর্যন্ত খুব কমই কোন পরিবর্তন ঘটেছে।', 'এটা সম্পন্ন হয়েছে।', 'তাহলে এটি কিভাবে সিস্টেমে তৈরি হচ্ছে এমন ইট্রিংটাইটের মধ্যে অনুবাদ করে।', 'এখন এক্স-রে বিকৃতি করা হয়েছে মাত্র স্ফটিকের মাত্রা।', 'স্তর এবং স্ফটিক স্তরগুলির মধ্যে ইট্রিংটাইটের পরিমাণও নির্ধারিত হয়েছিল।', 'এখানে আবারও এই সারিতে এট্রিংটাইটের পরিমাণ দেওয়া হয়েছে।', 'আপনি দেখতে পারেন যে, এরট্রিংটাইটের পরিমাণ ক্রমাগত বৃদ্ধি পাচ্ছে।', 'এক্সপোজার সময় 9 সপ্তাহ থেকে 25 পর্যন্ত বৃদ্ধি পায়।', 'তাই আমরা কিছু একটা করে দেখলাম, এর মধ্যে এরট্রিংটাইট ধারণার পরিমাণ নির্ধারণ করলাম।', 'এক্স-রে বিকৃতি থেকে।', 'এটা ছিল শুধুমাত্র শতাংশ সব স্ফটিক উপাদান যে আসলে উপস্থিত ছিল। বনাম।', 'এবং আপনি দেখতে পারেন যে এটি একটি বেশ সুনির্দিষ্ট সম্পর্ক।', 'সুতরাং এই হল একটি সেট পয়েন্ট যা আমরা মধ্যবর্তী রিডিং থেকে নেওয়া হয়েছে যে ছিল।', 'এই প্রক্রিয়াতে নেওয়া হয়েছে।', 'সুতরাং এটা স্পষ্টভাবে দেখায় যে কিছু প্রমাণ আছে একটি অবিচ্ছিন্ন নিমজ্জন অধ্যয়ন।', 'এই সিস্টেমে আসলে কতটুকু ইট্রিংটাইট তৈরি হচ্ছে তার উপর নির্ভর করে।', 'কিন্তু আবারও এটা বাস্তবে রূপান্তরিত হবে কিনা তা নির্ভর করে বর্তমান পরিস্থিতির উপর।', 'আমরা এমন একটি পরিবেশে আছি যেখানে পিএইচ সবসময় উচ্চ।', 'অথবা আমরা এমন একটি পরিবেশে আছি যেখানে পিএইচ কম থাকে অন্যান্য রূপের এট্রিংটাইট।', 'যখন ইট্রিংটাইট আসলে অন্যান্য পণ্যগুলিতে বিভাজিত হতে পারে।', 'হয়তো এটি বাস্তবে এট্রিংটাইটের সাথে যুক্ত প্রসারের মাত্রা সৃষ্টি করছে না।', 'অবশ্যই, আমরা প্রকৌশলীরা সবসময় কিছু মডেল দেখতে পছন্দ করি, হয় লিনিয়ার বা স্কোয়ার্যাটিক বা।', 'তথ্যগুলোতে কিছু একটা ফিট করা হয়েছে।', 'সুতরাং এটা শুধু সেই প্রয়োজনীয়তা পূরণ করার জন্য।', 'সুতরাং আপনি দেখতে পাচ্ছেন এখানে 50 গ্রাম প্রতি লিটার সমাধানের সাথে OPC মর্টার আপনাকে একটি খুব।', 'উচ্চ স্তরের সম্প্রসারণ এবং আবার যদি আপনি একটি quadratic ধরনের মধ্যে এটি মাপ।', 'আপনি ক্রমাগত, ক্রমাগত ক', 'একইভাবে 3 গ্রাম প্রতি লিটার সমাধান আবার ফিক্সচার সঙ্গে বেশ ভাল।', 'কিন্তু তারপর আবার কি এই সম্পর্ক আপনাকে এটি দিকে নিয়ে যেতে পারে কিছু পরিমাণে সাহায্য করতে পারে।', 'প্রসারিত হওয়ার সময় যখন একটি নির্দিষ্ট সমালোচনামূলক মান অতিক্রম করবে তখন ভবিষ্যদ্বাণী করতে হবে।', 'যদিও এই সমালোচনামূলক মানটি ASTM C1012 এ 0.1% হিসাবে উল্লেখ করা হয়েছে। আপনি এটির উপর ভিত্তি করে সিদ্ধান্ত নিতে পারেন।', 'আপনার সাইটে প্রচলিত শর্তের ধরন আপনি কি চান যে সমালোচনামূলক সম্প্রসারণ?', 'হতে হবে।', 'সুতরাং এর ভিত্তিতে আপনি পরীক্ষার উপযুক্তভাবে পরিবর্তন করতে পারেন এবং ব্যাখ্যা করার একটি ভিন্ন উপায় প্রস্তাব।', 'তথ্য।', 'এখন এই ক্ষেত্রে কোনও সংকোচন ঘটছে না।', 'সুতরাং এই ক্ষেত্রে সংকোচন সম্পূর্ণরূপে এড়ানো হয়, কারণ আপনার নমুনা ক্রমাগত ভিতরে।', 'সালফ্যাট সমাধান।', 'সুতরাং এই ক্ষেত্রে শুকানো ও ভিজানো হয় না।', 'সুতরাং যখন আপনি শুকানো এবং ভিজানো নমুনা নির্দিষ্ট সময়ের জন্য সমাধান ভিতরে থাকে।', 'তারপর আপনি এটি একটি শুকানোর পরিবেশে আছে এবং সিস্টেমে ফিরে রাখা।', 'সুতরাং এটি একটি নেট দৈর্ঘ্যের পরিবর্তন সৃষ্টি করতে পারে যা সংক্ষিপ্ততার দিকেও যেতে পারে।', 'অবশ্যই, স্যালফেটের বিরুদ্ধে আপনার মর্টার বা কংক্রিট রক্ষা করার বিভিন্ন উপায় সম্পর্কে কথা বলা।', "প্রথম এবং সর্বাগ্রে হ'ল কম সি 3 এস এম ব্যবহার করা হয়, কারণ আবার আমরা খুব বেশি দেখেছি।", 'স্পষ্টভাবে সম্প্রসারণ এবং ettringite গঠন মধ্যে সংযোগ, কিন্তু কম C3S mns পরিবর্তন।', 'রসায়ন এমনভাবে যে প্রাথমিক ইট্রিংটাইট যা জলীয়করণ প্রক্রিয়া শুরুতে গঠন হয়।', 'সারা সময় স্থিতিশীল থাকে।', 'এটি সোলফ্যাটগুলির অন্যান্য রূপান্তর করে না, যেমন মনোসোলফ্যাট যা প্রবণতা।', 'যখন বাইরের সালফ্যাটগুলি কংক্রিটে প্রবেশ করে তখন এটিট্রিংটাইটে রূপান্তরিত হয়।', 'তাই কম সি৩এস এমএন সালফেট প্রতিরোধী সিমেন্টের ভিত্তি গঠন করে।', 'আমরা এটাকে এসআরসি বা সালফ্যাট প্রতিরোধী সিমেন্ট বলি।', 'এখন এটি সিমেন্ট আছে যে কম C3S এবং পয়েন্ট থেকে উপযোগী।', 'জলায়নের সময় আপনার ক্যালসিয়াম হাইড্রক্সাইড উৎপাদন।', 'আপনি খুব ভাল জানেন যে C3S এর 1 মোল তুলনায় 3 গুণ বেশি ক্যালসিয়াম হাইড্রক্সাইড উত্পাদন করে।', 'সি২এস-এ।', 'সুতরাং যদি আপনার ক্যালসিয়াম হাইড্রক্সাইড বেশি থাকে তাহলে গিলাস তৈরির প্রবণতা থাকে। কারণ।', 'যখন বহিরাগত সালফেটগুলি ক্যালসিয়াম হাইড্রক্সাইডের সাথে বিক্রিয়া করে আপনি জিপস গঠন করেন।', 'সুতরাং জিপস গঠনের হ্রাসও কংক্রিটের প্রতিরোধ ক্ষমতা উন্নত করতে সাহায্য পারে।', 'অথবা স্যালফেট আক্রমণ করার জন্য মর্টার।', 'উচ্চ আলুমিনিয়াম সিমেন্ট এবং সুপার সালফ্যাট আসলে ব্যাপকভাবে ব্যবহৃত হয় না।', 'আজকে আমরা যে অন্যান্য সমস্যার কথা বলেছি, সেগুলোর কারণে তারা।', 'জলযুক্ত ফ্যাজগুলির স্থিতিশীলতা।', 'এখন সালফেট এক্সপোজার ক্ষেত্রে এই সিমেন্ট উভয় খুব ভাল কাজ করে, কারণ আবার সেখানে।', 'এই সিস্টেমে কোন দেরী-এট্রিংটাইট গঠন ঘটে না।', 'এখন অবশ্যই আমরা মূলত 2 প্রধান দিক বাকি আছে যে সম্ভবত অধিকাংশ অংশ গঠন করবে।', 'আমরা যখন স্থায়িত্বের সমস্যা নিয়ে কথা বলি, তখন সুরক্ষা ব্যবস্থা।', 'প্রথমটি হলো পোজোলানিক উপাদান এবং খনিজ মাটির মিশ্রণ ব্যবহার করা।', 'এখন এটি বেশিরভাগ ক্ষেত্রে উপকারী হতে পারে, কারণ ক্যালসিয়ামের পরিমাণ হ্রাস করে।', 'সিস্টেমে থাকা হাইড্রোক্সাইড।', 'তাই কম জিপস গঠন হচ্ছে।', 'যদি কম জিপস গঠন হয় তাহলে অবশ্যই বিদ্যমান।', 'monosulphate এবং আলুমিন্যাট থেকে ettringite কারণ আমরা আগে আলোচনা জিপস গঠন ঘটে।', 'এই প্রক্রিয়ায় প্রথম পদক্ষেপ হিসেবে কাজ করতে হবে।', 'সুতরাং আপনি যদি সেই পদক্ষেপকে সীমাবদ্ধ করার চেষ্টা করেন তবে পরবর্তী পদক্ষেপটি স্বয়ংক্রিয়ভাবে ঘটবে না।', 'সুতরাং আপনার কাছে কম জিপস রয়েছে যার অর্থ সোডিয়াম সালফেটের জন্য ভাল।', 'এখন যখন আপনার সিস্টেমে কম ক্যালসিয়াম হাইড্রক্সাইড থাকে তখন কি হয়?', 'একটি অ্যাসিডিক প্রক্রিয়া যা ম্যাগনেসিয়াম সালফ্যাট দ্বারা সৃষ্ট হয়।', 'তাহলে কি হবে?', 'সুতরাং খনিজ মিশ্রণ সঙ্গে কংক্রিট যা কম পোর্টল্যান্ডাইট ধারণকারী কিভাবে তারা।', 'ম্যাগনেসিয়াম সালফেট সমাধানের মুখোমুখি।', 'ওপিসির তুলনায় তারা ভালো হবে কি খারাপ?', 'তারা আরও খারাপ হবে।', 'ম্যাগনেসিয়াম সালফেটের ক্ষেত্রে, ভিত্তিক যে কোনও আক্রমণ যা অ্যাসিডিক উত্পাদন করে।', 'সিস্টেমের শর্তাবলী।', 'সুতরাং SCM এর প্রতিরোধের দিক থেকে খুব খারাপ হবে।', 'অবশ্যই আমরা এখানে শুধু রাসায়নিক প্রক্রিয়া নিয়ে আলোচনা করছি।', 'আমরা আসলে সালফ্যাট অনুপ্রবেশের শারীরিক প্রক্রিয়াটির কথা বলছি না, যা নির্দেশিত।', 'সিস্টেমের পারমিটিলিটি দ্বারা।', 'এখন যখন আমরা SCM ব্যবহার করি, বাস্তব কংক্রিট নমুনা ক্ষেত্রের যা সালফ্যাট সংস্পর্শে হয়।', 'সমাধানগুলি ভিতরে সালফ্যাট সমাধানের অনুপ্রবেশের বিরুদ্ধে ব্যাপকভাবে প্রতিরোধের প্রবণতা রাখে।', 'এখন রাসায়নিকভাবে খনিজ মিশ্রণ ভিত্তিক কংক্রিটের মধ্যে ক্যালসিয়াম হাইড্রক্সাইডের অনুপস্থিতি হতে পারে।', 'ম্যাগনেসিয়াম সালফেট আক্রমণের ক্ষেত্রে একটি নেতিবাচক দিক।', 'কিন্তু আক্রমণ সমাধানের শারীরিক অনুপ্রবেশের ক্ষেত্রে যেটা ঘটছে তা হচ্ছে', 'সিস্টেমের কম পারমিটালতার কারণে এটি ব্যাপকভাবে সীমাবদ্ধ করা যেতে পারে।', 'কিন্তু যদি আপনি রাসায়নিক গবেষণায় দেখুন যা সালফেট আক্রমণের ক্ষেত্রে করা হয়।', 'ম্যাগনেসিয়াম সালফ্যাট সঙ্গে আপনি সবচেয়ে প্রায়ই দেখতে পাবেন যে কংক্রিটের কার্যকারিতা।', 'খনিজ additives খুব ভাল নয় এবং যে আমরা পরে অ্যাসিড আক্রমণ দেখতে হবে কিছু।', 'গবেষণাও।', 'কিন্তু অবশ্যই সবচেয়ে গুরুত্বপূর্ণ বৈশিষ্ট্য যে আমরা এখনও চিন্তা করতে হবে।', 'কম জল সিমেন্ট অনুপাত কংক্রিটে এবং কংক্রিট impermeable যে সম্ভবত।', 'sulphate solutions এর অনুপ্রবেশের বিরুদ্ধে আপনি যে প্রতিরক্ষা দিতে পারেন তার প্রথম লাইন।', 'এখন এই কিছু ল্যাবরেটরি প্রমাণ C3A প্রভাব sulphate আক্রমণ এবং।', 'এটা কানাডা থেকে।', 'সুতরাং এখানে আপনি খুব স্পষ্টভাবে দেখতে পারেন যে যদি আপনার সিমেন্টের মধ্যে C3A এর একটি উচ্চ শতাংশ থাকে।', '১২.৩% সি৩এ আপনি এমনকি বুঝতে পারেন না যে এটি কোন ধরণের নমুনা ছিল।', 'এই নমুনাগুলি সম্পূর্ণরূপে সালফ্যাট সমাধানগুলিতে নিমজ্জিত ছিল এবং এখানে আপনি 3.5।', 'C3A উচ্চ ঘনত্বের সংস্পর্শে পরে সিলিন্ড্রিকাল নমুনাগুলি আসলে অক্ষত থাকে।', 'সালফ্যাট সমাধান।', 'সুতরাং C3A সরাসরি কারণ আমরা গবেষণাগারে যে ধরনের গবেষণা নিমজ্জন উপর ভিত্তি করে করা।', 'আপনি স্পষ্টভাবে দেখতে পারেন কম C3A সঙ্গে কংক্রিট এর পারফরম্যান্স তুলনায় অনেক superior।', 'উচ্চতর C3A কংক্রিটের কার্যকারিতা।', 'এখন যখন আপনি বাস্তব সাইট ভিত্তিক গবেষণায় যান, এই ধরনের গবেষণার সেরা উদাহরণ হল', 'মার্কিন যুক্তরাষ্ট্রের পোর্টল্যান্ড সিমেন্ট অ্যাসোসিয়েশন পিসিএ দ্বারা সম্পন্ন।', 'তারা একটি গবেষণা করেছিল, যা কয়েক দশক ধরে চলেছিল, প্রায় ৩০ থেকে ৪০ বছর ধরে।', 'এই কংক্রিট নমুনা সংগ্রহ করা হয়, যা আসলে কলোরাডো মধ্যে নিমজ্জিত ছিল ভিতরে।', 'সালফেট সমৃদ্ধ মাটি এবং এই নমুনা যা Medicine Lake মধ্যে নিমজ্জিত করা হয়।', 'দক্ষিণ ডাকোটাতে সালফেট ধারণকারী।', 'সুতরাং এই আংশিকভাবে নিমজ্জিত করা হয়েছিল, বাস্তবিক প্রভাব আউট আনা কি ঘটতে পারে।', 'যখন তারা সুল্ফ্যাট সমৃদ্ধ মাটিতে থাকে, তখন কংক্রিটের উপর।', 'মজার বিষয় হল, তাদের গবেষণায় খুব স্পষ্টভাবে দেখা গেছে যে জল সিমেন্টের সাথে কোন কংক্রিট।', 'এই এক্সপোজারে ক্ষতিগ্রস্ত হওয়ার হার 0.45 এর বেশি ছিল।', 'সুতরাং এই বাস্তবসম্মত এক্সপোজার ছিল সালফ্যাট সমাধান খুব বেশি ঘন না এটা ছিল।', 'আসলে যা পাওয়া গেছে।', 'কংক্রিট নমুনা খুব ছোট নয়, তারা বেশ বড় সিলিন্ডার ছিল এবং পরে।', '7 বছর এক্সপোজার তারা এই সিদ্ধান্তে এসেছিলেন যে কোন।', '0.45 জল সিমেন্ট অনুপাত ক্ষতিগ্রস্ত হয়েছে।', 'এটা খুবই আকর্ষণীয় যে দেখাতে 0.45 পর্যন্ত সীমিত জল সিমেন্ট অনুপাত।', 'সালফ্যাট সমৃদ্ধ পরিবেশের ক্ষেত্রে এবং এই 0.45 কোডাল অধিকাংশ প্রতিফলিত হয়।', 'স্পেসিফিকেশনও।', 'কংক্রিটের সুরক্ষা সংক্রান্ত প্রথম এবং সর্বাগ্রে বিষয় হল।', 'স্পেসিফিকেশনে নির্ধারিত হয় জল সিমেন্ট অনুপাত কম 0.45 হয়।', 'এবং আবারও এই একই তথ্যটি পরে ক্যালিফোর্নিয়ার বিশ্ববিদ্যালয়ের গবেষকরা বিশ্লেষণ করেছিলেন।', 'বার্কলে পরে এই তথ্য অন্যভাবে উপস্থাপন করেন।', 'জল থেকে সিমেন্ট অনুপাত এবং তারা কি ছিল?', 'কংক্রিট দেখাতে সক্ষম হয় যে 40 বছর পরেও নিরাপদ ছিল এখনও।', 'সিমেন্টের সি 3 এ ধারণার নির্বিশেষে নিরাপদ ছিল এই সমস্ত কংক্রিটের পানি ছিল।', 'সিমেন্টের অনুপাত 0.45 এর কম।', 'সুতরাং যদি সিমেন্টের উচ্চ C3A থাকে, পানি অনুপাত।', '0.45 এর নিচে রাখা হয়েছে, পারফরম্যান্স এখনও খুব ভালো ছিল।', 'তাই ৪০ বছরেরও বেশি সময় ধরে বেঁচে থাকা সব কংক্রিটই ছিল জল সিমেন্টের।', 'অনুপাত 0.45 এর চেয়ে কম।', 'এবং আবার যদি আপনি অধিকাংশ স্পেসিফিকেশন তাকান সিমেন্ট সীমা মূলত কথা বলতে আরো।', 'সিস্টেমে উপস্থিত C3A এর পরিমাণ যেখানে টাইপ 2 সিমেন্ট সাধারণত মাঝারি।', 'সালফ্যাট প্রতিরোধী সিমেন্ট।', 'সুতরাং তাদের মধ্যে প্রায় ৮% C3A আছে।', 'টাইপ 3 সাধারণত উচ্চ C3A ধারণকারী হবে কারণ আমরা দ্রুত হার্ডিং বৈশিষ্ট্য প্রয়োজন।', 'এই সিমেন্ট থেকে কিন্তু টাইপ 5 যা সালফ্যাট প্রতিরোধী আমি কথা বলছি।', 'এএসটিএম স্পেসিফিকেশন সম্পর্কে এখানে।', 'টাইপ 5 সালফেট প্রতিরোধী সিমেন্ট এবং সেখানে C3A ধারণক্ষমতা কম দ্বারা নিয়ন্ত্রিত করা উচিত।', '৫ শতাংশের চেয়ে বেশি।', 'কিন্তু সমস্যা হল টাইপ ৫ সিমেন্টের অধিকাংশই সালফেটের প্রতিরোধের জন্য পরীক্ষা করা হয় না, যদি আমরা অনুমান করি যে।', 'আপনার C3A সবসময় 5% এর কম।', 'মানুষ মনে করে যে যখন আপনি একটি সালফেট প্রতিরোধী সিমেন্ট ব্যবহার, স্বয়ংক্রিয়ভাবে রক্ষা পেতে।', 'সালফ্যাট আক্রমণ থেকে।', 'এখন কেন এটা একটা সমস্যা।', 'কেন আমরা সালফেট প্রতিরোধের জন্য পরীক্ষা চালাতে হবে, এমনকি যদি প্রতিরোধী আছে।', 'সিমেন্ট।', 'কারণ আমরা যদি মিশ্রণ নকশা পরিষ্কারভাবে প্রতিষ্ঠা না করি, তবে আমরা।', 'সিমেন্টের পানি অনুপাত এটা একটা ব্যাপার।', 'দ্বিতীয়ত, আমরা জানি যে সিস্টেমের সাথে সম্পর্কিত অন্যান্য ধরনের ক্ষতিও ঘটছে।', 'জিপস গঠন এবং অন্যান্য দিকের সাথে সম্পর্কিত শারীরিক লবণের আক্রমণ।', 'প্রকৃত কংক্রিট নমুনাগুলির ব্যর্থতার প্রধান প্রক্রিয়া হতে পারে না।', 'একটি পরীক্ষাগার গবেষণায় যেখানে আমরা অবিচ্ছিন্ন নিমজ্জন করি, ইট্রিংটাইটের গঠন করতে পারি।', 'স্পষ্টভাবে সম্প্রসারণ সঙ্গে সরাসরি যুক্ত হয়, কিন্তু বাস্তবসম্মত অবস্থায় ettringite হতে পারে।', 'প্রথমত, এটি সালফ্যাট অন্যান্য ফর্মগুলিতে রূপান্তরিত হতে পারে এবং না।', 'আপনার কাঠামোর ক্ষতির জন্য প্রকৃতপক্ষে প্রধান যন্ত্র।', 'তাই আপনি টাইপ 5 সিমেন্ট ব্যবহার করার সময় আমরা sulphate সম্পর্কিত পরীক্ষা এবং নিশ্চিত করা উচিত।', 'আমরা কি সত্যিই যে পারফরম্যান্স চান পেয়ে যা কেন পরীক্ষা মান?', 'সালফ্যাটগুলির জন্য যা ASTM C1012 এর উপর ভিত্তি করে, একটি অবিচ্ছিন্ন নিমজ্জন করে প্রশ্নবিদ্ধ।', 'অনেক গবেষকের দ্বারা।', 'এটা আসলে সত্যিকার অর্থে কথা বলতে সালফ্যাট আক্রমণ প্রকৃত প্রতিরোধের।', 'আমরা এই সিস্টেমের পারম্যাবিলিটির প্রভাবগুলিকে সত্যই অন্তর্ভুক্ত করছি না বলেই কংক্রিটকে করছি।', 'যাইহোক, এটা আলোচনা এর বাইরে যে আমরা এখানে থাকতে চাই শুধু চেয়েছিলেন।', 'এএসটিএম স্ট্যান্ডার্ডগুলিতে নির্ধারিত বিভিন্ন পরীক্ষার পদ্ধতি পুনঃসংক্ষেপিত করা।', 'সবচেয়ে বেশি ব্যবহৃত হয় ASTM C1012, যেখানে আপনি মর্টার বার আছে যা।', '5% সোডিয়াম সালফ্যাট বা ম্যাগনেসিয়াম তারা এমনকি বলে আপনি একটি মিশ্রণ ব্যবহার করতে পারেন।', 'সোডিয়াম ও ম্যাগনেসিয়াম সালফেট।', 'এখন এই ধরনের প্রক্রিয়া বা প্রতিক্রিয়া যা আপনি থেকে পেতে হবে।', 'বেশ ভিন্ন।', 'সুতরাং আপনাকে পরীক্ষাটি কিভাবে করতে হবে সে ব্যাপারে খুব সতর্ক থাকতে হবে।', 'সঠিক সালফ্যাট সমাধান নির্বাচন খুবই গুরুত্বপূর্ণ এবং প্রসারিত সাধারণত পরিমাপ করা হয়।', '6 বা 12 মাস পরে কংক্রিট মর্টার আসলে 20 মেগাপাসকেল পৌঁছেছে শুধুমাত্র এটা।', 'সালফ্যাট সমাধানের সাথে সংযুক্ত যা নিশ্চিত করে যে কিছু ন্যূনতম স্তর।', 'সিস্টেমে ইতিমধ্যেই তৈরি করা হয়েছে এমন শক্তি।', 'আবার পরীক্ষা সমাধান হল 50 গ্রাম প্রতি লিটার সোডিয়াম সালফেট এবং এই।', '20 মেগাপাসক্যাল অতিরিক্ত সিমেন্টিং উপকরণও প্রতিক্রিয়া করতে দেয়।', 'এর অর্থ এই নয় যে আমরা কেবল ৭ দিনের জন্য চিকিৎসা করছি।', '৭ দিনের মধ্যে, OPC উড়ন্ত ধুলোর তুলনায় ভিন্ন মাত্রায় প্রতিক্রিয়া দেখা দিতে পারে।', 'সুতরাং আমরা যা বলি তা হল যে পর্যন্ত সমস্ত নমুনা একই শক্তির স্তর অর্জন করে না শুধুমাত্র পরে।', 'আমরা তাদের সালফ্যাট সমাধানের সাথে প্রকাশ করি।', 'এখন sulphate সম্পর্কিত অন্যান্য ধরনের প্রক্রিয়া যে আপনি ক্ষেত্রের দেখতে পারেন এছাড়াও অন্তর্ভুক্ত।', 'যা লবণ স্ফটিকায়ন বলা হয়।', 'আমরা ইতিমধ্যে এই বিষয়ে কথা বলেছি যে, সালফেট সমৃদ্ধ মাটিতে অন্তর্নিহিত স্তম্ভগুলি আসলে।', 'স্তম্ভের অংশের চেয়ে মাটির বায়ু ইন্টারফেসকে বেশি ক্ষতিগ্রস্ত করা হয়েছে।', 'আসলে মাটির ভিতরে সম্পূর্ণরূপে নিমজ্জিত হয় এবং যে মূলত এই কারণে।', 'লবণ স্ফটিকের অতিরিক্ত প্রভাব।', 'লবণ স্ফটিকায়ন মূলত পোরের ভিতরে জমায়েত হয়।', 'জল বাষ্পীভবন এবং পরবর্তী জারাজলির আপনি দেখতে পারেন যে যখন আপনি।', 'সালফ্যাট বিভিন্ন ফর্মের মধ্যে পরিবর্তন যা সম্প্রসারণের বা।', 'জলের অন্তর্ভুক্ত করার কারণে স্ফটিকের স্তরের পরিবর্তন।', 'জলীয়তা এর আকারও পরিবর্তিত হয়, যার ফলে আপনি ক্রিস্টালাইজেশন উত্পন্ন।', 'সিস্টেমে চাপ।', 'এবং এই যোগ করা হয়েছে আপনি বাষ্পীভবন পরিবহন সম্পর্কে আমরা কথা বলা অন্যান্য দিক আছে।', 'যে উইক কর্ম বেশ প্রভাবশালী ক্ষেত্রে যেমন এই যখন আপনি ভিজানো আছে।', 'একদিকে সম্পূর্ণ শুকনো পরিবেশ।', 'আকর্ষণীয়ভাবে, গবেষণা আবার দেখায় যে যদি আপনি জল সিমেন্ট অনুপাত কম।', 'আপনার সিস্টেমে বাষ্পীভবন পরিবহন হার যা হারে।', 'শোষণ ঘটবে উল্লেখযোগ্যভাবে হ্রাস।', 'সুতরাং এই 0.45 শুধুমাত্র রাসায়নিক দৃষ্টিকোণ থেকে নয়, কিন্তু।', 'একটি শারীরিক আক্রমণ পয়েন্ট।', 'পোর্টল্যান্ড সিমেন্ট সমিতির লবণ জ্বালানির প্রমাণ এবং এই', 'আসলে, পিসিএ দ্বারা 5 টি প্রকারের সিমেন্টের জন্য করা একটি দীর্ঘমেয়াদী গবেষণা।', 'অর্থাৎ উভয়ই সালফ্যাট প্রতিরোধী সিমেন্ট দিয়ে তৈরি করা হয়েছে।', 'একের জল সিমেন্ট অনুপাত 0.65 ছিল, অন্য 0.39 ছিল এবং আপনি দেখতে পারেন খুব।', 'স্পষ্টতই পারফরম্যান্স।', '১২ বছর পর কংক্রিটের ভিজ্যুয়াল রেটিং ছিল ৫, যার মানে এটি সর্বোচ্চ।', 'স্তর।', 'এখানে 16 বছর পরে কংক্রিট এখনও 2 রেটিং ছিল, যে মানে এটা একটি দীর্ঘ ছিল।', 'এটা সম্পূর্ণরূপে খারাপ না হওয়া পর্যন্ত চলার পথ।', 'তাই আবারও দেখা গেছে যে, সালফ্যাট সম্পর্কিত বেশিরভাগ গবেষণায় যে।', 'জল সিমেন্ট অনুপাত শুধুমাত্র C3A মাত্রা নয়, কিন্তু অত্যন্ত গুরুত্বপূর্ণ।', 'স্যালফেট প্রতিরোধের মূল কারণ।', 'এখন অন্য ধরনের সালফ্যাট আক্রমণ হল বিলম্বিত প্রত্যাবর্তন গঠন।', 'কংক্রিটে এই ঘটনাটি প্রথম কিভাবে আবিষ্কৃত বা তদন্ত করা হয়েছিল?', 'এটা ঘটেছিল যখন যুক্তরাজ্যের কিছু রেলওয়ে ঘুমন্ত ফাটল দেখাতে শুরু করে।', 'এখন রেলওয়ে স্লিপার একটি প্রাক-কাস্ট কারখানায় উত্পাদিত হয়। সাধারণত এই প্রাক-স্ট্রেস প্রাক-কাস্ট।', 'রেলওয়ে ঘুমন্ত এবং তারা সাধারণত শক্তির হার বাড়ানোর জন্য তাপ হার্ডিংয়ের শিকার হয়।', 'উন্নয়ন এবং এই ঘুমন্ত দেখাতে শুরু করা হয় মানচিত্র cracking বা এলোমেলো পরে।', 'প্রায় ১৫ থেকে ২০ বছর সেবা।', 'তাই যারা গবেষণা করেছেন তারা ভেবেছিলেন যে এটি আলকালি সিলিকের প্রতিক্রিয়াশীলতার কারণে।', 'কিন্তু পরে তারা দেখল যে, প্রতিক্রিয়াশীল সমষ্টিটি আসলে সিস্টেমে নেই।', 'এবং এই ফাটলগুলো অন্য কিছু সঙ্গে যুক্ত ছিল।', 'সুতরাং যখন তারা মাইক্রোস্ট্রাকচারাল বিশ্লেষণ করতে শুরু করে দেখতে পেল যে এই কংক্রিটগুলি।', 'আসলে সিস্টেমে প্রচুর ettringite গঠন দেখানো এবং এই অনেক ছিল।', 'আসলে তারা ফাটল ও ফাঁকগুলো দখল করতে শুরু করে।', 'আমি তোমাকে কিছু ছবি দেখাবো।', 'সুতরাং এই সিমেন্ট পেস্ট এবং সমষ্টির মধ্যে ইন্টারফেস আপনি দেখতে পারেন অনেক ettringite।', 'যে এই ইন্টারফেসে জমা করা হয় এবং এছাড়াও আপনি ইন্টারফেসের জুড়ে ettringite দেখতে পারেন।', 'এবং এই সমষ্টিগুলির মধ্যে বেশ কিছুতে আসলে ইট্রিংটাইটের গঠন দেখা যায়।', 'সুতরাং এটি মাইক্রোস্ট্রাকচারাল স্টাডিতে সনাক্ত করা হয়েছিল এবং তারপর তারা এই সিদ্ধান্তে এসেছিল যে।', 'এই ইট্রিংটাইট ছিল এমন কিছু যা কংক্রিটের শক্ত হওয়ার পর সিস্টেমে সংস্কার হয়েছিল।', 'কারণ এটি প্রাথমিক পর্যায়ে গঠন করতে পারেনি এবং এই ইট্রিংটাইট দমন।', 'গঠনের প্রধানত সিস্টেমের তাপ হার্ডিংয়ের কারণে ঘটে।', 'আপনি যদি সিস্টেমকে খুব উচ্চ তাপ সরবরাহ করেন, আমরা সাধারণত কথা বলছি।', 'তাপমাত্রা 70 ডিগ্রি সেলসিয়াস এর চেয়ে বেশি, 75 মধ্যে।', 'যদি আপনার সুলফেট থাকে যা সম্ভবত সহজেই।', 'দ্রবণীয় যদি sulphates শুরুতে সহজে না হয়, তাহলে আপনি সম্ভবত না।', 'আপনার স্বাভাবিক কংক্রিট আছে বলেই প্রথম পর্যায়ে ইট্রিংটাইট গঠন হয়।', 'সুতরাং, ইট্রিংটাইট গঠন মূলত যখন আপনি বাষ্পে যেমন উচ্চ তাপমাত্রা আছে।', 'যদি আপনার সিস্টেমে সালফেটের খুব কম দ্রবণতা থাকে তবে আবার ইট্রিংটাইট।', 'গঠন বন্ধ করা যেতে পারে।', "সুতরাং এই সালফ্যাটগুলির যা ঘটে পর্যাপ্ত সময় না দেওয়া হয় তা হ'ল তারা চলে যায়।", 'CSH মধ্যে sulphates দ্বারা শোষিত হয়।', 'আসলে আপনি যদি তাপ নিরাময় সিমেন্ট বা কংক্রিট গ্রহণ করেন খুব পরিষ্কারভাবে দেখতে পাবেন।', 'যখন আপনি CSH একটি বিশ্লেষণ করা হয় যে এটি অনেক সালফার আছে এবং এই সালফ্যাট।', 'অন্যথায় এটিট্রিংাইট বা মনোসুলফেটের মতো বিক্রিয়া পণ্যগুলিতে চলে যেতে পারে।', 'সুতরাং এই সালফ্যাটগুলি যা CSH তে যায় পরে আর্দ্রতার সাথে পুনরায় মিলিত হয়।', 'কংক্রিটের মধ্যে ইট্রিংটাইট তৈরি করতে পাওয়া যায় এবং এর ফলে প্রসারিত চাপ সৃষ্টি হয়।', 'যা আপনার কংক্রিটের ফাটল সৃষ্টি করে।', 'আবারও, এটি এমন কিছু প্রমাণ যা ইট্রিংটাইট গঠন দেখায় তাপ নিরাময় করা হয়।', 'ইন্টারফেস ট্রানজিশন জোনের মধ্যে।', 'এখন আকর্ষণীয়ভাবে অনেক গবেষণা যা দেখায় যে মাইক্রোস্ট্রাকচারাল প্রমাণ যে।', 'ইট্রিংটাইট আসলে আইটিজেডের মধ্যে এবং ফাটল বড় ফাঁক ভিতরে গঠন করা হয়।', 'সুতরাং এই ফাঁকটি সম্পূর্ণরূপে ইট্রিংটাইট দিয়ে ভরা।', 'তাই অনেক গবেষক বিশ্বাস করেন যে, ইট্রিংটাইটের গঠনের প্রক্রিয়া।', 'যে সালফ্যাটগুলি বিলম্বিতভাবে মুক্তির পাশাপাশি অন্যান্য শর্তগুলি পূরণ করা হয়েছিল।', 'সিস্টেমে মাইক্রো-ক্র্যাক এবং ফাঁক ছিল।', 'গবেষকরা আগেও এই কথা বিশ্বাস করতেন।', 'কিন্তু পরে এই ঘটনাটি বুঝতে পেরে মানুষ একমত হয়েছে।', 'যে এটি ইট্রিংটাইট নয় যা পোর এবং ফাঁকগুলিতে গঠন করে সম্প্রসারণের দিকে পরিচালিত করে।', 'এটি হল সিএসএইচ-এর মধ্যে গঠন হওয়া এট্রিংটাইট, যা সম্প্রসারণের কারণ।', 'সুতরাং এই CSH এখানে যা খুব সামান্য জায়গা আছে এর জন্য ettringite গঠন এবং প্রসারিত যে।', 'যেখানে যদি ettringite গঠিত এটা একটি সম্প্রসারণ সৃষ্টি করে এবং পরে ঘটে। এবং।', 'ফাটল ঘটেছে এবং এট্রিংটাইট এখানে থেকে জোনগুলিতে যেতে শুরু করে যেখানে এটি নিউক্লিয়াট করতে পারে।', 'এবং অনেক বড় জমা গঠন করে।', 'উদাহরণস্বরূপ, ফাঁক এবং ইন্টারফেসাল ট্রানজিশন জোন যেখানে আরও বেশি পোরোসিটি রয়েছে।', 'সিস্টেমে পাওয়া যায়।', 'সুতরাং, পোর, ফাঁক এবং ফাটল মধ্যে ettringite গঠন।', 'আপনার বিলম্বিত ইট্রিংটাইট গঠন অংশ যেখানে পুনরায় স্ফটিক হয় এই', 'পোর এবং ফাঁক।', 'সুতরাং ডিইএফ এর কারণে প্রাথমিক ইট্রিংটাইট এখনও সিএসএইচ মধ্যে গঠন হয় এবং তারপর আপনি প্রসারিত পেতে।', 'চাপ এবং তারপর অবশেষে ettringite জোন যেখানে এটি nucleate বৃদ্ধি করতে পারেন।', 'খুব বড় আকারে।', 'তাই আবারও এটা গবেষকদের মধ্যে বিতর্কের বিষয় ছিল, কিন্তু পরে স্পষ্টভাবে ছিল।', 'দেখানো হয়েছে যে, সিএসএইচ-এর মধ্যে ইট্রিংটাইট গঠন ফাটল সৃষ্টি করে এবং তারপর পুনরায় জমা হয়।', 'এই ফাটলগুলো মানুষকে বিশ্বাস করতে বাধ্য করেছে যে, আসলে এটি সেখানে তৈরি হয়েছিল।', 'তাহলে ডিএফ আসলে সমস্যা।', 'যতক্ষণ না আপনি আপনার কংক্রিটের তাপমাত্রা ৭০ ডিগ্রি সেলসিয়াস থেকে কম নিয়ন্ত্রণ করেন ততক্ষণ এটি হয় না।', 'এখন আমরা প্রায়ই জানি যে, বাষ্প নিরাময় তাপমাত্রা আপনি নিশ্চিতভাবে নিয়ন্ত্রণ করতে পারেন।', 'বাষ্পের তাপমাত্রা ৭০ এর নিচে হ্রাস করা, কিন্তু সমস্যাটি সিমেন্টের কারণে।', 'জলাক্তকরণের প্রথম পর্যায়ে যখন আপনি যোগ করা হয়, তখন কংক্রিটের মধ্যে খুব উচ্চ পরিমাণে।', 'তাপ এটিকে ঠান্ডা করার জন্য অভ্যন্তরীণ তাপমাত্রা আসলে 70 এর বেশি হতে পারে।', 'তাই আমরা যখন কংক্রিটের তাপ নিরাময় করি তখন আমাদের অত্যন্ত সতর্ক থাকতে হবে বিশেষ করে।', 'উচ্চ-প্রদর্শনীয় কংক্রিট যা কম পানিতে সিমেন্টের জন্য অনেক বেশি সিমেন্ট ধারণ করে।', 'অনুপাত।', 'কিন্তু যখন আমরা উচ্চ পারফরম্যান্সের কংক্রিট সঙ্গে কাজ করছি আপনি অন্য দিকে তাকাতে হবে।', 'দিক।', 'সিস্টেমে খুব কম পোরোসিটি থাকা কারণে বেশি আর্দ্রতা হতে পারে না।', 'এই ধরনের কংক্রিটের মধ্যে প্রবেশ করতে।', 'যদি কোনও আর্দ্রতা না থাকে, তবে সিস্টেমে এট্রিংটাইট সম্প্রসারণ সত্যিই ঘটবে না।', 'তাই স্বয়ংক্রিয়ভাবে যদি আপনি কম জল সিমেন্ট অনুপাত সঙ্গে একটি কংক্রিট নির্বাচন এটি প্রতিরোধী হবে।', 'ডিএফ-এর সাথে সম্পর্কিত প্রক্রিয়াগুলি যে প্রক্রিয়াগুলির আপনি সিস্টেমে অভিযোজিত হন তা নির্বিশেষে।', 'পজোলানিক উপকরণ ব্যবহার করাও সাহায্য করে।', 'কেন?', 'আবার আমরা সিস্টেমের পোরোসিটি এবং পারম্যাবিলিটি হ্রাস করি তারপর সৃষ্টি করছি।', 'pH এর অবস্থা যা আমরা সাধারণ পোর্টল্যান্ডের তুলনায় সামান্য কম।', 'সিমেন্ট।', 'সুতরাং পজোলানিক কংক্রিটে ইট্রিংটাইট গঠন হতে পারে না যতটা এটি বিসর্জন করে।', 'নিয়মিত সিমেন্টেশনাল কংক্রিটে।', 'সুতরাং পোজোলানিক উপাদান যোগ করার উপকারী প্রভাব রয়েছে।', 'প্রথমত, আপনি উপলব্ধ আলুমিন্যাট পরিমাণ হ্রাস যা ettringite গঠন করতে পারে যে।', 'সরাসরি প্রভাবও।', 'যখন আপনার কাছে পোজোল্যানিক উপাদান থাকে তখন আপনি আলুমিন্যাট পরিমাণ হ্রাস করেন যা ইট্রিংটাইট গঠন করতে পারে।', 'তাই স্বয়ংক্রিয়ভাবে ইট্রিংটাইট গঠন হ্রাস পায় যখন আপনি ভিতরে pozzolanic উপাদান আছে।', 'সিস্টেম।', 'রাসায়নিক হামলার অন্যান্য ফর্মের দিকে এগিয়ে যাচ্ছি।', 'তাই আমরা সালফেট নিয়ে অনেক কথা বলেছি।', 'আপনি যদি ক্লোরাইড আক্রমণ তাকান, আমরা সত্যিই কিভাবে কংক্রিট সম্পর্কে খুব বেশি বিরক্ত না?', 'ক্লোরাইড দ্বারা খারাপ হয়, কিন্তু আমরা আরো উদ্বিগ্ন কিভাবে এই আসলে।', 'কংক্রিটে প্রবেশ করে এবং যেখানে এটি কারবার স্টিলের স্তরে পৌঁছায়।', 'স্টিলের ক্ষয়।', 'সুতরাং ক্লোরাইড আক্রমণ বা বিক্রিয়া সহ সিমেন্টিশিয়াম হাইড্রেশন পণ্য।', 'সিস্টেমের সম্প্রসারণের কারণ নয়।', 'যে ধরনের পণ্যগুলি গঠন করে তা আসলে সম্প্রসারণের কারণ হয় না যদিও প্রতিক্রিয়া।', 'বেশ অনুরূপ।', 'স্যালফেট প্রতিক্রিয়া মনে রাখবেন যে আপনি C3A প্লাস ছিল।', 'এখানে C3A প্লাস ক্লোরাইড রয়েছে, যা ক্লোরালুমিন্যাট গঠনের দিকে পরিচালিত করবে।', 'সি৩এ প্লাস সালফ্যাট ক্যালসিয়াম সালফালুমিন্যাট গঠনের দিকে পরিচালিত করে।', 'সি৩এ প্লাস ক্লোরাইড ক্যালসিয়াম ক্লোরালুমিন্যাট গঠন করবে।', 'এর অন্যতম সাধারণ রূপ হল ফ্রিডেলের লবণ, ক্যালসিয়াম ক্লোরালুমিন্যাট।', 'ক্যালসিয়াম ক্লোরালুমিন্যাট মূলত ইট্রিংটাইটের গঠন অনুরূপ একটি গঠন, ব্যতীত।', 'যে sulphate পরিবর্তে আপনি সিস্টেমে ক্লোরাইড আছে এবং এটি আসলে একটি উপকারী।', 'কারণ আপনি শুধু একটি অ-বর্ধনশীল পণ্য গঠন করছেন না, এছাড়াও আটকে আছেন।', 'তোমার কংক্রিটে ঢুকে যাওয়া ক্লোরাইডের কিছু।', 'আপনার কংক্রিটে ঢুকতে থাকা ক্লোরাইডের অবস্থা ভালো হতে হবে।', 'স্টিলের পৃষ্ঠ।', 'যদি ক্লোরাইড সিমেন্ট দ্বারা আবদ্ধ হয় তাহলে আপনি পরিমাণ হ্রাস করছেন।', 'ক্লোরাইড যা ক্ষয় হতে পারে।', "সুতরাং C3A দ্বারা ক্লোরাইডকে সংযুক্ত করা হ'ল আক্রমণ থেকে রক্ষা করার একটি প্রাথমিক প্রক্রিয়া।", 'ক্লোরাইড সমাধান এবং এই সংযুক্তি প্রক্রিয়া আসলে উন্নত হতে পারে যদি আপনি প্রতিস্থাপন।', 'খনিজ additives সঙ্গে সিমেন্ট যা তাদের মধ্যে aluminates আছে।', 'উদাহরণস্বরূপ, মাটি, আপনার কাছে স্লাগ আছে, এইগুলি সিস্টেমে প্রচুর আলুমিন্যাট যোগ করছে।', 'এই আলুমিন্যাটগুলি ক্লোরাইড আয়নগুলিকে একটি অ-ব্যাপি পণ্যের সাথে সংযুক্ত করতে পারে।', 'পরিশেষে, যখন আপনি সিমেন্ট আছে যা C3A সমৃদ্ধ, আসলে একটি। ভাল।', 'ক্লোরাইড আক্রমণে পারফরম্যান্স।', 'সালফেট আক্রমণে, আমরা কম সি৩এ নিয়ে কথা বলেছিলাম।', 'ক্লোরাইড আক্রমণে, এর বিপরীত হয়।', 'আমাদের সিমেন্টের প্রয়োজন, যার উচ্চ C3A রয়েছে, কারণ এটিই আমাদের।', 'ক্ষয় প্রতিরোধের।', 'সুতরাং ক্ষয় প্রতিরোধের ক্ষেত্রে উন্নতি, বিরুদ্ধে নয়।', 'আমি আপনাকে ম্যাগনেসিয়াম ক্লোরাইড আক্রমণের কিছু ছবি দেখাবো।', 'আবার ম্যাগনেসিয়াম আয়নও এই ক্ষেত্রে জড়িত।', 'সুতরাং আপনি আসলে পৃষ্ঠের এই স্তর গঠন হতে হবে brucite বলা।', 'অথবা ম্যাগনেসিয়াম হাইড্রক্সাইড।', 'এখানে F দ্বারা চিহ্নিত ফ্রিডেলের লবণ গঠন সম্পর্কেও প্রমাণ রয়েছে যা।', 'এটি ক্যালসিয়াম ক্লোরালুমিন্যাট।', 'কখনও এটি সিএসএইচ-এর সাথে মিশ্রিত অবস্থায় গঠন হয়।', 'তাই আপনি প্রায়ই ক্লোরালুমিন্যাট সরাসরি একক জমা হিসাবে খুঁজে পাবেন না।', 'কখনও এটি সিএসএইচ-এর সাথে মিশ্রিত হয়।', 'মজার ব্যাপার হলো ক্লোরাইড বা আক্রমণ আপনার সার্ভিসের পোরোসিটি বাড়িয়ে তুলতে পারে।', 'কারণ আপনি আবার আপনার ক্যালসিয়াম হাইড্রক্সাইড বের করে দিচ্ছেন।', 'সুতরাং আপনি একটি কঠিন পণ্য অপসারণ এবং ভিতরে porosity সৃষ্টি করা হয়।', 'কারণ আপনার অন্যান্য পণ্যগুলির জমা পরিমাণও তেমন নয়।', 'আপনার বেশিরভাগ পণ্য দ্রবণীয়।', 'উদাহরণস্বরূপ, যদি আপনার ক্যালসিয়াম হাইড্রক্সাইড ক্লোরাইডের সাথে বিক্রিয়া করে, তাহলে এটি কী গঠন করবে?', 'ক্যালসিয়াম ক্লোরাইড যা অত্যন্ত দ্রবণীয় এবং সিস্টেম থেকে সরানো হয়।', 'অন্য ক্ষেত্রে সালফ্যাট আক্রমণ, ক্যালসিয়াম হাইড্রক্সাইড সঙ্গে বিক্রিয়া করে।', 'জিপস এবং সহজে দ্রবীভূত ছিল। না।', 'এটা সিস্টেমে ছিল এবং জমা হিসেবে দেখা যাচ্ছে।', 'সুতরাং এখানে আপনি একটি বৃদ্ধি ঘটানো হয় porosity যে নেতিবাচক এক হতে পারে।', 'ক্লোরাইড আক্রমণের প্রভাব।', 'কিন্তু যদি ম্যাগনেসিয়াম ক্লোরাইড আক্রমণ করে, তবে পোরোসিটি বাড়ার পাশাপাশি, আপনি।', 'পৃষ্ঠের পরিবর্তন এবং সিএসএইচকে ম্যাগনেসিয়াম সিলিক্যাট হাইড্রেটে রূপান্তরিত করা।', 'এটা এখনও সিস্টেমে ঘটতে পারে।', 'মনে রাখবেন যে, আপনি যখন সিএসএইচ থেকে ক্যালসিয়াম অপসারণ করছেন তখন এটি যে কোনও সিস্টেমে ঘটতে পারে।', 'এখানে ম্যাগনেসিয়াম সিএসএইচ থেকে ক্যালসিয়াম সরিয়ে দেবে।', 'যদি আপনার একটি অ্যাসিড থাকে, ধরুন হাইড্রোক্লোরিক তাহলে অ্যাসিডিক শর্তগুলি।', 'সিএসএইচ থেকে ক্যালসিয়াম অপসারণ করুন।', 'এমনকি সে ক্ষেত্রেও এটি সিলিকান হাইড্রেট গঠন করবে।', 'এটি কোন ধাতব ভিত্তিক সিলিক্যাট হাইড্রেট গঠন করবে না।', 'এখানে ম্যাগনেসিয়াম উপস্থিত থাকায়, এটি সিলিক্যাট হাইড্রেট গঠন করবে।', 'আসুন দ্রুত এসিড আক্রমণ নিয়ে কথা বলি, তারপর আজকের জন্য আমরা বন্ধ করব।', 'সুতরাং অ্যাসিড আক্রমণ মূলত বর্জ্য জল বহনকারী পাইপগুলির সমস্যা।', 'কংক্রিট পাইপগুলোতে অ্যাসিড আক্রমণ হয়।', 'এমনকি কিছু শিল্পের আবর্জনাও কখনও অ্যাসিড গঠন হতে পারে।', 'আমি আপনাদের দেখাবো যে কোথায় অ্যাসিড পাওয়া যায়।', 'যখন আপনি নিকাশী পাইপ সম্পর্কে কথা বলেন, তখন সাধারণ সমস্যা সালফুরিক গঠনের সাথে সম্পর্কিত।', 'আবার সালফুরিক অ্যাসিড, সালফ্যাট, অ্যাসিডিক অবস্থা।', 'সুতরাং আপনি মূলত জিপস গঠন হতে হবে।', 'ইট্রিংটাইট কি গঠন হবে?', 'যার জোনগুলো পৃষ্ঠের নিকটবর্তী নয়।', 'যেখানে অ্যাসিড থাকে সেখানে এট্রিংটাইট গঠন হবে না।', 'সুতরাং, এর্ট্রিংটাইট কম পিএইচ-তে স্থিতিশীল না থাকায়, আপনি কোন প্রমাণ দেখতে পাবেন না।', 'পৃষ্ঠের অঞ্চলে ইট্রিংটাইট।', 'যদি আপনি নমুনার অভ্যন্তরে যান যেখানে কিছু সালফ্যাট আসলে অনুপ্রবেশ করতে পারে, আপনি।', 'হয়তো এখনও কিছু ইট্রিংটাইট গঠন দেখতে পাচ্ছেন।', 'তাই গিলস গঠন সালফুরিক অ্যাসিড আক্রমণের একটি সাধারণ ঘটনা এবং আপনি কি পেতে।', 'এর ফলে জিপস গঠন এবং সবচেয়ে গুরুত্বপূর্ণভাবে আপনি শক্তি হ্রাস পেতে।', 'আপনার পিএইচ কম হওয়ার কারণে সিএসএইচ অস্থির হয়ে যায়।', 'এখন সালফুরিক অ্যাসিড কেবল এক ধরনের যা কংক্রিটকে ক্ষতি করতে পারে।', 'এমন আরো অনেক ঘটনা আছে যা আসলে ঘটতে পারে।', 'শিল্প উত্পাদন প্রায়ই সালফুরিক অ্যাসিড, নাইট্রিক হাইড্রোক্লোরিক অ্যাসিড ব্যবহার করে।', 'সুতরাং এই সবগুলো গঠন করতে পারে অথবা সবগুলোতে এইসব কংক্রিট কাঠামোগুলো ক্ষতিগ্রস্ত হতে পারে।', 'বিভিন্ন ধরনের কাঠামো।', 'অবশ্যই কংক্রিট খাল এমন একটি পরিবেশ যেখানে সালফুরিক অ্যাসিড আক্রমণ আসলে ঘটে।', 'এবং এটি ব্যাকটেরিয়াগুলির কর্মের কারণে জীবাণুগতভাবে তৈরি হয়।', 'আমরা এক মিনিটের মধ্যেই এ ব্যাপারে কথা বলব।', 'শিল্প বর্জ্যগুলি প্রায়ই তাদের সাথে অ্যাসিড স্ট্রেন বহন করতে পারে, যা ক্ষতির কারণ হতে পারে।', 'উদাহরণস্বরূপ, কংক্রিট লেকিং।', 'মজার ব্যাপার হলো, অনেক অ্যাসিড আছে যা জৈবিক উৎস থেকেও তৈরি হয়।', 'সুতরাং গবাদি পশু খামারগুলিতে সিলাগ উত্পাদন, আপনি খামার আছে যেখানে অনেক জৈব।', 'এসিড তৈরি করা যায় যেমন ল্যাক্টিক অ্যাসিড, অক্সালিক অ্যাসিড ইত্যাদি।', 'আর বর্জ্যপাতের পরিচ্ছন্নতা কেন্দ্রগুলি এমন অন্যান্য জায়গা যেখানে অ্যাসিড উৎপাদন হতে পারে।', 'সিস্টেমে।', 'এখন অ্যাসিড আক্রমণ কি?', 'আপনার প্রাথমিক প্রতিক্রিয়া কেবল একটি ক্লাসিক অ্যাসিড ভিত্তিক প্রতিক্রিয়া, কারণ এসিড আছে।', 'বাইরের পরিবেশ এবং আপনার ক্যালসিয়াম, হাইড্রক্সাইড অন্যান্য মৌলিক পদার্থ যা।', 'সিমেন্ট হাইড্রেশন পণ্যের ভিতরে পাওয়া যায়।', 'সুতরাং মূলত আপনি সিমেন্ট ম্যাট্রিক্স মাইক্রোস্ট্রাকচার বিভাজন হতে নেতৃত্ব দিচ্ছেন।', 'লবণ গঠন।', 'কিছু লবণ দ্রবণীয়, অনিদ্রবণীয়।', 'সুতরাং যখন আপনার দ্রবণীয় লবণ থাকে, তখন পোরোসিটি বৃদ্ধি পায়।', 'যখন আপনার কাছে অদ্রব্য লবণ থাকে, তখন জমা এবং সম্ভবত হওয়ার কারণে প্রসারিত হয়।', 'এই লবণ সিস্টেমে।', 'তাহলে অ্যাসিড আক্রমণে কী হয়?', 'সুতরাং এগুলো হাইড্রেশন পণ্য এবং এর বাইরে আপনার এসিড সলিউশন আছে।', 'সুতরাং আপনার কাছে অ্যাসিডের anions আছে, পাশাপাশি প্রোটন, H প্লাস প্রোটন যা অনুপ্রবেশ করছে।', 'কংক্রিট যখন আপনি ক্যালসিয়াম বহনকারী প্রজাতির বাহ্যিক আন্দোলন আছে, সিলিকন।', 'এবং অ্যালুমিনিয়াম আপনার হাইড্রোক্সিল আইন।', 'এবং আপনি একটি জোন আছে যে মধ্যে গঠন হয় কারণ বাইরের মিথস্ক্রিয়া।', 'প্রজাতি এবং অভ্যন্তরীণভাবে চলাচলকারী প্রজাতি।', 'এবং এই অঞ্চল মূলত উপাদান বা অ্যাসিডের ধরন দ্বারা চিহ্নিত করা হয় যে।', 'এর মানে হলো, প্রতিক্রিয়া।', 'তাহলে আপনার হাইড্রেটেড পণ্যগুলো কী হবে?', 'আপনি শেষ পর্যন্ত ভর হারাতে, নমুনা, আপনার অখণ্ডতা হারান, ক্ষারতা হারান।', 'এবং ফলস্বরূপ ইলাস্টিক মডুলাসের শক্তি হ্রাস হয়।', 'একটি বৃদ্ধি porosity এবং অবশেষে কারণ pH হ্রাস স্তর পৌঁছাতে পারে।', 'স্টিলের শক্তীকরণ, আপনার অ্যাসিড আক্রমণ সাধারণত শক্তীকরণের ক্ষয়ক্ষতি সৃষ্টি করবে।', 'এখন আরো নির্দিষ্টভাবে যদি আপনি কংক্রিট খালের এসিড আক্রমণ দেখেন, এটা খুবই আকর্ষণীয়।', 'সমস্যা হচ্ছে, কারণ আপনার শোষণশালার নিম্নার্ধে সাধারণত পানি থাকে।', 'এবং শোষণশালার ভিতরে রয়েছে অ্যানারবিক ব্যাকটেরিয়া বা সালফ্যাট হ্রাসকারী যা।', 'হাইড্রোজেন সালফেট গ্যাস উৎপাদন।', 'এই গ্যাস শীর্ষে উঠে যায়, পাইপের শীর্ষ স্তরে ঘন হয় যেখানে এটি কাজ করে।', 'এবং এই বায়োবিক ব্যাকটেরিয়া।', 'বাইরের দিকে সালফুরিক অ্যাসিড তৈরি করা।', 'সুতরাং আপনার পাইপগুলির মুকুটটিতে অ্যাসিডের অবস্থা তৈরি হয়েছে যখন ডুবে যাওয়া।', 'পাইপের অংশটি আসলে ক্ষতির থেকে মুক্ত থাকতে পারে।', 'সুতরাং আপনি মূলত যদি সিমেন্টেশন উপাদান যে আক্রমণ করা হয় তাকান।', 'আপনার জৈবিকভাবে প্রেরিত সালফুরিক অ্যাসিড আক্রমণ, আপনি পৃষ্ঠের উপর কি হবে একটি। ছোট।', 'বায়োফিল্ম যা ব্যাকটেরিয়া কার্যকারিতা দ্বারা গঠিত হয়, এবং তারপর আপনি একটি বড় আকারের।', 'আপনার নমুনার একটি নির্দিষ্ট গভীরতা জুড়ে জিপস গঠন।', 'এই জিপস গঠন সালফুরিক অ্যাসিড আক্রমণের কারণে হয় এবং তারপর আপনি অপরিশোধিত আছে।', 'ভিতরে থাকা সিমেন্টাইজড উপাদান।', 'সময়ের সাথে অবশ্যই যা ঘটবে তা হল আপনার সমগ্র সিমেন্টিশিয়াল প্রকৃতি হারিয়ে যাবে। কারণ।', 'উচ্চতর অ্যাসিড কনসেন্ট্রেট এবং পিএইচ হ্রাস তারপর অবশেষে আপনি।', 'আপনার সিমেন্টেশন ফ্যাজগুলির বিভাজন।', 'এই ছবিটি আবার ডানদিকে একটি খালের পাইপের ছবি। এখানে আপনি প্রায় সব দেখতে পারেন।', 'বা প্রায় সব কংক্রিট সমীপবর্তী reinforcement সরানো হয়।', 'আপনি সেখানে সজ্জা হিসাবে টান দেখতে পাচ্ছেন এবং সমস্ত কংক্রিট সম্পূর্ণরূপে আছে।', 'সরিয়ে ফেলা হয়েছে।', 'এখানে আবার একটি ছবি মুরিয়াটিক অ্যাসিড দ্বারা আক্রমণ যা মূলত dilute hydrochloric।', 'একটি শিল্প থেকে অ্যাসিড এবং আপনি স্পষ্টভাবে এখানে আক্রমণ প্রমাণ দেখতে পারেন। কারণ।', 'সবগুলো সমষ্টি পেছনে ফেলে দেওয়া হয়েছে।', 'এই সিলিকাস সমষ্টি তারা পিছনে রেখে গেছে যখন পেস্ট সম্পূর্ণরূপে।', 'এসিড দ্বারা দ্রবীভূত।', 'সিলিকাসিক সমষ্টিটি এসিডের দ্বারা সরাসরি আক্রান্ত হয় না।', 'তাহলে এখন আপনি আমাকে অ্যাসিড আক্রমণের বিরুদ্ধে সুরক্ষার ব্যবস্থা বলতে পারেন।', 'যদি আমরা সিলিকিয়াম সমষ্টিকে কার্বনেট সমষ্টি দিয়ে প্রতিস্থাপন করি তাহলে কি হবে?', 'অ্যাগ্রেইটগুলিও অ্যাসিড দ্বারা ক্ষতিগ্রস্ত হবে। কিন্তু এটি একটি ভাল জিনিস। কারণ এখন আমাদের', 'সমষ্টি এবং পেস্ট যা সমানভাবে ক্ষতিগ্রস্ত হচ্ছে।', 'সুতরাং আপনার কংক্রিটের ক্রস সেশনটি অভিন্নভাবে হারাবে যখন আপনি সিলিকিয়াম ব্যবহার করেন।', 'সমষ্টিগুলি সম্পূর্ণরূপে দ্রবীভূত হয়ে যায় এবং মুক্ত যায়।', 'সুতরাং সিস্টেমে কোন বন্ডিং নেই।', 'অনেক সময় মানুষ সিলিকস সমষ্টির পরিবর্তে শিলাবৃষ্টি সমষ্টি ব্যবহার করে।', 'কারণ, এই পাথরটিও ধীরে অ্যাসিড দ্রবণীয় হয়ে ওঠে।', 'তাই শিলাবৃষ্টি ব্যবহার করা সালফুরিক অ্যাসিডের এক্সপোজার হ্রাস করার একটি খুব ভালো উপায়।', 'অথবা কোনও অ্যাসিড এক্সপোজার।', 'বিকল্পভাবে আপনি বিশেষ সিমেন্ট যেমন ক্যালসিয়াম আলুমিন্যাট ব্যবহার করতে পারেন যা।', 'এসিড আক্রমণের বিরুদ্ধে খুব উচ্চ প্রতিরোধ ক্ষমতা।', 'আবার এটা আপনাকে বিভিন্ন পর্যায়ে বর্ণনা দিতে হয় যে আমাদের করতে হবে না।', 'আরো বিস্তারিতভাবে দেখুন।', 'এখন রাসায়নিক সালফুরিক অ্যাসিড আক্রমণ এবং জৈবিকভাবে উত্পাদিত।', 'সালফুরিক অ্যাসিড আক্রমণ।', 'সুতরাং আবার আপনি সিস্টেমে যে ধরনের পণ্য গঠন করতে পারেন এবং পরিবর্তন ধরনের।', 'আপনার মাইক্রোস্ট্রাকচার সম্পূর্ণ ভিন্ন হতে পারে।', 'তাই আমি আপনাদের এই তথ্য দিচ্ছি, মামলায় আর কোনো আলোচনা করার জন্য নয়।', 'সুতরাং, নিকাশী নেটওয়ার্কগুলি আপনাকে সিমেন্টেশনাল উপকরণগুলির জন্য একটি অত্যন্ত আক্রমণাত্মক পরিবেশ দেয়।', 'ঠিক আছে, ধন্যবাদ।', 'ধন্যবাদ, স্যার।']
2024-02-28 12:19:03,824 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['আজ আমরা সালফেট আক্রমণ নিয়ে আলোচনা শুরু করব।', 'গত ক্লাসে আমরা দেখেছি কিভাবে সালফ্যাট সিমেন্টেশন সিস্টেমে প্রবেশ করে।', 'জলযুক্ত সিমেন্ট, ফ্যাজ এবং পৃষ্ঠ থেকে শুরু করে বিভিন্ন ধরণের যৌগ গঠন করে।', 'ভেতরে।', 'আসুন আমরা একটু আলোচনা করি যে, ইট্রিংটাইট গঠন সম্প্রসারণের কারণ হয় কিনা।', 'অবশ্যই আমরা খুব ভালোভাবে জানি যে, ইট্রিংটাইটের এমন একটি গঠন রয়েছে যা বিস্তার প্রবণতা।', 'মূলত আর্দ্রতা শোষণ করে এবং এই সম্প্রসারণে আশেপাশের চাপ সৃষ্টি করতে পারে।', 'পরিবেশ যা ফাটল সৃষ্টি করে, ঠিক আছে।', 'কিন্তু সরাসরি প্রমাণ কি এবং কোন শর্তে ইট্রিংটাইট।', 'কংক্রিট সিস্টেমের সম্প্রসারণের দিকে পরিচালিত করে।', 'আমরা জানি যে প্রাথমিক ইট্রিংটাইট হল ইট্রিংটাইট, যা আসলে প্রক্রিয়াটির খুব শুরুতে গঠন হয়।', 'নিয়মিত সিমেন্ট হাইড্রেশন, যখন ফ্যাস যেমন আলুমিন্যাট সঙ্গে প্রতিক্রিয়া।', 'সিমেন্টের মধ্যে সালফ্যাট যোগ করা হয়, আমরা প্রাথমিক ettringite গঠন এবং এই ettringite।', 'পরে এটি একক sulfate রূপান্তরিত হয়, কারণ সিস্টেমে আলুমিন্যাট অতিরিক্ত উপস্থিত হয়।', 'এখন, দেরী প্রাথমিক ইট্রিংটাইট গঠনেরও প্রমাণ আছে এবং এটি সিমেন্টের মধ্যে ঘটে।', 'যেখানে সুলফেট বেশি পাওয়া যায়।', 'এর মানে হল যে আপনি বেশ দীর্ঘ সময়ের জন্য ইট্রিংটাইট জমা রাখেন।', 'ঠিক আছে, আছে।', 'এখন এটা ঘটে সালফেটের অভ্যন্তরীণ উৎসগুলির কারণে।', 'বাহ্যিক ইট্রিংটাইট যখন আমরা আছে sulphates পরিবেশ থেকে আসা কারণে।', 'বাইরের থেকে সালফ্যাট প্রবেশ।', 'এর পাশাপাশি আমরা বিলম্বিত ইট্রিংটাইট গঠনকে এমন একটি ঘটনাও বলতে পারি যা।', 'অভ্যন্তরীণভাবে নিষ্ক্রিয় করা ইট্রিংটাইটের গঠন যা বয়সের শেষের দিকে বৃদ্ধি পায়।', 'এর অর্থ হল যে কিছু কারণে অ্যাট্রিংটাইট প্রাথমিক পর্যায়ে গঠিত হয়নি। এবং।', 'কিছু অন্যান্য কারণের সংমিশ্রণ এটিকে শক্ত অবস্থায় গঠিত করেছে।', 'স্পষ্টতই যখন একটি বিস্তৃত উপাদান শক্ত কংক্রিটের ভিতরে গঠিত হয় যে যখন।', 'আপনি এর কারণে বড় ক্ষতিগ্রস্ত হন এবং এটিকে ডিইএফ বা বিলম্বিত ইট্রিংটাইট নামেও পরিচিত।', 'গঠন, ঠিক আছে।', 'এটি একটি সাধারণ শব্দ যা বিলম্বিত ইট্রিংটাইট গঠন জন্য দেওয়া হয়।', 'সাধারণভাবে বলতে গেলে, যে কোন সালফ্যাট আক্রমণ প্রক্রিয়া শেষের দিকে ettringite গঠনের পরিচালিত করে।', 'শক্ত পর্যায়ে।', 'সুতরাং, এট্রিংটাইটের যেকোনো গঠনই একটি মাধ্যমিক এট্রিংটাইট গঠন।', 'এর মানে হল আমরা এটি প্রাথমিক ettringite থেকে আলাদা করছি যা নিয়মিত কারণে গঠন।', 'সিমেন্টের হাইড্রেটেশন, ঠিক আছে।', 'এখন যদি আপনি ক্রিস্টালিন উপাদানগুলির ধরনটি দেখুন যা উত্পাদনের কারণে গঠিত হয়।', 'ইট্রিংটাইটের, ইট্রিংটাইট সুই আকারে গঠিত হয়, ঠিক আছে।', 'সুতরাং, ইট্রিংটাইট একটি দীর্ঘ মাত্রা এবং মূলত কি ঘটে।', 'ইট্রিংটাইটের দৈর্ঘ্য থেকে বেধের অনুপাতটি আশেপাশের পরিবেশের পিএইচ-এর উপর নির্ভর করে।', 'এখন দেখা যাচ্ছে যে যখন আপনি খুব উচ্চ pH স্তর আছে, আমরা আসলে গঠনের।', 'ইট্রিংটাইটের দীর্ঘ সুই।', 'আমরা ছোট স্তম্ভযুক্ত ইট্রিংটাইট স্ফটিক গঠন করছি, ঠিক আছে।', 'কিন্তু এর মাঝখানে, ১২ থেকে ১০ মধ্যে আমরা আসলে ইট্রিংটাইট সুই গঠন করছি।', 'যার দৈর্ঘ্য অনেক বেশি, ঠিক আছে।', 'সুতরাং যা ঘটবে তা হল সিমেন্ট হাইড্রেশন এর প্রথম পর্যায়ে, আপনি আসলে গঠন।', 'এই মাইক্রোক্রিস্টালিন ইট্রিংটাইট যেখানে দৈর্ঘ্য আসলে বেশ ছোট, ঠিক আছে এবং দৈর্ঘ্য।', 'ব্যাসার্ধ বা বরং দৈর্ঘ্য থেকে বেধ অনুপাত বেশ ছোট।', 'কিন্তু যখন ইট্রিংটাইট প্রসারিত হয়, আপনি একটি দৃশ্যকল্প সম্পর্কে চিন্তা করতে পারেন বাহ্যিক আছে।', 'সালফ্যাট আক্রমণ, একটি ettringite প্রসারণ যেখানে আর্দ্রতা নিমজ্জিত করা হয় এবং আসলে।', 'কস্টাল অভ্যাস দেখাতে শুরু করুন, যা উচ্চ দৈর্ঘ্যের দ্বারা দেখানো হয়, ঠিক আছে।', 'সুতরাং উচ্চ pH স্তরে মাইক্রোক্রিস্টালিন ইট্রিংটাইট তাজা কংক্রিটে দেখা যায়, যা আমরা সাধারণত।', 'তাড়াতাড়ি হাইড্রেটেশন আশা করি, ঠিক আছে।', 'এখন গবেষকদের মতে, এবং এটা ভালভাবে নথিভুক্ত করা হয়েছে যে মাইক্রোক্রিস্টালিন।', 'জল শোষণ ক্ষমতা সঙ্গে ettringite উচ্চ প্রসারিত হতে পারে, ঠিক আছে এবং এই সাধারণত।', 'যখন pH শর্তগুলো বেশ উচ্চ হয়, তখন ঘটে।', 'সুতরাং যদি আপনি সালফ্যাট এক্সপোজার আসে যেখানে পিএইচ হ্রাস করা হয়, উদাহরণস্বরূপ যখন আপনি।', 'যদি পরিবেশে pH স্তর কম থাকে, তাহলে দেখা যায় যে।', 'এই ইট্রিংটাইটটি খুব বেশি শোষণযোগ্য নয়। এবং যখন ইট্রিংটাইটটি।', 'জল শোষণ বা নিমজ্জন করে না, এটি খুব উচ্চ প্রসারিত হতে পারে না।', 'সুতরাং, ইট্রিংটাইট গঠন শুধুমাত্র সেই অবস্থার মধ্যে প্রসারিত হতে পারে। যেখানে।', 'বাইরের pHও যথেষ্ট বেশি।', 'এখন এটা অনেকটা ব্যাখ্যা করে কেন আমরা আসলে সম্প্রসারণ ঘটছে না।', 'মাঠ ভিত্তিক নমুনা।', 'ল্যাব নমুনাগুলিতে, আমরা একটি খুব উচ্চ স্তরের সম্প্রসারণ দেখতে পাই, কিন্তু একই সময়ে প্রকৃত।', 'মাঠে পারফরম্যান্স যা আক্রমণাত্মক বাহিনীর ক্রমাগত পুনর্নির্মাণের সাথে থাকে।', 'সমাধান কারণ আপনি ভূগর্ভস্থ জল আছে যা অবিচ্ছিন্নভাবে আক্রমণকারী রিচার্জ।', 'সমাধান।', 'এর পাশাপাশি, আমাদের অন্যান্য আইওনিক প্রজাতির উপস্থিতি রয়েছে, যা ধ্বংস করতে পারে।', 'আশেপাশের দ্রাবকের pH।', 'এখন যখন এটি ঘটে, তখন বাস্তবে গঠিত হচ্ছে এমন ইট্রিংটাইট শেষ পর্যন্ত হতে পারে না যেমন।', 'একটি নিয়মিত নিমজ্জন অবস্থায় সিস্টেমের ভিতরে যা গঠন করে তার মতো প্রতিক্রিয়াশীল বা বরং বিস্তৃত।', 'তাহলে কি হবে যখন আপনি একটি কাপ নিন এবং ভিতরে সালফেট সমাধান রাখুন কংক্রিট রাখুন।', 'ভেতরে নমুনা।', 'সুতরাং বেনিটনের pH খুব বেশি, ঠিক আছে। ১৩।', 'তাহলে যখন আপনি pH 7 বা 8 এর একটি সালফ্যাট সমাধানের ভিতরে এটি রাখেন তখন কী হয়?', 'আপনি কংক্রিট থেকে বাইরে পরিবেশের মধ্যে lime একটি leaching থাকবে।', 'ঠিক আছে এবং বাইরের সমাধানের পিএইচ খুব উচ্চ স্তরে স্থিতিশীল হতে শুরু করে।', 'আমরা কিছু ক্ষেত্রে ১২ এর চেয়ে বড় স্তরে পৌঁছে যাই।', 'সুতরাং এই শর্তে, যে ইট্রিংটাইট আসলে গঠন হচ্ছে তা বিস্তৃত প্রকৃতির।', 'যখন আপনার আশেপাশের দ্রাবকের pH উচ্চ হয়, তখন ইট্রিংটাইট বিস্তৃত হয় এবং এটি হতে পারে।', 'পরীক্ষাগার গবেষণায় সালফেটের আক্রমণের সাথে সাধারণত যুক্ত প্রসারিত।', 'কিন্তু ক্ষেত্রের ক্ষেত্রে আমরা একই ধরনের সম্প্রসারণ দেখতে পাচ্ছি না।', 'এট্রিংটাইটের স্থিতিশীলতাও একটি নির্দিষ্ট স্তরে বিদ্যমান পিএইচ স্তরের উপর নির্ভর করে।', 'পরিবেশ।', 'উদাহরণস্বরূপ, যখন pH খুব বেশি হয় অথবা 9 থেকে 13 এর মধ্যে থাকে।', 'এবং এটি সাধারণত একটি ettringite সমাধান স্থিতিশীলতা পরিসীমা।', 'তাই আবার বিভিন্ন গবেষণায় pH পরিসীমা প্রদান করা হয় যা এট্রিংটাইট।', 'স্থিতিশীল।', 'যখন আশেপাশের অবস্থা অ্যাসিড হয়ে যায়, তখন এই পরিবেশে ইট্রিংটাইট।', 'খুব স্থিতিশীল।', 'সুতরাং, আপনি যদি এইট্রিংটাইটটি ব্যবহার করেন তাহলে আপনার চারপাশের অবস্থার দিকে তাকাতে হবে।', 'স্থিতিশীল হতে হবে।', 'উদাহরণস্বরূপ, একটি অ্যাসিড পরিবেশে, ইট্রিংটাইট আসলে সহজেই রূপান্তরিত হতে পারে।', 'গ্যাস, অ্যালুমিনিয়াম হাইড্রক্সাইড, বিশেষ করে যদি কার্বনেশনও ঘটে, এটি হতে পারে।', 'আসলে, এটি অ্যালুমিনিয়াম হাইড্রক্সাইড এবং জিপসের সাথে ক্যালসিয়াম কার্বনেট ফ্যাজ গঠন করে।', 'সুতরাং, অ্যাসিড পরিবেশে এট্রিংটাইট জিপস এবং অ্যালুমিনিয়াম হাইড্রক্সাইডে রূপান্তরিত হবে।', 'সুতরাং আবার যদি আপনি ক্ষেত্র থেকে প্রমাণ দেখুন, কাঠামো যে সম্পূর্ণরূপে রয়ে গেছে।', 'শুকনো, শক্তকর্ষিত কংক্রিটে কোন এট্রিংটাইট পাওয়া যায়নি।', 'সুতরাং যদি আপনার কোন আর্দ্রতা না থাকে, তাহলে আপনি আসলে ইট্রিংটাইটের গঠন দেখতে পাচ্ছেন না।', 'পরবর্তী পর্যায়ে এবং যখন আপনি বিকল্প শুকনো ভিজানো আছে, কিছু ettringite আছে।', 'যে দেখা যায়, কিন্তু শুকানোর কারণে, আপনি সম্ভবত একটি অবস্থা হবে না যেখানে।', 'ইট্রিংটাইট গঠন প্রসারিত হয়।', 'এখন আমি আপনাদের কিছু সাম্প্রতিক গবেষণামূলক গবেষণায় দেখাবো, যা দেখিয়ে দেবে।', 'ইট্রিংটাইট গঠন ও সম্প্রসারণ।', 'তাই ল্যাব স্টাডিতে আমরা সাধারণত মর্টার প্রিজমিক নমুনা ব্যবহার করে গবেষণা করি যা সাধারণত।', '25 x 285 মিমি এবং এই সব সালফ্যাট সমাধানের ভিতরে সংরক্ষণ করা হয় সম্পূর্ণ।', 'সালফ্যাট সমাধানের ভিতরে নিমজ্জিত এবং পর্যায়ক্রমে নমুনাগুলি সমাধান থেকে সরানো হয়।', 'এবং দৈর্ঘ্যটি এখানে প্রদর্শিত দৈর্ঘ্যের তুলনা ব্যবহার করে পরিমাপ করা হয়।', 'সুতরাং এটি 3 গ্রাম এবং 50 প্রতি লিটার সালফেটে সংরক্ষিত মর্টার দিয়ে প্রস্তুত উপস্থিতি।', 'সমাধান।', 'এই ক্ষেত্রে এটি সোডিয়াম সালফ্যাট ছিল।', 'সুতরাং আমরা আলোচনা করেছি যে, ক্যাশন প্রভাব থেকে কোন মাধ্যমিক প্রক্রিয়া উদ্ভূত হবে না।', 'ম্যাগনেসিয়ামের সাথে, আপনি ক্যাটিও এর প্রভাব আছে, যা বেশ গুরুতর।', 'বিবেচনা করা হবে।', 'সুতরাং আমরা এই প্রকল্পে যা করেছি তা হল পর্যায়ক্রমে দৈর্ঘ্যের পরিবর্তন পর্যবেক্ষণ করছি।', 'এবং আমরা এক্স-রে বিঘ্ন বিশ্লেষণের মাধ্যমে ইট্রিংটাইটের পরিমাণ নির্ধারণ করছিলাম।', 'সুতরাং এখানে আপনি দেখানো হচ্ছে যে বিস্তার বিভিন্ন।', '32 সপ্তাহের এক্সপোজার এবং এই 2 মিশ্রণ, একটি সাধারণ সঙ্গে।', 'পোর্টল্যান্ড সিমেন্ট এবং M2 পজোলান যার অর্থ যা 30।', 'কার্বন উড়ন্ত ধুলো।', 'সুতরাং আপনি দেখতে পারেন যে 32 সপ্তাহ পরে শুধুমাত্র নমুনা উল্লেখযোগ্য প্রসারিত দেখানো।', 'উচ্চ ঘনত্বের মধ্যে সংরক্ষণ করা OPC কংক্রিট বা মর্টার নমুনা কিনা।', 'সালফ্যাট সমাধান।', '3 গ্রাম প্রতি লিটার সমাধান আপনি সত্যিই খুব বেশি প্রসারিত ছিল না যদিও।', 'স্টোরেজ এর পরবর্তী অংশে কিছু বৃদ্ধি প্রবণতা দেখা গেছে।', 'এখন আপনি যখন ডায়নামিক মডুলাসের পরিবর্তনটি দেখেন, এখানে মডুলাস পরিমাপ করা হয়েছে।', 'আসলে, উপাদানটির রেজোনেন্স ফ্রিকোয়েন্সি নিশ্চিত করে।', 'তাই আমরা প্রিজমিক নমুনা নিয়ে রেজোনেন্স ফ্রিকোয়েন্সিটা দেখলাম।', 'সুতরাং, কংক্রিটে যা ঘটেছে তা হল কংক্রিটের অবনতি ঘটে যখন রেজোনেন্স ফ্রিকোয়েন্সি ঘটে।', 'এছাড়াও হ্রাস পাবে।', 'সুতরাং এটি একটি অ-ধ্বংসাত্মক পরীক্ষা ব্যবহার করে পরোক্ষভাবে পরিমাপ করা গতিশীল মডিউল।', 'এখানে আপনি দেখতে পারেন যে উচ্চ ঘনত্বের মধ্যে সংরক্ষিত মর্টার নমুনা।', 'সালফেট সমাধান, সাধারণ পোর্টল্যান্ড সিমেন্ট ভিত্তিক মর্টার আপনি দেখতে পারেন যে গতিশীল।', '32 সপ্তাহের এক্সপোজার সময় মডিউল উল্লেখযোগ্যভাবে হ্রাস পেয়েছে, যখন অন্যান্য সমস্ত নমুনা।', 'কোন হ্রাস ছাড়া একটি মোটামুটি ধারাবাহিক গতিশীল মডিউল আছে বলে মনে হয়।', 'এখন আসুন আমরা এই পরিমাণের দিকে তাকাই।', 'এটি আবারও একটি চিত্রের পরিবর্তে টেবিল হিসাবে উপস্থাপিত শতাংশ প্রসারিত।', 'এখন আপনি যদি দেখতে পারেন যে, ওপিসি 50 গ্রাম প্রতি লিটারে সম্প্রসারণ প্রায় 3% পর্যন্ত ছিল।', 'এটা খুব উচ্চ স্তরের সম্প্রসারণ।', 'আপনি যখন এই এএসটিএম পরীক্ষা করেন, তখন এটি সি 1012 অনুযায়ী হয়, পরীক্ষার পদ্ধতিটি করেন।', 'প্রচলিত মর্টারগুলির ক্ষেত্রে, যদি আপনার এক্সপোজার ৬ মাসের মধ্যে 0.1% অতিক্রম করে।', 'আপনি যে মর্টার বা নির্দিষ্ট সংমিশ্রণ বন্ধনী এবং হিসাবে অসহিষ্ণু উল্লেখ।', 'সালফ্যাট সমাধান।', 'এটা কেবল একটি অবাঞ্ছিত পদ্ধতি।', 'এটা আসলে বাস্তব আচরণ প্রকাশ করে না যে আপনি কংক্রিট এবং সালফ্যাট থেকে আশা করতে পারেন।', 'সমৃদ্ধ পরিবেশ, কিন্তু এই ধারাবাহিক নিমজ্জন পরীক্ষা যদি আপনার নমুনা শেষ পর্যন্ত একটি সম্প্রসারণ আছে।', '৬ মাসের মধ্যে 0.1% এর বেশি হলে এটি সিমেন্টের প্রতিরোধী নয় বলে মনে করা হয়।', 'সালফ্যাট আক্রমণ।', 'তবে এই ক্ষেত্রে মাত্র ৩২ সপ্তাহের এক্সপোজারের মধ্যে ৩% পর্যন্ত প্রসারিততা রেকর্ড করা হয়েছে।', 'সুতরাং, প্রায় ৮ মাস, ৭ থেকে মাস এর মধ্যে আপনার এক্সপোজার ছিল। ৩।।', 'যদি আপনি 3 গ্রাম প্রতি লিটারে OPC দেখেন, তাহলে এটি এখনও 0.1% চিহ্নের মধ্যে পৌঁছায়নি।', 'যখন আপনি 50 গ্রাম প্রতি লিটার সমাধান এবং পিপিসি ভিত্তিক মর্টার আছে এটা এখনও কম।', '0.1%, প্রসারিত, এখনও 0.1% এরও কম।', 'পিপিসি প্রতি লিটারে ৩ গ্রাম, আর এই প্রসারিততা খুব কমই।', 'মানে, এটা প্রায় লক্ষ্য করা যায় না।', 'আপনি দেখতে পাচ্ছেন যে, নিমজ্জন থেকে শেষ পরিমাপের সময় পর্যন্ত খুব কমই কোন পরিবর্তন ঘটেছে।', 'এটা সম্পন্ন হয়েছে।', 'তাহলে এটি কিভাবে সিস্টেমে তৈরি হচ্ছে এমন ইট্রিংটাইটের মধ্যে অনুবাদ করে।', 'এখন এক্স-রে বিকৃতি করা হয়েছে মাত্র স্ফটিকের মাত্রা।', 'স্তর এবং স্ফটিক স্তরগুলির মধ্যে ইট্রিংটাইটের পরিমাণও নির্ধারিত হয়েছিল।', 'এখানে আবারও এই সারিতে এট্রিংটাইটের পরিমাণ দেওয়া হয়েছে।', 'আপনি দেখতে পারেন যে, এরট্রিংটাইটের পরিমাণ ক্রমাগত বৃদ্ধি পাচ্ছে।', 'এক্সপোজার সময় 9 সপ্তাহ থেকে 25 পর্যন্ত বৃদ্ধি পায়।', 'তাই আমরা কিছু একটা করে দেখলাম, এর মধ্যে এরট্রিংটাইট ধারণার পরিমাণ নির্ধারণ করলাম।', 'এক্স-রে বিকৃতি থেকে।', 'এটা ছিল শুধুমাত্র শতাংশ সব স্ফটিক উপাদান যে আসলে উপস্থিত ছিল। বনাম।', 'এবং আপনি দেখতে পারেন যে এটি একটি বেশ সুনির্দিষ্ট সম্পর্ক।', 'সুতরাং এই হল একটি সেট পয়েন্ট যা আমরা মধ্যবর্তী রিডিং থেকে নেওয়া হয়েছে যে ছিল।', 'এই প্রক্রিয়াতে নেওয়া হয়েছে।', 'সুতরাং এটা স্পষ্টভাবে দেখায় যে কিছু প্রমাণ আছে একটি অবিচ্ছিন্ন নিমজ্জন অধ্যয়ন।', 'এই সিস্টেমে আসলে কতটুকু ইট্রিংটাইট তৈরি হচ্ছে তার উপর নির্ভর করে।', 'কিন্তু আবারও এটা বাস্তবে রূপান্তরিত হবে কিনা তা নির্ভর করে বর্তমান পরিস্থিতির উপর।', 'আমরা এমন একটি পরিবেশে আছি যেখানে পিএইচ সবসময় উচ্চ।', 'অথবা আমরা এমন একটি পরিবেশে আছি যেখানে পিএইচ কম থাকে অন্যান্য রূপের এট্রিংটাইট।', 'যখন ইট্রিংটাইট আসলে অন্যান্য পণ্যগুলিতে বিভাজিত হতে পারে।', 'হয়তো এটি বাস্তবে এট্রিংটাইটের সাথে যুক্ত প্রসারের মাত্রা সৃষ্টি করছে না।', 'অবশ্যই, আমরা প্রকৌশলীরা সবসময় কিছু মডেল দেখতে পছন্দ করি, হয় লিনিয়ার বা স্কোয়ার্যাটিক বা।', 'তথ্যগুলোতে কিছু একটা ফিট করা হয়েছে।', 'সুতরাং এটা শুধু সেই প্রয়োজনীয়তা পূরণ করার জন্য।', 'সুতরাং আপনি দেখতে পাচ্ছেন এখানে 50 গ্রাম প্রতি লিটার সমাধানের সাথে OPC মর্টার আপনাকে একটি খুব।', 'উচ্চ স্তরের সম্প্রসারণ এবং আবার যদি আপনি একটি quadratic ধরনের মধ্যে এটি মাপ।', 'আপনি ক্রমাগত, ক্রমাগত ক', 'একইভাবে 3 গ্রাম প্রতি লিটার সমাধান আবার ফিক্সচার সঙ্গে বেশ ভাল।', 'কিন্তু তারপর আবার কি এই সম্পর্ক আপনাকে এটি দিকে নিয়ে যেতে পারে কিছু পরিমাণে সাহায্য করতে পারে।', 'প্রসারিত হওয়ার সময় যখন একটি নির্দিষ্ট সমালোচনামূলক মান অতিক্রম করবে তখন ভবিষ্যদ্বাণী করতে হবে।', 'যদিও এই সমালোচনামূলক মানটি ASTM C1012 এ 0.1% হিসাবে উল্লেখ করা হয়েছে। আপনি এটির উপর ভিত্তি করে সিদ্ধান্ত নিতে পারেন।', 'আপনার সাইটে প্রচলিত শর্তের ধরন আপনি কি চান যে সমালোচনামূলক সম্প্রসারণ?', 'হতে হবে।', 'সুতরাং এর ভিত্তিতে আপনি পরীক্ষার উপযুক্তভাবে পরিবর্তন করতে পারেন এবং ব্যাখ্যা করার একটি ভিন্ন উপায় প্রস্তাব।', 'তথ্য।', 'এখন এই ক্ষেত্রে কোনও সংকোচন ঘটছে না।', 'সুতরাং এই ক্ষেত্রে সংকোচন সম্পূর্ণরূপে এড়ানো হয়, কারণ আপনার নমুনা ক্রমাগত ভিতরে।', 'সালফ্যাট সমাধান।', 'সুতরাং এই ক্ষেত্রে শুকানো ও ভিজানো হয় না।', 'সুতরাং যখন আপনি শুকানো এবং ভিজানো নমুনা নির্দিষ্ট সময়ের জন্য সমাধান ভিতরে থাকে।', 'তারপর আপনি এটি একটি শুকানোর পরিবেশে আছে এবং সিস্টেমে ফিরে রাখা।', 'সুতরাং এটি একটি নেট দৈর্ঘ্যের পরিবর্তন সৃষ্টি করতে পারে যা সংক্ষিপ্ততার দিকেও যেতে পারে।', 'অবশ্যই, স্যালফেটের বিরুদ্ধে আপনার মর্টার বা কংক্রিট রক্ষা করার বিভিন্ন উপায় সম্পর্কে কথা বলা।', "প্রথম এবং সর্বাগ্রে হ'ল কম সি 3 এস এম ব্যবহার করা হয়, কারণ আবার আমরা খুব বেশি দেখেছি।", 'স্পষ্টভাবে সম্প্রসারণ এবং ettringite গঠন মধ্যে সংযোগ, কিন্তু কম C3S mns পরিবর্তন।', 'রসায়ন এমনভাবে যে প্রাথমিক ইট্রিংটাইট যা জলীয়করণ প্রক্রিয়া শুরুতে গঠন হয়।', 'সারা সময় স্থিতিশীল থাকে।', 'এটি সোলফ্যাটগুলির অন্যান্য রূপান্তর করে না, যেমন মনোসোলফ্যাট যা প্রবণতা।', 'যখন বাইরের সালফ্যাটগুলি কংক্রিটে প্রবেশ করে তখন এটিট্রিংটাইটে রূপান্তরিত হয়।', 'তাই কম সি৩এস এমএন সালফেট প্রতিরোধী সিমেন্টের ভিত্তি গঠন করে।', 'আমরা এটাকে এসআরসি বা সালফ্যাট প্রতিরোধী সিমেন্ট বলি।', 'এখন এটি সিমেন্ট আছে যে কম C3S এবং পয়েন্ট থেকে উপযোগী।', 'জলায়নের সময় আপনার ক্যালসিয়াম হাইড্রক্সাইড উৎপাদন।', 'আপনি খুব ভাল জানেন যে C3S এর 1 মোল তুলনায় 3 গুণ বেশি ক্যালসিয়াম হাইড্রক্সাইড উত্পাদন করে।', 'সি২এস-এ।', 'সুতরাং যদি আপনার ক্যালসিয়াম হাইড্রক্সাইড বেশি থাকে তাহলে গিলাস তৈরির প্রবণতা থাকে। কারণ।', 'যখন বহিরাগত সালফেটগুলি ক্যালসিয়াম হাইড্রক্সাইডের সাথে বিক্রিয়া করে আপনি জিপস গঠন করেন।', 'সুতরাং জিপস গঠনের হ্রাসও কংক্রিটের প্রতিরোধ ক্ষমতা উন্নত করতে সাহায্য পারে।', 'অথবা স্যালফেট আক্রমণ করার জন্য মর্টার।', 'উচ্চ আলুমিনিয়াম সিমেন্ট এবং সুপার সালফ্যাট আসলে ব্যাপকভাবে ব্যবহৃত হয় না।', 'আজকে আমরা যে অন্যান্য সমস্যার কথা বলেছি, সেগুলোর কারণে তারা।', 'জলযুক্ত ফ্যাজগুলির স্থিতিশীলতা।', 'এখন সালফেট এক্সপোজার ক্ষেত্রে এই সিমেন্ট উভয় খুব ভাল কাজ করে, কারণ আবার সেখানে।', 'এই সিস্টেমে কোন দেরী-এট্রিংটাইট গঠন ঘটে না।', 'এখন অবশ্যই আমরা মূলত 2 প্রধান দিক বাকি আছে যে সম্ভবত অধিকাংশ অংশ গঠন করবে।', 'আমরা যখন স্থায়িত্বের সমস্যা নিয়ে কথা বলি, তখন সুরক্ষা ব্যবস্থা।', 'প্রথমটি হলো পোজোলানিক উপাদান এবং খনিজ মাটির মিশ্রণ ব্যবহার করা।', 'এখন এটি বেশিরভাগ ক্ষেত্রে উপকারী হতে পারে, কারণ ক্যালসিয়ামের পরিমাণ হ্রাস করে।', 'সিস্টেমে থাকা হাইড্রোক্সাইড।', 'তাই কম জিপস গঠন হচ্ছে।', 'যদি কম জিপস গঠন হয় তাহলে অবশ্যই বিদ্যমান।', 'monosulphate এবং আলুমিন্যাট থেকে ettringite কারণ আমরা আগে আলোচনা জিপস গঠন ঘটে।', 'এই প্রক্রিয়ায় প্রথম পদক্ষেপ হিসেবে কাজ করতে হবে।', 'সুতরাং আপনি যদি সেই পদক্ষেপকে সীমাবদ্ধ করার চেষ্টা করেন তবে পরবর্তী পদক্ষেপটি স্বয়ংক্রিয়ভাবে ঘটবে না।', 'সুতরাং আপনার কাছে কম জিপস রয়েছে যার অর্থ সোডিয়াম সালফেটের জন্য ভাল।', 'এখন যখন আপনার সিস্টেমে কম ক্যালসিয়াম হাইড্রক্সাইড থাকে তখন কি হয়?', 'একটি অ্যাসিডিক প্রক্রিয়া যা ম্যাগনেসিয়াম সালফ্যাট দ্বারা সৃষ্ট হয়।', 'তাহলে কি হবে?', 'সুতরাং খনিজ মিশ্রণ সঙ্গে কংক্রিট যা কম পোর্টল্যান্ডাইট ধারণকারী কিভাবে তারা।', 'ম্যাগনেসিয়াম সালফেট সমাধানের মুখোমুখি।', 'ওপিসির তুলনায় তারা ভালো হবে কি খারাপ?', 'তারা আরও খারাপ হবে।', 'ম্যাগনেসিয়াম সালফেটের ক্ষেত্রে, ভিত্তিক যে কোনও আক্রমণ যা অ্যাসিডিক উত্পাদন করে।', 'সিস্টেমের শর্তাবলী।', 'সুতরাং SCM এর প্রতিরোধের দিক থেকে খুব খারাপ হবে।', 'অবশ্যই আমরা এখানে শুধু রাসায়নিক প্রক্রিয়া নিয়ে আলোচনা করছি।', 'আমরা আসলে সালফ্যাট অনুপ্রবেশের শারীরিক প্রক্রিয়াটির কথা বলছি না, যা নির্দেশিত।', 'সিস্টেমের পারমিটিলিটি দ্বারা।', 'এখন যখন আমরা SCM ব্যবহার করি, বাস্তব কংক্রিট নমুনা ক্ষেত্রের যা সালফ্যাট সংস্পর্শে হয়।', 'সমাধানগুলি ভিতরে সালফ্যাট সমাধানের অনুপ্রবেশের বিরুদ্ধে ব্যাপকভাবে প্রতিরোধের প্রবণতা রাখে।', 'এখন রাসায়নিকভাবে খনিজ মিশ্রণ ভিত্তিক কংক্রিটের মধ্যে ক্যালসিয়াম হাইড্রক্সাইডের অনুপস্থিতি হতে পারে।', 'ম্যাগনেসিয়াম সালফেট আক্রমণের ক্ষেত্রে একটি নেতিবাচক দিক।', 'কিন্তু আক্রমণ সমাধানের শারীরিক অনুপ্রবেশের ক্ষেত্রে যেটা ঘটছে তা হচ্ছে', 'সিস্টেমের কম পারমিটালতার কারণে এটি ব্যাপকভাবে সীমাবদ্ধ করা যেতে পারে।', 'কিন্তু যদি আপনি রাসায়নিক গবেষণায় দেখুন যা সালফেট আক্রমণের ক্ষেত্রে করা হয়।', 'ম্যাগনেসিয়াম সালফ্যাট সঙ্গে আপনি সবচেয়ে প্রায়ই দেখতে পাবেন যে কংক্রিটের কার্যকারিতা।', 'খনিজ additives খুব ভাল নয় এবং যে আমরা পরে অ্যাসিড আক্রমণ দেখতে হবে কিছু।', 'গবেষণাও।', 'কিন্তু অবশ্যই সবচেয়ে গুরুত্বপূর্ণ বৈশিষ্ট্য যে আমরা এখনও চিন্তা করতে হবে।', 'কম জল সিমেন্ট অনুপাত কংক্রিটে এবং কংক্রিট impermeable যে সম্ভবত।', 'sulphate solutions এর অনুপ্রবেশের বিরুদ্ধে আপনি যে প্রতিরক্ষা দিতে পারেন তার প্রথম লাইন।', 'এখন এই কিছু ল্যাবরেটরি প্রমাণ C3A প্রভাব sulphate আক্রমণ এবং।', 'এটা কানাডা থেকে।', 'সুতরাং এখানে আপনি খুব স্পষ্টভাবে দেখতে পারেন যে যদি আপনার সিমেন্টের মধ্যে C3A এর একটি উচ্চ শতাংশ থাকে।', '১২.৩% সি৩এ আপনি এমনকি বুঝতে পারেন না যে এটি কোন ধরণের নমুনা ছিল।', 'এই নমুনাগুলি সম্পূর্ণরূপে সালফ্যাট সমাধানগুলিতে নিমজ্জিত ছিল এবং এখানে আপনি 3.5।', 'C3A উচ্চ ঘনত্বের সংস্পর্শে পরে সিলিন্ড্রিকাল নমুনাগুলি আসলে অক্ষত থাকে।', 'সালফ্যাট সমাধান।', 'সুতরাং C3A সরাসরি কারণ আমরা গবেষণাগারে যে ধরনের গবেষণা নিমজ্জন উপর ভিত্তি করে করা।', 'আপনি স্পষ্টভাবে দেখতে পারেন কম C3A সঙ্গে কংক্রিট এর পারফরম্যান্স তুলনায় অনেক superior।', 'উচ্চতর C3A কংক্রিটের কার্যকারিতা।', 'এখন যখন আপনি বাস্তব সাইট ভিত্তিক গবেষণায় যান, এই ধরনের গবেষণার সেরা উদাহরণ হল', 'মার্কিন যুক্তরাষ্ট্রের পোর্টল্যান্ড সিমেন্ট অ্যাসোসিয়েশন পিসিএ দ্বারা সম্পন্ন।', 'তারা একটি গবেষণা করেছিল, যা কয়েক দশক ধরে চলেছিল, প্রায় ৩০ থেকে ৪০ বছর ধরে।', 'এই কংক্রিট নমুনা সংগ্রহ করা হয়, যা আসলে কলোরাডো মধ্যে নিমজ্জিত ছিল ভিতরে।', 'সালফেট সমৃদ্ধ মাটি এবং এই নমুনা যা Medicine Lake মধ্যে নিমজ্জিত করা হয়।', 'দক্ষিণ ডাকোটাতে সালফেট ধারণকারী।', 'সুতরাং এই আংশিকভাবে নিমজ্জিত করা হয়েছিল, বাস্তবিক প্রভাব আউট আনা কি ঘটতে পারে।', 'যখন তারা সুল্ফ্যাট সমৃদ্ধ মাটিতে থাকে, তখন কংক্রিটের উপর।', 'মজার বিষয় হল, তাদের গবেষণায় খুব স্পষ্টভাবে দেখা গেছে যে জল সিমেন্টের সাথে কোন কংক্রিট।', 'এই এক্সপোজারে ক্ষতিগ্রস্ত হওয়ার হার 0.45 এর বেশি ছিল।', 'সুতরাং এই বাস্তবসম্মত এক্সপোজার ছিল সালফ্যাট সমাধান খুব বেশি ঘন না এটা ছিল।', 'আসলে যা পাওয়া গেছে।', 'কংক্রিট নমুনা খুব ছোট নয়, তারা বেশ বড় সিলিন্ডার ছিল এবং পরে।', '7 বছর এক্সপোজার তারা এই সিদ্ধান্তে এসেছিলেন যে কোন।', '0.45 জল সিমেন্ট অনুপাত ক্ষতিগ্রস্ত হয়েছে।', 'এটা খুবই আকর্ষণীয় যে দেখাতে 0.45 পর্যন্ত সীমিত জল সিমেন্ট অনুপাত।', 'সালফ্যাট সমৃদ্ধ পরিবেশের ক্ষেত্রে এবং এই 0.45 কোডাল অধিকাংশ প্রতিফলিত হয়।', 'স্পেসিফিকেশনও।', 'কংক্রিটের সুরক্ষা সংক্রান্ত প্রথম এবং সর্বাগ্রে বিষয় হল।', 'স্পেসিফিকেশনে নির্ধারিত হয় জল সিমেন্ট অনুপাত কম 0.45 হয়।', 'এবং আবারও এই একই তথ্যটি পরে ক্যালিফোর্নিয়ার বিশ্ববিদ্যালয়ের গবেষকরা বিশ্লেষণ করেছিলেন।', 'বার্কলে পরে এই তথ্য অন্যভাবে উপস্থাপন করেন।', 'জল থেকে সিমেন্ট অনুপাত এবং তারা কি ছিল?', 'কংক্রিট দেখাতে সক্ষম হয় যে 40 বছর পরেও নিরাপদ ছিল এখনও।', 'সিমেন্টের সি 3 এ ধারণার নির্বিশেষে নিরাপদ ছিল এই সমস্ত কংক্রিটের পানি ছিল।', 'সিমেন্টের অনুপাত 0.45 এর কম।', 'সুতরাং যদি সিমেন্টের উচ্চ C3A থাকে, পানি অনুপাত।', '0.45 এর নিচে রাখা হয়েছে, পারফরম্যান্স এখনও খুব ভালো ছিল।', 'তাই ৪০ বছরেরও বেশি সময় ধরে বেঁচে থাকা সব কংক্রিটই ছিল জল সিমেন্টের।', 'অনুপাত 0.45 এর চেয়ে কম।', 'এবং আবার যদি আপনি অধিকাংশ স্পেসিফিকেশন তাকান সিমেন্ট সীমা মূলত কথা বলতে আরো।', 'সিস্টেমে উপস্থিত C3A এর পরিমাণ যেখানে টাইপ 2 সিমেন্ট সাধারণত মাঝারি।', 'সালফ্যাট প্রতিরোধী সিমেন্ট।', 'সুতরাং তাদের মধ্যে প্রায় ৮% C3A আছে।', 'টাইপ 3 সাধারণত উচ্চ C3A ধারণকারী হবে কারণ আমরা দ্রুত হার্ডিং বৈশিষ্ট্য প্রয়োজন।', 'এই সিমেন্ট থেকে কিন্তু টাইপ 5 যা সালফ্যাট প্রতিরোধী আমি কথা বলছি।', 'এএসটিএম স্পেসিফিকেশন সম্পর্কে এখানে।', 'টাইপ 5 সালফেট প্রতিরোধী সিমেন্ট এবং সেখানে C3A ধারণক্ষমতা কম দ্বারা নিয়ন্ত্রিত করা উচিত।', '৫ শতাংশের চেয়ে বেশি।', 'কিন্তু সমস্যা হল টাইপ ৫ সিমেন্টের অধিকাংশই সালফেটের প্রতিরোধের জন্য পরীক্ষা করা হয় না, যদি আমরা অনুমান করি যে।', 'আপনার C3A সবসময় 5% এর কম।', 'মানুষ মনে করে যে যখন আপনি একটি সালফেট প্রতিরোধী সিমেন্ট ব্যবহার, স্বয়ংক্রিয়ভাবে রক্ষা পেতে।', 'সালফ্যাট আক্রমণ থেকে।', 'এখন কেন এটা একটা সমস্যা।', 'কেন আমরা সালফেট প্রতিরোধের জন্য পরীক্ষা চালাতে হবে, এমনকি যদি প্রতিরোধী আছে।', 'সিমেন্ট।', 'কারণ আমরা যদি মিশ্রণ নকশা পরিষ্কারভাবে প্রতিষ্ঠা না করি, তবে আমরা।', 'সিমেন্টের পানি অনুপাত এটা একটা ব্যাপার।', 'দ্বিতীয়ত, আমরা জানি যে সিস্টেমের সাথে সম্পর্কিত অন্যান্য ধরনের ক্ষতিও ঘটছে।', 'জিপস গঠন এবং অন্যান্য দিকের সাথে সম্পর্কিত শারীরিক লবণের আক্রমণ।', 'প্রকৃত কংক্রিট নমুনাগুলির ব্যর্থতার প্রধান প্রক্রিয়া হতে পারে না।', 'একটি পরীক্ষাগার গবেষণায় যেখানে আমরা অবিচ্ছিন্ন নিমজ্জন করি, ইট্রিংটাইটের গঠন করতে পারি।', 'স্পষ্টভাবে সম্প্রসারণ সঙ্গে সরাসরি যুক্ত হয়, কিন্তু বাস্তবসম্মত অবস্থায় ettringite হতে পারে।', 'প্রথমত, এটি সালফ্যাট অন্যান্য ফর্মগুলিতে রূপান্তরিত হতে পারে এবং না।', 'আপনার কাঠামোর ক্ষতির জন্য প্রকৃতপক্ষে প্রধান যন্ত্র।', 'তাই আপনি টাইপ 5 সিমেন্ট ব্যবহার করার সময় আমরা sulphate সম্পর্কিত পরীক্ষা এবং নিশ্চিত করা উচিত।', 'আমরা কি সত্যিই যে পারফরম্যান্স চান পেয়ে যা কেন পরীক্ষা মান?', 'সালফ্যাটগুলির জন্য যা ASTM C1012 এর উপর ভিত্তি করে, একটি অবিচ্ছিন্ন নিমজ্জন করে প্রশ্নবিদ্ধ।', 'অনেক গবেষকের দ্বারা।', 'এটা আসলে সত্যিকার অর্থে কথা বলতে সালফ্যাট আক্রমণ প্রকৃত প্রতিরোধের।', 'আমরা এই সিস্টেমের পারম্যাবিলিটির প্রভাবগুলিকে সত্যই অন্তর্ভুক্ত করছি না বলেই কংক্রিটকে করছি।', 'যাইহোক, এটা আলোচনা এর বাইরে যে আমরা এখানে থাকতে চাই শুধু চেয়েছিলেন।', 'এএসটিএম স্ট্যান্ডার্ডগুলিতে নির্ধারিত বিভিন্ন পরীক্ষার পদ্ধতি পুনঃসংক্ষেপিত করা।', 'সবচেয়ে বেশি ব্যবহৃত হয় ASTM C1012, যেখানে আপনি মর্টার বার আছে যা।', '5% সোডিয়াম সালফ্যাট বা ম্যাগনেসিয়াম তারা এমনকি বলে আপনি একটি মিশ্রণ ব্যবহার করতে পারেন।', 'সোডিয়াম ও ম্যাগনেসিয়াম সালফেট।', 'এখন এই ধরনের প্রক্রিয়া বা প্রতিক্রিয়া যা আপনি থেকে পেতে হবে।']
2024-02-28 12:19:49,256 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['আজ আমরা সালফেট আক্রমণ নিয়ে আলোচনা শুরু করব।', 'গত ক্লাসে আমরা দেখেছি কিভাবে সালফ্যাট সিমেন্টেশন সিস্টেমে প্রবেশ করে।', 'জলযুক্ত সিমেন্ট, ফ্যাজ এবং পৃষ্ঠ থেকে শুরু করে বিভিন্ন ধরণের যৌগ গঠন করে।', 'ভেতরে।', 'আসুন আমরা একটু আলোচনা করি যে, ইট্রিংটাইট গঠন সম্প্রসারণের কারণ হয় কিনা।', 'অবশ্যই আমরা খুব ভালোভাবে জানি যে, ইট্রিংটাইটের এমন একটি গঠন রয়েছে যা বিস্তার প্রবণতা।', 'মূলত আর্দ্রতা শোষণ করে এবং এই সম্প্রসারণে আশেপাশের চাপ সৃষ্টি করতে পারে।', 'পরিবেশ যা ফাটল সৃষ্টি করে, ঠিক আছে।', 'কিন্তু সরাসরি প্রমাণ কি এবং কোন শর্তে ইট্রিংটাইট।', 'কংক্রিট সিস্টেমের সম্প্রসারণের দিকে পরিচালিত করে।', 'আমরা জানি যে প্রাথমিক ইট্রিংটাইট হল ইট্রিংটাইট, যা আসলে প্রক্রিয়াটির খুব শুরুতে গঠন হয়।', 'নিয়মিত সিমেন্ট হাইড্রেশন, যখন ফ্যাস যেমন আলুমিন্যাট সঙ্গে প্রতিক্রিয়া।', 'সিমেন্টের মধ্যে সালফ্যাট যোগ করা হয়, আমরা প্রাথমিক ettringite গঠন এবং এই ettringite।', 'পরে এটি একক sulfate রূপান্তরিত হয়, কারণ সিস্টেমে আলুমিন্যাট অতিরিক্ত উপস্থিত হয়।', 'এখন, দেরী প্রাথমিক ইট্রিংটাইট গঠনেরও প্রমাণ আছে এবং এটি সিমেন্টের মধ্যে ঘটে।', 'যেখানে সুলফেট বেশি পাওয়া যায়।', 'এর মানে হল যে আপনি বেশ দীর্ঘ সময়ের জন্য ইট্রিংটাইট জমা রাখেন।', 'ঠিক আছে, আছে।', 'এখন এটা ঘটে সালফেটের অভ্যন্তরীণ উৎসগুলির কারণে।', 'বাহ্যিক ইট্রিংটাইট যখন আমরা আছে sulphates পরিবেশ থেকে আসা কারণে।', 'বাইরের থেকে সালফ্যাট প্রবেশ।', 'এর পাশাপাশি আমরা বিলম্বিত ইট্রিংটাইট গঠনকে এমন একটি ঘটনাও বলতে পারি যা।', 'অভ্যন্তরীণভাবে নিষ্ক্রিয় করা ইট্রিংটাইটের গঠন যা বয়সের শেষের দিকে বৃদ্ধি পায়।', 'এর অর্থ হল যে কিছু কারণে অ্যাট্রিংটাইট প্রাথমিক পর্যায়ে গঠিত হয়নি। এবং।', 'কিছু অন্যান্য কারণের সংমিশ্রণ এটিকে শক্ত অবস্থায় গঠিত করেছে।', 'স্পষ্টতই যখন একটি বিস্তৃত উপাদান শক্ত কংক্রিটের ভিতরে গঠিত হয় যে যখন।', 'আপনি এর কারণে বড় ক্ষতিগ্রস্ত হন এবং এটিকে ডিইএফ বা বিলম্বিত ইট্রিংটাইট নামেও পরিচিত।', 'গঠন, ঠিক আছে।', 'এটি একটি সাধারণ শব্দ যা বিলম্বিত ইট্রিংটাইট গঠন জন্য দেওয়া হয়।', 'সাধারণভাবে বলতে গেলে, যে কোন সালফ্যাট আক্রমণ প্রক্রিয়া শেষের দিকে ettringite গঠনের পরিচালিত করে।', 'শক্ত পর্যায়ে।', 'সুতরাং, এট্রিংটাইটের যেকোনো গঠনই একটি মাধ্যমিক এট্রিংটাইট গঠন।', 'এর মানে হল আমরা এটি প্রাথমিক ettringite থেকে আলাদা করছি যা নিয়মিত কারণে গঠন।', 'সিমেন্টের হাইড্রেটেশন, ঠিক আছে।', 'এখন যদি আপনি ক্রিস্টালিন উপাদানগুলির ধরনটি দেখুন যা উত্পাদনের কারণে গঠিত হয়।', 'ইট্রিংটাইটের, ইট্রিংটাইট সুই আকারে গঠিত হয়, ঠিক আছে।', 'সুতরাং, ইট্রিংটাইট একটি দীর্ঘ মাত্রা এবং মূলত কি ঘটে।', 'ইট্রিংটাইটের দৈর্ঘ্য থেকে বেধের অনুপাতটি আশেপাশের পরিবেশের পিএইচ-এর উপর নির্ভর করে।', 'এখন দেখা যাচ্ছে যে যখন আপনি খুব উচ্চ pH স্তর আছে, আমরা আসলে গঠনের।', 'ইট্রিংটাইটের দীর্ঘ সুই।', 'আমরা ছোট স্তম্ভযুক্ত ইট্রিংটাইট স্ফটিক গঠন করছি, ঠিক আছে।', 'কিন্তু এর মাঝখানে, ১২ থেকে ১০ মধ্যে আমরা আসলে ইট্রিংটাইট সুই গঠন করছি।', 'যার দৈর্ঘ্য অনেক বেশি, ঠিক আছে।', 'সুতরাং যা ঘটবে তা হল সিমেন্ট হাইড্রেশন এর প্রথম পর্যায়ে, আপনি আসলে গঠন।', 'এই মাইক্রোক্রিস্টালিন ইট্রিংটাইট যেখানে দৈর্ঘ্য আসলে বেশ ছোট, ঠিক আছে এবং দৈর্ঘ্য।', 'ব্যাসার্ধ বা বরং দৈর্ঘ্য থেকে বেধ অনুপাত বেশ ছোট।', 'কিন্তু যখন ইট্রিংটাইট প্রসারিত হয়, আপনি একটি দৃশ্যকল্প সম্পর্কে চিন্তা করতে পারেন বাহ্যিক আছে।', 'সালফ্যাট আক্রমণ, একটি ettringite প্রসারণ যেখানে আর্দ্রতা নিমজ্জিত করা হয় এবং আসলে।', 'কস্টাল অভ্যাস দেখাতে শুরু করুন, যা উচ্চ দৈর্ঘ্যের দ্বারা দেখানো হয়, ঠিক আছে।', 'সুতরাং উচ্চ pH স্তরে মাইক্রোক্রিস্টালিন ইট্রিংটাইট তাজা কংক্রিটে দেখা যায়, যা আমরা সাধারণত।', 'তাড়াতাড়ি হাইড্রেটেশন আশা করি, ঠিক আছে।', 'এখন গবেষকদের মতে, এবং এটা ভালভাবে নথিভুক্ত করা হয়েছে যে মাইক্রোক্রিস্টালিন।', 'জল শোষণ ক্ষমতা সঙ্গে ettringite উচ্চ প্রসারিত হতে পারে, ঠিক আছে এবং এই সাধারণত।', 'যখন pH শর্তগুলো বেশ উচ্চ হয়, তখন ঘটে।', 'সুতরাং যদি আপনি সালফ্যাট এক্সপোজার আসে যেখানে পিএইচ হ্রাস করা হয়, উদাহরণস্বরূপ যখন আপনি।', 'যদি পরিবেশে pH স্তর কম থাকে, তাহলে দেখা যায় যে।', 'এই ইট্রিংটাইটটি খুব বেশি শোষণযোগ্য নয়। এবং যখন ইট্রিংটাইটটি।', 'জল শোষণ বা নিমজ্জন করে না, এটি খুব উচ্চ প্রসারিত হতে পারে না।', 'সুতরাং, ইট্রিংটাইট গঠন শুধুমাত্র সেই অবস্থার মধ্যে প্রসারিত হতে পারে। যেখানে।', 'বাইরের pHও যথেষ্ট বেশি।', 'এখন এটা অনেকটা ব্যাখ্যা করে কেন আমরা আসলে সম্প্রসারণ ঘটছে না।', 'মাঠ ভিত্তিক নমুনা।', 'ল্যাব নমুনাগুলিতে, আমরা একটি খুব উচ্চ স্তরের সম্প্রসারণ দেখতে পাই, কিন্তু একই সময়ে প্রকৃত।', 'মাঠে পারফরম্যান্স যা আক্রমণাত্মক বাহিনীর ক্রমাগত পুনর্নির্মাণের সাথে থাকে।', 'সমাধান কারণ আপনি ভূগর্ভস্থ জল আছে যা অবিচ্ছিন্নভাবে আক্রমণকারী রিচার্জ।', 'সমাধান।', 'এর পাশাপাশি, আমাদের অন্যান্য আইওনিক প্রজাতির উপস্থিতি রয়েছে, যা ধ্বংস করতে পারে।', 'আশেপাশের দ্রাবকের pH।', 'এখন যখন এটি ঘটে, তখন বাস্তবে গঠিত হচ্ছে এমন ইট্রিংটাইট শেষ পর্যন্ত হতে পারে না যেমন।', 'একটি নিয়মিত নিমজ্জন অবস্থায় সিস্টেমের ভিতরে যা গঠন করে তার মতো প্রতিক্রিয়াশীল বা বরং বিস্তৃত।', 'তাহলে কি হবে যখন আপনি একটি কাপ নিন এবং ভিতরে সালফেট সমাধান রাখুন কংক্রিট রাখুন।', 'ভেতরে নমুনা।', 'সুতরাং বেনিটনের pH খুব বেশি, ঠিক আছে। ১৩।', 'তাহলে যখন আপনি pH 7 বা 8 এর একটি সালফ্যাট সমাধানের ভিতরে এটি রাখেন তখন কী হয়?', 'আপনি কংক্রিট থেকে বাইরে পরিবেশের মধ্যে lime একটি leaching থাকবে।', 'ঠিক আছে এবং বাইরের সমাধানের পিএইচ খুব উচ্চ স্তরে স্থিতিশীল হতে শুরু করে।', 'আমরা কিছু ক্ষেত্রে ১২ এর চেয়ে বড় স্তরে পৌঁছে যাই।', 'সুতরাং এই শর্তে, যে ইট্রিংটাইট আসলে গঠন হচ্ছে তা বিস্তৃত প্রকৃতির।', 'যখন আপনার আশেপাশের দ্রাবকের pH উচ্চ হয়, তখন ইট্রিংটাইট বিস্তৃত হয় এবং এটি হতে পারে।', 'পরীক্ষাগার গবেষণায় সালফেটের আক্রমণের সাথে সাধারণত যুক্ত প্রসারিত।', 'কিন্তু ক্ষেত্রের ক্ষেত্রে আমরা একই ধরনের সম্প্রসারণ দেখতে পাচ্ছি না।', 'এট্রিংটাইটের স্থিতিশীলতাও একটি নির্দিষ্ট স্তরে বিদ্যমান পিএইচ স্তরের উপর নির্ভর করে।', 'পরিবেশ।', 'উদাহরণস্বরূপ, যখন pH খুব বেশি হয় অথবা 9 থেকে 13 এর মধ্যে থাকে।', 'এবং এটি সাধারণত একটি ettringite সমাধান স্থিতিশীলতা পরিসীমা।', 'তাই আবার বিভিন্ন গবেষণায় pH পরিসীমা প্রদান করা হয় যা এট্রিংটাইট।', 'স্থিতিশীল।', 'যখন আশেপাশের অবস্থা অ্যাসিড হয়ে যায়, তখন এই পরিবেশে ইট্রিংটাইট।', 'খুব স্থিতিশীল।', 'সুতরাং, আপনি যদি এইট্রিংটাইটটি ব্যবহার করেন তাহলে আপনার চারপাশের অবস্থার দিকে তাকাতে হবে।', 'স্থিতিশীল হতে হবে।', 'উদাহরণস্বরূপ, একটি অ্যাসিড পরিবেশে, ইট্রিংটাইট আসলে সহজেই রূপান্তরিত হতে পারে।', 'গ্যাস, অ্যালুমিনিয়াম হাইড্রক্সাইড, বিশেষ করে যদি কার্বনেশনও ঘটে, এটি হতে পারে।', 'আসলে, এটি অ্যালুমিনিয়াম হাইড্রক্সাইড এবং জিপসের সাথে ক্যালসিয়াম কার্বনেট ফ্যাজ গঠন করে।', 'সুতরাং, অ্যাসিড পরিবেশে এট্রিংটাইট জিপস এবং অ্যালুমিনিয়াম হাইড্রক্সাইডে রূপান্তরিত হবে।', 'সুতরাং আবার যদি আপনি ক্ষেত্র থেকে প্রমাণ দেখুন, কাঠামো যে সম্পূর্ণরূপে রয়ে গেছে।', 'শুকনো, শক্তকর্ষিত কংক্রিটে কোন এট্রিংটাইট পাওয়া যায়নি।', 'সুতরাং যদি আপনার কোন আর্দ্রতা না থাকে, তাহলে আপনি আসলে ইট্রিংটাইটের গঠন দেখতে পাচ্ছেন না।', 'পরবর্তী পর্যায়ে এবং যখন আপনি বিকল্প শুকনো ভিজানো আছে, কিছু ettringite আছে।', 'যে দেখা যায়, কিন্তু শুকানোর কারণে, আপনি সম্ভবত একটি অবস্থা হবে না যেখানে।', 'ইট্রিংটাইট গঠন প্রসারিত হয়।', 'এখন আমি আপনাদের কিছু সাম্প্রতিক গবেষণামূলক গবেষণায় দেখাবো, যা দেখিয়ে দেবে।', 'ইট্রিংটাইট গঠন ও সম্প্রসারণ।', 'তাই ল্যাব স্টাডিতে আমরা সাধারণত মর্টার প্রিজমিক নমুনা ব্যবহার করে গবেষণা করি যা সাধারণত।', '25 x 285 মিমি এবং এই সব সালফ্যাট সমাধানের ভিতরে সংরক্ষণ করা হয় সম্পূর্ণ।', 'সালফ্যাট সমাধানের ভিতরে নিমজ্জিত এবং পর্যায়ক্রমে নমুনাগুলি সমাধান থেকে সরানো হয়।', 'এবং দৈর্ঘ্যটি এখানে প্রদর্শিত দৈর্ঘ্যের তুলনা ব্যবহার করে পরিমাপ করা হয়।', 'সুতরাং এটি 3 গ্রাম এবং 50 প্রতি লিটার সালফেটে সংরক্ষিত মর্টার দিয়ে প্রস্তুত উপস্থিতি।', 'সমাধান।', 'এই ক্ষেত্রে এটি সোডিয়াম সালফ্যাট ছিল।', 'সুতরাং আমরা আলোচনা করেছি যে, ক্যাশন প্রভাব থেকে কোন মাধ্যমিক প্রক্রিয়া উদ্ভূত হবে না।', 'ম্যাগনেসিয়ামের সাথে, আপনি ক্যাটিও এর প্রভাব আছে, যা বেশ গুরুতর।', 'বিবেচনা করা হবে।', 'সুতরাং আমরা এই প্রকল্পে যা করেছি তা হল পর্যায়ক্রমে দৈর্ঘ্যের পরিবর্তন পর্যবেক্ষণ করছি।', 'এবং আমরা এক্স-রে বিঘ্ন বিশ্লেষণের মাধ্যমে ইট্রিংটাইটের পরিমাণ নির্ধারণ করছিলাম।', 'সুতরাং এখানে আপনি দেখানো হচ্ছে যে বিস্তার বিভিন্ন।', '32 সপ্তাহের এক্সপোজার এবং এই 2 মিশ্রণ, একটি সাধারণ সঙ্গে।', 'পোর্টল্যান্ড সিমেন্ট এবং M2 পজোলান যার অর্থ যা 30।', 'কার্বন উড়ন্ত ধুলো।', 'সুতরাং আপনি দেখতে পারেন যে 32 সপ্তাহ পরে শুধুমাত্র নমুনা উল্লেখযোগ্য প্রসারিত দেখানো।', 'উচ্চ ঘনত্বের মধ্যে সংরক্ষণ করা OPC কংক্রিট বা মর্টার নমুনা কিনা।', 'সালফ্যাট সমাধান।', '3 গ্রাম প্রতি লিটার সমাধান আপনি সত্যিই খুব বেশি প্রসারিত ছিল না যদিও।', 'স্টোরেজ এর পরবর্তী অংশে কিছু বৃদ্ধি প্রবণতা দেখা গেছে।', 'এখন আপনি যখন ডায়নামিক মডুলাসের পরিবর্তনটি দেখেন, এখানে মডুলাস পরিমাপ করা হয়েছে।', 'আসলে, উপাদানটির রেজোনেন্স ফ্রিকোয়েন্সি নিশ্চিত করে।', 'তাই আমরা প্রিজমিক নমুনা নিয়ে রেজোনেন্স ফ্রিকোয়েন্সিটা দেখলাম।', 'সুতরাং, কংক্রিটে যা ঘটেছে তা হল কংক্রিটের অবনতি ঘটে যখন রেজোনেন্স ফ্রিকোয়েন্সি ঘটে।', 'এছাড়াও হ্রাস পাবে।', 'সুতরাং এটি একটি অ-ধ্বংসাত্মক পরীক্ষা ব্যবহার করে পরোক্ষভাবে পরিমাপ করা গতিশীল মডিউল।', 'এখানে আপনি দেখতে পারেন যে উচ্চ ঘনত্বের মধ্যে সংরক্ষিত মর্টার নমুনা।', 'সালফেট সমাধান, সাধারণ পোর্টল্যান্ড সিমেন্ট ভিত্তিক মর্টার আপনি দেখতে পারেন যে গতিশীল।', '32 সপ্তাহের এক্সপোজার সময় মডিউল উল্লেখযোগ্যভাবে হ্রাস পেয়েছে, যখন অন্যান্য সমস্ত নমুনা।', 'কোন হ্রাস ছাড়া একটি মোটামুটি ধারাবাহিক গতিশীল মডিউল আছে বলে মনে হয়।', 'এখন আসুন আমরা এই পরিমাণের দিকে তাকাই।', 'এটি আবারও একটি চিত্রের পরিবর্তে টেবিল হিসাবে উপস্থাপিত শতাংশ প্রসারিত।', 'এখন আপনি যদি দেখতে পারেন যে, ওপিসি 50 গ্রাম প্রতি লিটারে সম্প্রসারণ প্রায় 3% পর্যন্ত ছিল।', 'এটা খুব উচ্চ স্তরের সম্প্রসারণ।', 'আপনি যখন এই এএসটিএম পরীক্ষা করেন, তখন এটি সি 1012 অনুযায়ী হয়, পরীক্ষার পদ্ধতিটি করেন।', 'প্রচলিত মর্টারগুলির ক্ষেত্রে, যদি আপনার এক্সপোজার ৬ মাসের মধ্যে 0.1% অতিক্রম করে।', 'আপনি যে মর্টার বা নির্দিষ্ট সংমিশ্রণ বন্ধনী এবং হিসাবে অসহিষ্ণু উল্লেখ।', 'সালফ্যাট সমাধান।', 'এটা কেবল একটি অবাঞ্ছিত পদ্ধতি।', 'এটা আসলে বাস্তব আচরণ প্রকাশ করে না যে আপনি কংক্রিট এবং সালফ্যাট থেকে আশা করতে পারেন।', 'সমৃদ্ধ পরিবেশ, কিন্তু এই ধারাবাহিক নিমজ্জন পরীক্ষা যদি আপনার নমুনা শেষ পর্যন্ত একটি সম্প্রসারণ আছে।', '৬ মাসের মধ্যে 0.1% এর বেশি হলে এটি সিমেন্টের প্রতিরোধী নয় বলে মনে করা হয়।', 'সালফ্যাট আক্রমণ।', 'তবে এই ক্ষেত্রে মাত্র ৩২ সপ্তাহের এক্সপোজারের মধ্যে ৩% পর্যন্ত প্রসারিততা রেকর্ড করা হয়েছে।', 'সুতরাং, প্রায় ৮ মাস, ৭ থেকে মাস এর মধ্যে আপনার এক্সপোজার ছিল। ৩।।', 'যদি আপনি 3 গ্রাম প্রতি লিটারে OPC দেখেন, তাহলে এটি এখনও 0.1% চিহ্নের মধ্যে পৌঁছায়নি।', 'যখন আপনি 50 গ্রাম প্রতি লিটার সমাধান এবং পিপিসি ভিত্তিক মর্টার আছে এটা এখনও কম।', '0.1%, প্রসারিত, এখনও 0.1% এরও কম।', 'পিপিসি প্রতি লিটারে ৩ গ্রাম, আর এই প্রসারিততা খুব কমই।', 'মানে, এটা প্রায় লক্ষ্য করা যায় না।', 'আপনি দেখতে পাচ্ছেন যে, নিমজ্জন থেকে শেষ পরিমাপের সময় পর্যন্ত খুব কমই কোন পরিবর্তন ঘটেছে।', 'এটা সম্পন্ন হয়েছে।', 'তাহলে এটি কিভাবে সিস্টেমে তৈরি হচ্ছে এমন ইট্রিংটাইটের মধ্যে অনুবাদ করে।', 'এখন এক্স-রে বিকৃতি করা হয়েছে মাত্র স্ফটিকের মাত্রা।', 'স্তর এবং স্ফটিক স্তরগুলির মধ্যে ইট্রিংটাইটের পরিমাণও নির্ধারিত হয়েছিল।', 'এখানে আবারও এই সারিতে এট্রিংটাইটের পরিমাণ দেওয়া হয়েছে।', 'আপনি দেখতে পারেন যে, এরট্রিংটাইটের পরিমাণ ক্রমাগত বৃদ্ধি পাচ্ছে।', 'এক্সপোজার সময় 9 সপ্তাহ থেকে 25 পর্যন্ত বৃদ্ধি পায়।', 'তাই আমরা কিছু একটা করে দেখলাম, এর মধ্যে এরট্রিংটাইট ধারণার পরিমাণ নির্ধারণ করলাম।', 'এক্স-রে বিকৃতি থেকে।', 'এটা ছিল শুধুমাত্র শতাংশ সব স্ফটিক উপাদান যে আসলে উপস্থিত ছিল। বনাম।', 'এবং আপনি দেখতে পারেন যে এটি একটি বেশ সুনির্দিষ্ট সম্পর্ক।']
2024-02-28 12:20:02,584 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['আজ আমরা সালফেট আক্রমণ নিয়ে আলোচনা শুরু করব।', 'গত ক্লাসে আমরা দেখেছি কিভাবে সালফ্যাট সিমেন্টেশন সিস্টেমে প্রবেশ করে।', 'জলযুক্ত সিমেন্ট, ফ্যাজ এবং পৃষ্ঠ থেকে শুরু করে বিভিন্ন ধরণের যৌগ গঠন করে।', 'ভেতরে।', 'আসুন আমরা একটু আলোচনা করি যে, ইট্রিংটাইট গঠন সম্প্রসারণের কারণ হয় কিনা।', 'অবশ্যই আমরা খুব ভালোভাবে জানি যে, ইট্রিংটাইটের এমন একটি গঠন রয়েছে যা বিস্তার প্রবণতা।', 'মূলত আর্দ্রতা শোষণ করে এবং এই সম্প্রসারণে আশেপাশের চাপ সৃষ্টি করতে পারে।', 'পরিবেশ যা ফাটল সৃষ্টি করে, ঠিক আছে।', 'কিন্তু সরাসরি প্রমাণ কি এবং কোন শর্তে ইট্রিংটাইট।', 'কংক্রিট সিস্টেমের সম্প্রসারণের দিকে পরিচালিত করে।', 'আমরা জানি যে প্রাথমিক ইট্রিংটাইট হল ইট্রিংটাইট, যা আসলে প্রক্রিয়াটির খুব শুরুতে গঠন হয়।', 'নিয়মিত সিমেন্ট হাইড্রেশন, যখন ফ্যাস যেমন আলুমিন্যাট সঙ্গে প্রতিক্রিয়া।', 'সিমেন্টের মধ্যে সালফ্যাট যোগ করা হয়, আমরা প্রাথমিক ettringite গঠন এবং এই ettringite।', 'পরে এটি একক sulfate রূপান্তরিত হয়, কারণ সিস্টেমে আলুমিন্যাট অতিরিক্ত উপস্থিত হয়।', 'এখন, দেরী প্রাথমিক ইট্রিংটাইট গঠনেরও প্রমাণ আছে এবং এটি সিমেন্টের মধ্যে ঘটে।', 'যেখানে সুলফেট বেশি পাওয়া যায়।', 'এর মানে হল যে আপনি বেশ দীর্ঘ সময়ের জন্য ইট্রিংটাইট জমা রাখেন।', 'ঠিক আছে, আছে।', 'এখন এটা ঘটে সালফেটের অভ্যন্তরীণ উৎসগুলির কারণে।', 'বাহ্যিক ইট্রিংটাইট যখন আমরা আছে sulphates পরিবেশ থেকে আসা কারণে।', 'বাইরের থেকে সালফ্যাট প্রবেশ।', 'এর পাশাপাশি আমরা বিলম্বিত ইট্রিংটাইট গঠনকে এমন একটি ঘটনাও বলতে পারি যা।', 'অভ্যন্তরীণভাবে নিষ্ক্রিয় করা ইট্রিংটাইটের গঠন যা বয়সের শেষের দিকে বৃদ্ধি পায়।', 'এর অর্থ হল যে কিছু কারণে অ্যাট্রিংটাইট প্রাথমিক পর্যায়ে গঠিত হয়নি। এবং।', 'কিছু অন্যান্য কারণের সংমিশ্রণ এটিকে শক্ত অবস্থায় গঠিত করেছে।', 'স্পষ্টতই যখন একটি বিস্তৃত উপাদান শক্ত কংক্রিটের ভিতরে গঠিত হয় যে যখন।', 'আপনি এর কারণে বড় ক্ষতিগ্রস্ত হন এবং এটিকে ডিইএফ বা বিলম্বিত ইট্রিংটাইট নামেও পরিচিত।', 'গঠন, ঠিক আছে।', 'এটি একটি সাধারণ শব্দ যা বিলম্বিত ইট্রিংটাইট গঠন জন্য দেওয়া হয়।', 'সাধারণভাবে বলতে গেলে, যে কোন সালফ্যাট আক্রমণ প্রক্রিয়া শেষের দিকে ettringite গঠনের পরিচালিত করে।', 'শক্ত পর্যায়ে।', 'সুতরাং, এট্রিংটাইটের যেকোনো গঠনই একটি মাধ্যমিক এট্রিংটাইট গঠন।', 'এর মানে হল আমরা এটি প্রাথমিক ettringite থেকে আলাদা করছি যা নিয়মিত কারণে গঠন।', 'সিমেন্টের হাইড্রেটেশন, ঠিক আছে।', 'এখন যদি আপনি ক্রিস্টালিন উপাদানগুলির ধরনটি দেখুন যা উত্পাদনের কারণে গঠিত হয়।', 'ইট্রিংটাইটের, ইট্রিংটাইট সুই আকারে গঠিত হয়, ঠিক আছে।', 'সুতরাং, ইট্রিংটাইট একটি দীর্ঘ মাত্রা এবং মূলত কি ঘটে।', 'ইট্রিংটাইটের দৈর্ঘ্য থেকে বেধের অনুপাতটি আশেপাশের পরিবেশের পিএইচ-এর উপর নির্ভর করে।', 'এখন দেখা যাচ্ছে যে যখন আপনি খুব উচ্চ pH স্তর আছে, আমরা আসলে গঠনের।', 'ইট্রিংটাইটের দীর্ঘ সুই।', 'আমরা ছোট স্তম্ভযুক্ত ইট্রিংটাইট স্ফটিক গঠন করছি, ঠিক আছে।', 'কিন্তু এর মাঝখানে, ১২ থেকে ১০ মধ্যে আমরা আসলে ইট্রিংটাইট সুই গঠন করছি।', 'যার দৈর্ঘ্য অনেক বেশি, ঠিক আছে।', 'সুতরাং যা ঘটবে তা হল সিমেন্ট হাইড্রেশন এর প্রথম পর্যায়ে, আপনি আসলে গঠন।', 'এই মাইক্রোক্রিস্টালিন ইট্রিংটাইট যেখানে দৈর্ঘ্য আসলে বেশ ছোট, ঠিক আছে এবং দৈর্ঘ্য।', 'ব্যাসার্ধ বা বরং দৈর্ঘ্য থেকে বেধ অনুপাত বেশ ছোট।', 'কিন্তু যখন ইট্রিংটাইট প্রসারিত হয়, আপনি একটি দৃশ্যকল্প সম্পর্কে চিন্তা করতে পারেন বাহ্যিক আছে।', 'সালফ্যাট আক্রমণ, একটি ettringite প্রসারণ যেখানে আর্দ্রতা নিমজ্জিত করা হয় এবং আসলে।', 'কস্টাল অভ্যাস দেখাতে শুরু করুন, যা উচ্চ দৈর্ঘ্যের দ্বারা দেখানো হয়, ঠিক আছে।', 'সুতরাং উচ্চ pH স্তরে মাইক্রোক্রিস্টালিন ইট্রিংটাইট তাজা কংক্রিটে দেখা যায়, যা আমরা সাধারণত।', 'তাড়াতাড়ি হাইড্রেটেশন আশা করি, ঠিক আছে।', 'এখন গবেষকদের মতে, এবং এটা ভালভাবে নথিভুক্ত করা হয়েছে যে মাইক্রোক্রিস্টালিন।', 'জল শোষণ ক্ষমতা সঙ্গে ettringite উচ্চ প্রসারিত হতে পারে, ঠিক আছে এবং এই সাধারণত।', 'যখন pH শর্তগুলো বেশ উচ্চ হয়, তখন ঘটে।', 'সুতরাং যদি আপনি সালফ্যাট এক্সপোজার আসে যেখানে পিএইচ হ্রাস করা হয়, উদাহরণস্বরূপ যখন আপনি।', 'যদি পরিবেশে pH স্তর কম থাকে, তাহলে দেখা যায় যে।', 'এই ইট্রিংটাইটটি খুব বেশি শোষণযোগ্য নয়। এবং যখন ইট্রিংটাইটটি।', 'জল শোষণ বা নিমজ্জন করে না, এটি খুব উচ্চ প্রসারিত হতে পারে না।', 'সুতরাং, ইট্রিংটাইট গঠন শুধুমাত্র সেই অবস্থার মধ্যে প্রসারিত হতে পারে। যেখানে।', 'বাইরের pHও যথেষ্ট বেশি।', 'এখন এটা অনেকটা ব্যাখ্যা করে কেন আমরা আসলে সম্প্রসারণ ঘটছে না।', 'মাঠ ভিত্তিক নমুনা।', 'ল্যাব নমুনাগুলিতে, আমরা একটি খুব উচ্চ স্তরের সম্প্রসারণ দেখতে পাই, কিন্তু একই সময়ে প্রকৃত।', 'মাঠে পারফরম্যান্স যা আক্রমণাত্মক বাহিনীর ক্রমাগত পুনর্নির্মাণের সাথে থাকে।', 'সমাধান কারণ আপনি ভূগর্ভস্থ জল আছে যা অবিচ্ছিন্নভাবে আক্রমণকারী রিচার্জ।', 'সমাধান।']
2024-02-28 12:20:38,693 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['কিন্তু যখন ইট্রিংটাইট প্রসারিত হয়, আপনি একটি দৃশ্যকল্প সম্পর্কে চিন্তা করতে পারেন বাহ্যিক আছে।', 'সালফ্যাট আক্রমণ, একটি ettringite প্রসারণ যেখানে আর্দ্রতা নিমজ্জিত করা হয় এবং আসলে।', 'কস্টাল অভ্যাস দেখাতে শুরু করুন, যা উচ্চ দৈর্ঘ্যের দ্বারা দেখানো হয়, ঠিক আছে।', 'সুতরাং উচ্চ pH স্তরে মাইক্রোক্রিস্টালিন ইট্রিংটাইট তাজা কংক্রিটে দেখা যায়, যা আমরা সাধারণত।', 'তাড়াতাড়ি হাইড্রেটেশন আশা করি, ঠিক আছে।', 'এখন গবেষকদের মতে, এবং এটা ভালভাবে নথিভুক্ত করা হয়েছে যে মাইক্রোক্রিস্টালিন।', 'জল শোষণ ক্ষমতা সঙ্গে ettringite উচ্চ প্রসারিত হতে পারে, ঠিক আছে এবং এই সাধারণত।', 'যখন pH শর্তগুলো বেশ উচ্চ হয়, তখন ঘটে।', 'সুতরাং যদি আপনি সালফ্যাট এক্সপোজার আসে যেখানে পিএইচ হ্রাস করা হয়, উদাহরণস্বরূপ যখন আপনি।', 'যদি পরিবেশে pH স্তর কম থাকে, তাহলে দেখা যায় যে।', 'এই ইট্রিংটাইটটি খুব বেশি শোষণযোগ্য নয়। এবং যখন ইট্রিংটাইটটি।', 'জল শোষণ বা নিমজ্জন করে না, এটি খুব উচ্চ প্রসারিত হতে পারে না।', 'সুতরাং, ইট্রিংটাইট গঠন শুধুমাত্র সেই অবস্থার মধ্যে প্রসারিত হতে পারে। যেখানে।', 'বাইরের pHও যথেষ্ট বেশি।', 'এখন এটা অনেকটা ব্যাখ্যা করে কেন আমরা আসলে সম্প্রসারণ ঘটছে না।', 'মাঠ ভিত্তিক নমুনা।', 'ল্যাব নমুনাগুলিতে, আমরা একটি খুব উচ্চ স্তরের সম্প্রসারণ দেখতে পাই, কিন্তু একই সময়ে প্রকৃত।', 'মাঠে পারফরম্যান্স যা আক্রমণাত্মক বাহিনীর ক্রমাগত পুনর্নির্মাণের সাথে থাকে।', 'সমাধান কারণ আপনি ভূগর্ভস্থ জল আছে যা অবিচ্ছিন্নভাবে আক্রমণকারী রিচার্জ।', 'সমাধান।']
2024-02-28 12:20:50,442 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['কিন্তু যখন ইট্রিংটাইট প্রসারিত হয়, আপনি একটি দৃশ্যকল্প সম্পর্কে চিন্তা করতে পারেন বাহ্যিক আছে।', 'সালফ্যাট আক্রমণ, একটি ettringite প্রসারণ যেখানে আর্দ্রতা নিমজ্জিত করা হয় এবং আসলে।', 'কস্টাল অভ্যাস দেখাতে শুরু করুন, যা উচ্চ দৈর্ঘ্যের দ্বারা দেখানো হয়, ঠিক আছে।', 'সুতরাং উচ্চ pH স্তরে মাইক্রোক্রিস্টালিন ইট্রিংটাইট তাজা কংক্রিটে দেখা যায়, যা আমরা সাধারণত।', 'তাড়াতাড়ি হাইড্রেটেশন আশা করি, ঠিক আছে।', 'এখন গবেষকদের মতে, এবং এটা ভালভাবে নথিভুক্ত করা হয়েছে যে মাইক্রোক্রিস্টালিন।', 'জল শোষণ ক্ষমতা সঙ্গে ettringite উচ্চ প্রসারিত হতে পারে, ঠিক আছে এবং এই সাধারণত।', 'যখন pH শর্তগুলো বেশ উচ্চ হয়, তখন ঘটে।', 'সুতরাং যদি আপনি সালফ্যাট এক্সপোজার আসে যেখানে পিএইচ হ্রাস করা হয়, উদাহরণস্বরূপ যখন আপনি।', 'যদি পরিবেশে pH স্তর কম থাকে, তাহলে দেখা যায় যে।', 'এই ইট্রিংটাইটটি খুব বেশি শোষণযোগ্য নয়। এবং যখন ইট্রিংটাইটটি।', 'জল শোষণ বা নিমজ্জন করে না, এটি খুব উচ্চ প্রসারিত হতে পারে না।', 'সুতরাং, ইট্রিংটাইট গঠন শুধুমাত্র সেই অবস্থার মধ্যে প্রসারিত হতে পারে। যেখানে।', 'বাইরের pHও যথেষ্ট বেশি।', 'এখন এটা অনেকটা ব্যাখ্যা করে কেন আমরা আসলে সম্প্রসারণ ঘটছে না।']
2024-02-28 12:32:52,210 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['এখন, আমরা কিভাবে এটি সমাধান করতে পারি? এটাই পরবর্তী প্রশ্ন। আমি দ্রুত সমীকরণ লিখব।', 'আবার শুধু আমাদের রেফারেন্সের জন্য যা del psi দ্বারা T সমান nu times del।', 'পিএসআই বর্গ দ্বারা y যা আমার শাসকীকরণ এবং সীমানা শর্তাবলী হয়।', '0, = 0 এবং phi এর চেয়ে বড় যে কোনও সময়ের জন্য 1।', 'অসীম সময়ে দূরত্ব 0 এর চেয়ে বড় যে কোন সময় সমান হবে।', 'এখন, আমরা এখানে দেখতে পাচ্ছি যে, স্বাধীন পরিবর্তনশীলটি হল phi, দুঃখিত নির্ভরশীল phi এবং।', 'তাই, আমরা যদি করতে পারি।', 'T এবং y এর কিছু ফাংশনকে এমনভাবে প্রকাশ করুন যে নতুন সংজ্ঞায়িত পরিবর্তনশীলটি সংমিশ্রণ।', 'T এবং y এর পরিবর্তনশীলগুলি কেবলমাত্র শর্তে একটি অভিব্যক্তি পেতে। এখানে প্রতিস্থাপন করা যেতে পারে।', 'এবং নতুন পরিবর্তনশীল যা T y এর মধ্যে কিছু ধরনের সংমিশ্রণ।', 'আমি আপনাকে দেখাব কিভাবে এটা করা যায়। এই phi নির্ভরশীল, পরিবর্তনশীল এবং স্বাধীন।', 'phi নির্ভরশীল, পরিবর্তনশীল এবং স্বাধীন দুটি T y হয়. তাই, আমি চেষ্টা করছি।', 'স্বাধীন পরিবর্তনশীলগুলির একটি মাত্রাহীন সংমিশ্রণ খুঁজে বের করতে এবং পরিবর্তনশীলগুলি T y।', 'আমি eta ব্যবহার করি যা নতুন মাত্রহীন পরিবর্তনশীল এটি y দ্বারা রুট over nu times T. সুতরাং, কি', 'আমরা এখানে যা দেখতে পাচ্ছি তা হল আমার আংশিক বিভাজনীকরণ আমি সমাধান করতে চাই।', 'আমি যা দেখি তা হল যে।', 'আমার নির্ভরশীল পরিবর্তনশীল একটি মাত্রাহীন পরিমাণ যা phi কেবল গতি।', 'যে কোন y এবং T দ্বারা বিভক্ত v কিছুই যা যেখানে ধ্রুবক হয়।', 'গতিশীল প্লেটের গতি ধ্রুবক গতি।', 'নির্ভরশীল পরিবর্তনশীল phi দুটি স্বাধীন আছে।', 'শক্ত প্লেট থেকে বিবেচনা পয়েন্টের দূরত্ব y এবং দ্বিতীয় স্বাধীন।', 'পরিবর্তনশীল হল প্লেটটি চলতে শুরু করার পর কত সময় কেটে গেছে। সুতরাং, y এবং T।', 'যদি এই দুটি স্বাধীন পরিবর্তনশীলকে নির্দিষ্টভাবে সংযুক্ত করা যায়, তবে এখনও নির্ধারিত হয় না।', 'সুতরাং, যে দুটি স্বাধীন পরিবর্তনশীল একত্রিত হয় এক এবং।', 'যে স্বাধীন পরিবর্তনশীল, নতুন পরিবর্তনশীল নিজেই।', 'dimensionless তারপর আমার phi একটি নয় y এর ফাংশন এবং T ফাংশন।', 'সুতরাং, দুই স্বাধীন পরিবর্তনশীল পরিবর্তে পরিবর্তে।', 'দুই স্বাধীন পরিবর্তনশীল উপর phi এর নির্ভরতা যা সমীকরণ একটি আংশিক বিপরীত।', 'সমীকরণ আমি যা প্রস্তাব করছি তা হল এই দুটিকে একত্রিত করছি, এক ভেরিয়েবলের মধ্যে করছি।', 'সুতরাং, যখন phi হল একটি ফাংশন।', 'শুধুমাত্র একটি পরিবর্তনশীল সমীকরণ আর আংশিক বিভাজন থাকবে না এটা হয়ে যাবে।', 'সুতরাং, এটা আমাদের লক্ষ্য একটি নতুন স্বাধীন।', 'পরিবর্তনশীল এমনভাবে যে সংমিশ্রণ পরিবর্তনশীলটি আকারহীন হয়ে ওঠে এবং সংমিশ্রণ।', 'যখন এটি প্রধান নিয়ন্ত্রক সমীকরণে সব y এবং T তারা প্রতিস্থাপিত হয়।', 'তারা উভয় পক্ষ থেকে বাতিল করবে যে সমীকরণ আদর্শভাবে থাকতে হবে।', 'এবং শেষ পর্যন্ত, phi ঐ নতুন সংযুক্ত পরিবর্তনশীল. যদি এটা ঘটে তাহলে আমি না আছে।', 'আমি একটি সাধারণ বিভাজক সমীকরণ আছে. সুতরাং, এই।', 'পার্সিয়াল ডিফারেন্সাল ইকুয়েশনকে সাধারণ ইকুয়েশনগুলিতে সমাধানের পদ্ধতি জানা যায়।', 'সুতরাং, নতুন সংমিশ্রণ পরিবর্তনশীল সংজ্ঞায়িত করা হয়।', 'eta y এর সমান root over nu over, times T এবং আপনি কি পেতে তারপর আমি যাচ্ছি', 'সুতরাং, আমার del psi দ্বারা T। আমি এটা হিসাবে প্রকাশ করতে পারেন।', 'd e দ্বারা t এর times del eta which সহজেই সমান হবে।', '- আধা eta দ্বারা T d phi eta. একইভাবে, del psi y শুধু সমান হবে d।', 'পিএসআই দ্বারা d, eta times del y যা psi এর সমান হবে।', 'd eta দ্বারা 1 root over 4 nu T এবং del 2 psi y বর্গক্ষেত্র সমান হবে।', 'd 2 psi দ্বারা eta × 1 রুট over 4 nu T বার del y. সুতরাং, এই হবে', 'd 2 psi by eta বর্গক্ষেত্র × 1 root over 4 T এবং আবার nu।', 'সুতরাং, যদি শেষ পর্যন্ত আপনি কি পাবেন d 2 psi দ্বারা দুঃখিত del psi।', 'দ্বারা del y বর্গক্ষেত্র d 2 psi eta × 1 রুট 4 nu সমান হবে।']
2024-02-28 12:34:40,892 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['পিএসআই দ্বারা d, eta times del y যা psi এর সমান হবে।', 'd eta দ্বারা 1 root over 4 nu T এবং del 2 psi y বর্গক্ষেত্র সমান হবে।', 'd 2 psi দ্বারা eta × 1 রুট over 4 nu T বার del y. সুতরাং, এই হবে']
2024-02-28 12:35:22,230 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['d 2 psi দ্বারা eta × 1 রুট over 4 nu T বার del y. সুতরাং, এই হবে']
2024-02-28 12:35:53,003 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['d 2 psi দ্বারা eta × 1 রুট over 4 nu T বার del y. সুতরাং, এই হবে']
2024-02-28 12:35:58,633 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['d 2 psi দ্বারা eta × 1 রুট over 4 nu T বার del y. সুতরাং, এই হবে']
2024-02-28 13:34:02,750 - ERROR - synthesize - Line 279 - Exception occurred: list index out of range.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/indic_unified_parser/helpers.py, Line 256 Error IndexError : list index out of range
2024-03-02 08:27:42,106 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 542.00 MiB (GPU 0; 23.69 GiB total capacity; 11.52 GiB already allocated; 532.94 MiB free; 12.26 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/nn/functional.py, Line 1633 Error RuntimeError : CUDA out of memory. Tried to allocate 542.00 MiB (GPU 0; 23.69 GiB total capacity; 11.52 GiB already allocated; 532.94 MiB free; 12.26 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 08:29:30,943 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.23 GiB (GPU 0; 23.69 GiB total capacity; 11.76 GiB already allocated; 874.94 MiB free; 11.92 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.23 GiB (GPU 0; 23.69 GiB total capacity; 11.76 GiB already allocated; 874.94 MiB free; 11.92 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 08:29:45,835 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.23 GiB (GPU 0; 23.69 GiB total capacity; 11.76 GiB already allocated; 874.94 MiB free; 11.92 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.23 GiB (GPU 0; 23.69 GiB total capacity; 11.76 GiB already allocated; 874.94 MiB free; 11.92 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 08:29:50,388 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.29 GiB (GPU 0; 23.69 GiB total capacity; 637.41 MiB already allocated; 472.94 MiB free; 768.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.29 GiB (GPU 0; 23.69 GiB total capacity; 637.41 MiB already allocated; 472.94 MiB free; 768.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 08:30:43,880 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.14 GiB (GPU 0; 23.69 GiB total capacity; 620.10 MiB already allocated; 484.94 MiB free; 756.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.14 GiB (GPU 0; 23.69 GiB total capacity; 620.10 MiB already allocated; 484.94 MiB free; 756.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 08:33:54,061 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 360.00 MiB (GPU 0; 23.69 GiB total capacity; 1.07 GiB already allocated; 56.94 MiB free; 1.16 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 360.00 MiB (GPU 0; 23.69 GiB total capacity; 1.07 GiB already allocated; 56.94 MiB free; 1.16 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 08:34:01,269 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 232.00 MiB (GPU 0; 23.69 GiB total capacity; 1.02 GiB already allocated; 4.94 MiB free; 1.21 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 232.00 MiB (GPU 0; 23.69 GiB total capacity; 1.02 GiB already allocated; 4.94 MiB free; 1.21 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 08:34:28,390 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.14 GiB (GPU 0; 23.69 GiB total capacity; 1.06 GiB already allocated; 24.94 MiB free; 1.19 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.14 GiB (GPU 0; 23.69 GiB total capacity; 1.06 GiB already allocated; 24.94 MiB free; 1.19 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 08:34:37,979 - ERROR - synthesize - Line 279 - Exception occurred: CUDA out of memory. Tried to allocate 2.08 GiB (GPU 0; 23.69 GiB total capacity; 11.59 GiB already allocated; 210.94 MiB free; 11.74 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.08 GiB (GPU 0; 23.69 GiB total capacity; 11.59 GiB already allocated; 210.94 MiB free; 11.74 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-02 10:29:53,436 - ERROR - synthesize - Line 279 - Exception occurred: list index out of range.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/indic_unified_parser/helpers.py, Line 256 Error IndexError : list index out of range
2024-03-02 10:30:05,266 - ERROR - synthesize - Line 279 - Exception occurred: list index out of range.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/indic_unified_parser/helpers.py, Line 256 Error IndexError : list index out of range
2024-03-03 20:51:49,140 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,147 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,154 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,368 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,390 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,438 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,766 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,805 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,866 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,958 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:49,997 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:50,060 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:50,283 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:50,325 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:50,390 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:50,600 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:50,641 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 20:51:50,702 - ERROR - synthesize - Line 280 - Exception occurred: 'int' object has no attribute 'replace'.|| TRACEBACK : Error in File /speech/abdullah/tts_api/get_phone_mapped_python.py, Line 62 Error AttributeError : 'int' object has no attribute 'replace'
2024-03-03 21:00:20,288 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-03 21:10:28,592 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:02,907 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:02,995 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:03,241 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:03,323 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:03,704 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:03,978 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:04,361 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:04,587 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 09:40:04,734 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 15:36:46,854 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-04 16:23:27,571 - ERROR - log_exception - Line 1742 - Exception on /vtt_to_speech [GET]
Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 128, in on_json_loading_failed
    return super().on_json_loading_failed(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 612, in on_json_loading_failed
    "Did not attempt to load JSON data because the request"
werkzeug.exceptions.BadRequest: 400 Bad Request: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/speech/abdullah/tts_api/api.py", line 142, in extract_text_from_vtt
    json_data = request.get_json()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/werkzeug/wrappers/request.py", line 571, in get_json
    return self.on_json_loading_failed(None)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/wrappers.py", line 133, in on_json_loading_failed
    raise BadRequest() from e
werkzeug.exceptions.BadRequest: 400 Bad Request: The browser (or proxy) sent a request that this server could not understand.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/speech/abdullah/tts_api/api.py", line 210, in extract_text_from_vtt
    logging.error(f"Exception occurred: {err}. Input text: {extracted_text}")
UnboundLocalError: local variable 'extracted_text' referenced before assignment
2024-03-04 16:43:12,608 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['OK കോണും ഞാൻ നോക്കിയിട്ടുണ്ടെന്ന് പറയാം , അതായത് 0 എന്നതുതന്നെ .', 'അതുകൊണ്ട് , ഈ ചൂട് എവിടെ നിന്ന് എത്തിക്കുന്നു എന്ന് അറിയണം .', 'x ദിശ , 1, 2 എന്നതു പോലെ , ഞാൻ അതിനെ റേഡിയസ് എന്ന് വിളിക്കാൻ ആഗ്രഹിച്ചു .', 'അതായത് , അത് കേന്ദ്രം , അതിനാൽ റേഡിയസ് 0 ആണ് .', 'അതുകൊണ്ട് , x 1 മുതൽ 2 വരെയുള്ള താപത്തിന്റെ അളവ് എന്താണെന്ന് അറിയണം .', 'ഞാൻ ഒരു അനുമാനം എടുക്കാൻ പോകുന്നു , കാരണം 1D സിസ്റ്റങ്ങൾ നോക്കുകയാണ് , എടുക്കുകയാണ് .', 'ഓരോ ക്രോസ് സെക്ഷൻ താപനില , സെക്ഷൻ .', 'ഞാൻ ഊഹിക്കുന്നു താപനില ക്രോസ് സെക്ഷനിൽ ഏകീകൃതമാണ് ഗ്രേഡിയന്റുകൾ . 0.', '- ശരി .', 'അതുകൊണ്ട് , ഈ സ്ഥലം എവിടെയെങ്കിലും എന്റെ റേഡിയസ് ആണ് , അങ്ങനെ എനിക്ക് ബാലൻസ് എഴുതാം ,', 'ഇത് ഒരു സ്റ്റാറ്റിസ്റ്റേറ്റ് സിസ്റ്റമാണെന്നും ചൂട് ഉത്പാദനം 0 ആണെന്നും കരുതുക , അതേ അനുമാനങ്ങൾ .', 'മുമ്പ് ചെയ്തതുപോലെ .', 'അതുകൊണ്ട് എനിക്ക് ചൂട് ആകെ എഴുതാം , കൈമാറ്റം നിരക്ക് x എന്നതിലേക്ക് .', '- k, അതായത് ആ വസ്തുവിന്റെ സംക്രമണം ക്രോസ് സെക്ഷണൽ ഗുണിച്ചാൽ .', 'താപം കൊണ്ടുപോകുന്ന മേഖല .', 'അതിനാൽ , കുരിശു വരി ഒരു സ്ഥാനമാണ് ,', 'ഒരു സ്ഥാനം എന്ന ഫംഗ്ഷൻ ക്ഷമിക്കണം , dT കൊണ്ട് dx കൊണ്ട് .', 'അപ്പോൾ , ലക്ഷ്യം എന്താണ് ?', 'നമുക്ക് പ്രശ്നം പരിഹരിക്കാനുള്ള താപനിലാ പ്രിഫൈൽ കണ്ടെത്തണം .', 'താപനില വിതരണം അറിയാമെങ്കിൽ പ്രൊഫൈൽ അറിയാമെങ്കിൽ .', 'നമ്മൾ ചെയ്തുകഴിഞ്ഞു , സിസ്റ്റം അളന്നു .', 'അതാണു നാം കണ്ടെത്തേണ്ടത് .', 'ഈ സമവാക്യം സമന്വയിപ്പിച്ചു എന്ന് പറയാം .', '2x - k ആണ് , അതിന്റെ വലിപ്പം എത്ര ?', 'അത് പൈ ആണ് , ക്രോസ് സെക്ഷൻ ഏരിയ ആണ് റേഡിയസ് സ്ക്വയർ ർ വലത് ഗുണിച്ചാൽ .', 'ഡി . ടി . ഡി എക്സ് വലത് .', 'അതിനാൽ , r എന്നത് സ്ഥാനം ഒരു ലീനിയർ ഫംഗ്ഷനായി ആണെന്ന് ഞാൻ പറഞ്ഞാൽ ,', 'പ്രാദേശിക റേഡിയസിന്റെ റേഡിയസ് ആക്സിറ്റൽ സ്ഥാനത്തിന്റെ ലീനിയർ ഫംഗ്ഷനായി പോകുന്നു , അപ്പോൾ എനിക്ക് കഴിയും .', 'ഇത് വെറും - k pi a square x ആയി dT by dx ok പുനരവചരിക്കുക .', 'ഇനി എന്തായിരിക്കും ക്യുഎക്സ് ?', 'അത് സ്ഥിരമായിരിക്കുമോ അതോ മാറുമോ ?', 'താപം കൈമാറ്റം നിരക്ക് സ്ഥിരമായിരിക്കണം .', 'അത് സ്ഥിരമായിരിക്കുമോ ?', 'ഊർജ്ജ സമതുലിതാവസ്ഥ കാരണം ചൂട് ഉണ്ടാകുന്നില്ലെന്ന് കാണാം .', 'അതുകൊണ്ട് , എന്തൊക്കെ വന്നാലും , അത് സ്ഥിരതയുള്ള അവസ്ഥയില് ഇവിടെ ഇറങ്ങണം .', 'സ്ഥിരത വളരെ പ്രധാനപ്പെട്ടതാണ് .', 'അതെ , അതെ .', 'ശരിയാണ് .', 'അതുകൊണ്ട് , ചോദ്യം ഇതാണ് , നിങ്ങൾക്ക് ചൂട് വിതറാൻ കഴിയുമെങ്കിൽ അത് എങ്ങനെ സ്ഥിരമായി തുടരും ?', 'എന്നാൽ ചൂട് ഉല്പാദനമോ നഷ്ടമോ ഇല്ലെന്ന് പറയുമ്പോൾ അതായത് വിതറുന്നതാണോ .', '0 ആണ് .', 'അത് നമ്മൾ ചെയ്യും .', 'അതിനുള്ള വഴികൾ ഉണ്ട് .', 'നമ്മൾ രണ്ടു അളവിലുള്ള ഒരു സിസ്റ്റം ചെയ്യുമ്പോൾ , നിങ്ങൾക്ക് .', 'പുറം മതിലുകളിൽ നിന്നും വിതരണത്തെ നോക്കൂ , അത് നമ്മൾ കാണും .', 'ഭാവിയിലെ പ്രഭാഷണങ്ങളിൽ ഉദാഹരണങ്ങൾ .', 'Qx സ്ഥിരം ആയതിനാൽ , ഈ പദപ്രയോഗം സംയോജിപ്പിച്ച് താപനില കണ്ടെത്താൻ സാധിക്കും .', 'പ്രൊഫൈല് .', 'T1 ഉം T തമ്മിലുള്ള സംയോജനം ആണെങ്കിൽ , എന്നത് .', 'ഈ സിസ്റ്റം ശരിയാണ് , T1 സിസ്റ്റത്തിന്റെ അതിരുകളിലെ താപനിലയാണ് .', 'ഞാൻ T1 ഉം T തമ്മിലുള്ള സംയോജനം , അത് k pi R ന്റെ a x minus Qx', 'x1 മുതൽ x വരെ പോകുന്നു .', 'അത് വളരെ ലളിതമായ ഒരു സംയോജനമാണ് .', 'അതായത് , ഇത് ക്യുഎക്സ് x പൈ ഒരു സ്ക്വയർ ആയി 1 - ആണ് .', 'അതിനാൽ , 1 x സ്ക്വയർ എന്നതിന്റെ കാരണം , - ചിഹ്നം ഇല്ലാതാകും .', '- ശരി .', 'ഇത് T- നു കുറവ് , T1 ആണ് .', 'അതുകൊണ്ട് , T T1 + Qx x k pi a squared ആയി 1 minus x1 ആയി .', 'അത് പൂർണ്ണ വിവരണമോ ?', 'Qx മൂല്യം കൃത്യമായി നമുക്ക് അറിയില്ല .', 'അതുകൊണ്ട് , അത് ഒരു പൂർണ്ണ വിവരണം അല്ല .', 'പിന്നെ , നമുക്ക് എങ്ങനെ ക്യുഎക്സ് കണ്ടെത്താം ?', 'താപനിലയും മറ്റേ അതിർത്തിയും T2 ആണെന്ന് നമുക്കറിയാം .', 'നമുക്ക് ആ സ്വഭാവം ഉപയോഗിച്ച് Qx എന്താണെന്ന് കണ്ടെത്താം .', 'അതുകൊണ്ട് , ക്യുഎക്സ് എന്താണെന്ന് നമുക്കറിയില്ല .', 'പിന്നെ , നമ്മൾ എങ്ങനെയാണ് അത് ചെയ്യേണ്ടത് ?', 'T2 T1 + Qx x k pi a squared 1 2 - ഗുണിച്ചാൽ .', 'x1 ൽ നിന്നും .', 'ഇവിടെ നിന്ന് Qx T2 minus T1 ആയിരിക്കും 1 x2 x1 ഗുണിച്ചാൽ k pi.', 'ഒരു സ്ക്വയർ k പൈ കൊണ്ട് ഗുണിച്ചാൽ .', 'അതുകൊണ്ട് നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .', 'x', 'അതായത് , വ്യതിയാനങ്ങളുള്ള സിസ്റ്റത്തിലെ താപനില . വിതരണം .', 'ക്രോസ് സെക്ഷൻ ഏരിയ .', 'ഈ ഉദാഹരണത്തിലെ പ്രധാന സന്ദേശം ഇതാണ്ഃ നിങ്ങൾക്ക് ആവശ്യമുള്ളത് , ഇവിടെ സൂക്ഷിച്ചിരിക്കുന്നത് .', 'ഈ സംവിധാനത്തില് സ്ഥിരമായി നിലനിൽക്കുന്നതോ ആയതുകൊണ്ടോ ചൂട് ഉല്പാദനമോ വിതരണമോ ഇല്ലെന്നോ ആയതുകൊണ്ടോ .', 'ചൂട് കൈമാറ്റ നിരക്ക് അല്ല ഫ്ലോക്ക് ഓക്കാണ് .', 'അതുകൊണ്ട് , ഇവിടെ നിങ്ങൾ വേർതിരിക്കണം .', 'ചൂട് കൈമാറ്റ നിരക്ക് ആണ് നമ്മൾ പറഞ്ഞിരിക്കുന്നത് , അത് സ്ഥിരമായി തുടരുന്നു .', 'എന്നിരുന്നാലും , Q prime- ൽ ലഭിക്കുന്ന ഫ്ലക്സ് , അത് - k dT- dx ആണ് , ഇത് ഒരു സ്ഥിരതയല്ല .', 'ഇത് ഒരു പ്രധാന നിരീക്ഷണമാണ് . ലളിതമായ 1D സിസ്റ്റത്തിൽ നിങ്ങൾ അത് ചെയ്തിരുന്നില്ല .', 'ക്രോസ് സെക്ഷൻ ഏരിയ സ്ഥിരമായ സ്ഥലത്ത് .', 'താപം ഗതാഗത ക്രോസ് സെക്ഷണൽ ഏരിയ നിങ്ങൾ കഴിയില്ല എവിടെ സ്ഥിരമാണ് .', 'രണ്ടുപേരും തമ്മിൽ അത്തരമൊരു വ്യത്യാസം ഉണ്ടാക്കുക .', 'അതുകൊണ്ട് , നിങ്ങൾ വ്യത്യസ്തമായ ക്രോസ് സെക്ഷൻ ഏരിയ ഉണ്ടെങ്കിൽ , എന്താണ് ശരിക്കും സംരക്ഷിതവും എന്താണ് .', 'ശരിക്കും സംരക്ഷിക്കപ്പെട്ടിരിക്കുന്നത് ചൂട് കൈമാറ്റ നിരക്കാണ് , വാസ്തവത്തിൽ , നിങ്ങൾ എഴുതുന്നതിന്റെ കാരണം .', 'ഒരു നിരക്ക് ബാലൻസ് അല്ല , ഫ്ലക്സ് ബാലൻസ് .', 'അതുകൊണ്ട് ഈ വ്യത്യാസം മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് .', 'ഒരു കൈമാറ്റ നിരക്ക് ബാലൻസ് എഴുതേണ്ടത് പ്രധാനമാണ് , കാരണം അത് അവസാന അളവാണ് .', 'ഒരു ചെറിയ ഘടകത്തിലും ഒഴുക്ക് സ്ഥിരമായി തുടരേണ്ട ആവശ്യമില്ല .', 'അതുകൊണ്ട് ഈ വ്യത്യാസങ്ങൾ മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് . അടുത്തതായി നാം കാണും .', 'ഈ വസ്തുക്കൾ എങ്ങനെ ഒരു പങ്ക് വഹിക്കും നിങ്ങൾ റാഡിയൽ സിസ്റ്റങ്ങൾ നോക്കുമ്പോൾ എവിടെ ?', 'ഇത് വളരെ പ്രധാനപ്പെട്ടതായി മാറുന്നു .']
2024-03-04 16:44:24,765 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['OK കോണും ഞാൻ നോക്കിയിട്ടുണ്ടെന്ന് പറയാം , അതായത് 0 എന്നതുതന്നെ .', 'അതുകൊണ്ട് , ഈ ചൂട് എവിടെ നിന്ന് എത്തിക്കുന്നു എന്ന് അറിയണം .', 'x ദിശ , 1, 2 എന്നതു പോലെ , ഞാൻ അതിനെ റേഡിയസ് എന്ന് വിളിക്കാൻ ആഗ്രഹിച്ചു .', 'അതായത് , അത് കേന്ദ്രം , അതിനാൽ റേഡിയസ് 0 ആണ് .', 'അതുകൊണ്ട് , x 1 മുതൽ 2 വരെയുള്ള താപത്തിന്റെ അളവ് എന്താണെന്ന് അറിയണം .', 'ഞാൻ ഒരു അനുമാനം എടുക്കാൻ പോകുന്നു , കാരണം 1D സിസ്റ്റങ്ങൾ നോക്കുകയാണ് , എടുക്കുകയാണ് .', 'ഓരോ ക്രോസ് സെക്ഷൻ താപനില , സെക്ഷൻ .', 'ഞാൻ ഊഹിക്കുന്നു താപനില ക്രോസ് സെക്ഷനിൽ ഏകീകൃതമാണ് ഗ്രേഡിയന്റുകൾ . 0.', '- ശരി .', 'അതുകൊണ്ട് , ഈ സ്ഥലം എവിടെയെങ്കിലും എന്റെ റേഡിയസ് ആണ് , അങ്ങനെ എനിക്ക് ബാലൻസ് എഴുതാം ,', 'ഇത് ഒരു സ്റ്റാറ്റിസ്റ്റേറ്റ് സിസ്റ്റമാണെന്നും ചൂട് ഉത്പാദനം 0 ആണെന്നും കരുതുക , അതേ അനുമാനങ്ങൾ .', 'മുമ്പ് ചെയ്തതുപോലെ .', 'അതുകൊണ്ട് എനിക്ക് ചൂട് ആകെ എഴുതാം , കൈമാറ്റം നിരക്ക് x എന്നതിലേക്ക് .', '- k, അതായത് ആ വസ്തുവിന്റെ സംക്രമണം ക്രോസ് സെക്ഷണൽ ഗുണിച്ചാൽ .', 'താപം കൊണ്ടുപോകുന്ന മേഖല .', 'അതിനാൽ , കുരിശു വരി ഒരു സ്ഥാനമാണ് ,', 'ഒരു സ്ഥാനം എന്ന ഫംഗ്ഷൻ ക്ഷമിക്കണം , dT കൊണ്ട് dx കൊണ്ട് .', 'അപ്പോൾ , ലക്ഷ്യം എന്താണ് ?', 'നമുക്ക് പ്രശ്നം പരിഹരിക്കാനുള്ള താപനിലാ പ്രിഫൈൽ കണ്ടെത്തണം .', 'താപനില വിതരണം അറിയാമെങ്കിൽ പ്രൊഫൈൽ അറിയാമെങ്കിൽ .', 'നമ്മൾ ചെയ്തുകഴിഞ്ഞു , സിസ്റ്റം അളന്നു .', 'അതാണു നാം കണ്ടെത്തേണ്ടത് .', 'ഈ സമവാക്യം സമന്വയിപ്പിച്ചു എന്ന് പറയാം .', '2x - k ആണ് , അതിന്റെ വലിപ്പം എത്ര ?', 'അത് പൈ ആണ് , ക്രോസ് സെക്ഷൻ ഏരിയ ആണ് റേഡിയസ് സ്ക്വയർ ർ വലത് ഗുണിച്ചാൽ .', 'ഡി . ടി . ഡി എക്സ് വലത് .', 'അതിനാൽ , r എന്നത് സ്ഥാനം ഒരു ലീനിയർ ഫംഗ്ഷനായി ആണെന്ന് ഞാൻ പറഞ്ഞാൽ ,', 'പ്രാദേശിക റേഡിയസിന്റെ റേഡിയസ് ആക്സിറ്റൽ സ്ഥാനത്തിന്റെ ലീനിയർ ഫംഗ്ഷനായി പോകുന്നു , അപ്പോൾ എനിക്ക് കഴിയും .', 'ഇത് വെറും - k pi a square x ആയി dT by dx ok പുനരവചരിക്കുക .', 'ഇനി എന്തായിരിക്കും ക്യുഎക്സ് ?', 'അത് സ്ഥിരമായിരിക്കുമോ അതോ മാറുമോ ?', 'താപം കൈമാറ്റം നിരക്ക് സ്ഥിരമായിരിക്കണം .', 'അത് സ്ഥിരമായിരിക്കുമോ ?', 'ഊർജ്ജ സമതുലിതാവസ്ഥ കാരണം ചൂട് ഉണ്ടാകുന്നില്ലെന്ന് കാണാം .', 'അതുകൊണ്ട് , എന്തൊക്കെ വന്നാലും , അത് സ്ഥിരതയുള്ള അവസ്ഥയില് ഇവിടെ ഇറങ്ങണം .', 'സ്ഥിരത വളരെ പ്രധാനപ്പെട്ടതാണ് .', 'അതെ , അതെ .', 'ശരിയാണ് .', 'അതുകൊണ്ട് , ചോദ്യം ഇതാണ് , നിങ്ങൾക്ക് ചൂട് വിതറാൻ കഴിയുമെങ്കിൽ അത് എങ്ങനെ സ്ഥിരമായി തുടരും ?', 'എന്നാൽ ചൂട് ഉല്പാദനമോ നഷ്ടമോ ഇല്ലെന്ന് പറയുമ്പോൾ അതായത് വിതറുന്നതാണോ .', '0 ആണ് .', 'അത് നമ്മൾ ചെയ്യും .', 'അതിനുള്ള വഴികൾ ഉണ്ട് .', 'നമ്മൾ രണ്ടു അളവിലുള്ള ഒരു സിസ്റ്റം ചെയ്യുമ്പോൾ , നിങ്ങൾക്ക് .', 'പുറം മതിലുകളിൽ നിന്നും വിതരണത്തെ നോക്കൂ , അത് നമ്മൾ കാണും .', 'ഭാവിയിലെ പ്രഭാഷണങ്ങളിൽ ഉദാഹരണങ്ങൾ .', 'Qx സ്ഥിരം ആയതിനാൽ , ഈ പദപ്രയോഗം സംയോജിപ്പിച്ച് താപനില കണ്ടെത്താൻ സാധിക്കും .', 'പ്രൊഫൈല് .', 'T1 ഉം T തമ്മിലുള്ള സംയോജനം ആണെങ്കിൽ , എന്നത് .', 'ഈ സിസ്റ്റം ശരിയാണ് , T1 സിസ്റ്റത്തിന്റെ അതിരുകളിലെ താപനിലയാണ് .', 'ഞാൻ T1 ഉം T തമ്മിലുള്ള സംയോജനം , അത് k pi R ന്റെ a x minus Qx', 'x1 മുതൽ x വരെ പോകുന്നു .', 'അത് വളരെ ലളിതമായ ഒരു സംയോജനമാണ് .', 'അതായത് , ഇത് ക്യുഎക്സ് x പൈ ഒരു സ്ക്വയർ ആയി 1 - ആണ് .', 'അതിനാൽ , 1 x സ്ക്വയർ എന്നതിന്റെ കാരണം , - ചിഹ്നം ഇല്ലാതാകും .', '- ശരി .', 'ഇത് T- നു കുറവ് , T1 ആണ് .', 'അതുകൊണ്ട് , T T1 + Qx x k pi a squared ആയി 1 minus x1 ആയി .', 'അത് പൂർണ്ണ വിവരണമോ ?', 'Qx മൂല്യം കൃത്യമായി നമുക്ക് അറിയില്ല .', 'അതുകൊണ്ട് , അത് ഒരു പൂർണ്ണ വിവരണം അല്ല .', 'പിന്നെ , നമുക്ക് എങ്ങനെ ക്യുഎക്സ് കണ്ടെത്താം ?', 'താപനിലയും മറ്റേ അതിർത്തിയും T2 ആണെന്ന് നമുക്കറിയാം .', 'നമുക്ക് ആ സ്വഭാവം ഉപയോഗിച്ച് Qx എന്താണെന്ന് കണ്ടെത്താം .', 'അതുകൊണ്ട് , ക്യുഎക്സ് എന്താണെന്ന് നമുക്കറിയില്ല .', 'പിന്നെ , നമ്മൾ എങ്ങനെയാണ് അത് ചെയ്യേണ്ടത് ?', 'T2 T1 + Qx x k pi a squared 1 2 - ഗുണിച്ചാൽ .', 'x1 ൽ നിന്നും .', 'ഇവിടെ നിന്ന് Qx T2 minus T1 ആയിരിക്കും 1 x2 x1 ഗുണിച്ചാൽ k pi.', 'ഒരു സ്ക്വയർ k പൈ കൊണ്ട് ഗുണിച്ചാൽ .', 'അതുകൊണ്ട് നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .', 'x', 'അതായത് , വ്യതിയാനങ്ങളുള്ള സിസ്റ്റത്തിലെ താപനില . വിതരണം .', 'ക്രോസ് സെക്ഷൻ ഏരിയ .', 'ഈ ഉദാഹരണത്തിലെ പ്രധാന സന്ദേശം ഇതാണ്ഃ നിങ്ങൾക്ക് ആവശ്യമുള്ളത് , ഇവിടെ സൂക്ഷിച്ചിരിക്കുന്നത് .', 'ഈ സംവിധാനത്തില് സ്ഥിരമായി നിലനിൽക്കുന്നതോ ആയതുകൊണ്ടോ ചൂട് ഉല്പാദനമോ വിതരണമോ ഇല്ലെന്നോ ആയതുകൊണ്ടോ .', 'ചൂട് കൈമാറ്റ നിരക്ക് അല്ല ഫ്ലോക്ക് ഓക്കാണ് .', 'അതുകൊണ്ട് , ഇവിടെ നിങ്ങൾ വേർതിരിക്കണം .', 'ചൂട് കൈമാറ്റ നിരക്ക് ആണ് നമ്മൾ പറഞ്ഞിരിക്കുന്നത് , അത് സ്ഥിരമായി തുടരുന്നു .', 'എന്നിരുന്നാലും , Q prime- ൽ ലഭിക്കുന്ന ഫ്ലക്സ് , അത് - k dT- dx ആണ് , ഇത് ഒരു സ്ഥിരതയല്ല .', 'ഇത് ഒരു പ്രധാന നിരീക്ഷണമാണ് . ലളിതമായ 1D സിസ്റ്റത്തിൽ നിങ്ങൾ അത് ചെയ്തിരുന്നില്ല .', 'ക്രോസ് സെക്ഷൻ ഏരിയ സ്ഥിരമായ സ്ഥലത്ത് .', 'താപം ഗതാഗത ക്രോസ് സെക്ഷണൽ ഏരിയ നിങ്ങൾ കഴിയില്ല എവിടെ സ്ഥിരമാണ് .', 'രണ്ടുപേരും തമ്മിൽ അത്തരമൊരു വ്യത്യാസം ഉണ്ടാക്കുക .', 'അതുകൊണ്ട് , നിങ്ങൾ വ്യത്യസ്തമായ ക്രോസ് സെക്ഷൻ ഏരിയ ഉണ്ടെങ്കിൽ , എന്താണ് ശരിക്കും സംരക്ഷിതവും എന്താണ് .', 'ശരിക്കും സംരക്ഷിക്കപ്പെട്ടിരിക്കുന്നത് ചൂട് കൈമാറ്റ നിരക്കാണ് , വാസ്തവത്തിൽ , നിങ്ങൾ എഴുതുന്നതിന്റെ കാരണം .', 'ഒരു നിരക്ക് ബാലൻസ് അല്ല , ഫ്ലക്സ് ബാലൻസ് .', 'അതുകൊണ്ട് ഈ വ്യത്യാസം മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് .', 'ഒരു കൈമാറ്റ നിരക്ക് ബാലൻസ് എഴുതേണ്ടത് പ്രധാനമാണ് , കാരണം അത് അവസാന അളവാണ് .', 'ഒരു ചെറിയ ഘടകത്തിലും ഒഴുക്ക് സ്ഥിരമായി തുടരേണ്ട ആവശ്യമില്ല .', 'അതുകൊണ്ട് ഈ വ്യത്യാസങ്ങൾ മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് . അടുത്തതായി നാം കാണും .', 'ഈ വസ്തുക്കൾ എങ്ങനെ ഒരു പങ്ക് വഹിക്കും നിങ്ങൾ റാഡിയൽ സിസ്റ്റങ്ങൾ നോക്കുമ്പോൾ എവിടെ ?', 'ഇത് വളരെ പ്രധാനപ്പെട്ടതായി മാറുന്നു .']
2024-03-04 16:45:25,826 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['അതിനാൽ , 1 x സ്ക്വയർ എന്നതിന്റെ കാരണം , - ചിഹ്നം ഇല്ലാതാകും .', '- ശരി .', 'ഇത് T- നു കുറവ് , T1 ആണ് .', 'അതുകൊണ്ട് , T T1 + Qx x k pi a squared ആയി 1 minus x1 ആയി .', 'അത് പൂർണ്ണ വിവരണമോ ?', 'Qx മൂല്യം കൃത്യമായി നമുക്ക് അറിയില്ല .', 'അതുകൊണ്ട് , അത് ഒരു പൂർണ്ണ വിവരണം അല്ല .', 'പിന്നെ , നമുക്ക് എങ്ങനെ ക്യുഎക്സ് കണ്ടെത്താം ?', 'താപനിലയും മറ്റേ അതിർത്തിയും T2 ആണെന്ന് നമുക്കറിയാം .', 'നമുക്ക് ആ സ്വഭാവം ഉപയോഗിച്ച് Qx എന്താണെന്ന് കണ്ടെത്താം .', 'അതുകൊണ്ട് , ക്യുഎക്സ് എന്താണെന്ന് നമുക്കറിയില്ല .', 'പിന്നെ , നമ്മൾ എങ്ങനെയാണ് അത് ചെയ്യേണ്ടത് ?', 'T2 T1 + Qx x k pi a squared 1 2 - ഗുണിച്ചാൽ .', 'x1 ൽ നിന്നും .', 'ഇവിടെ നിന്ന് Qx T2 minus T1 ആയിരിക്കും 1 x2 x1 ഗുണിച്ചാൽ k pi.', 'ഒരു സ്ക്വയർ k പൈ കൊണ്ട് ഗുണിച്ചാൽ .', 'അതുകൊണ്ട് നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .', 'x', 'അതായത് , വ്യതിയാനങ്ങളുള്ള സിസ്റ്റത്തിലെ താപനില . വിതരണം .', 'ക്രോസ് സെക്ഷൻ ഏരിയ .', 'ഈ ഉദാഹരണത്തിലെ പ്രധാന സന്ദേശം ഇതാണ്ഃ നിങ്ങൾക്ക് ആവശ്യമുള്ളത് , ഇവിടെ സൂക്ഷിച്ചിരിക്കുന്നത് .', 'ഈ സംവിധാനത്തില് സ്ഥിരമായി നിലനിൽക്കുന്നതോ ആയതുകൊണ്ടോ ചൂട് ഉല്പാദനമോ വിതരണമോ ഇല്ലെന്നോ ആയതുകൊണ്ടോ .', 'ചൂട് കൈമാറ്റ നിരക്ക് അല്ല ഫ്ലോക്ക് ഓക്കാണ് .', 'അതുകൊണ്ട് , ഇവിടെ നിങ്ങൾ വേർതിരിക്കണം .', 'ചൂട് കൈമാറ്റ നിരക്ക് ആണ് നമ്മൾ പറഞ്ഞിരിക്കുന്നത് , അത് സ്ഥിരമായി തുടരുന്നു .', 'എന്നിരുന്നാലും , Q prime- ൽ ലഭിക്കുന്ന ഫ്ലക്സ് , അത് - k dT- dx ആണ് , ഇത് ഒരു സ്ഥിരതയല്ല .', 'ഇത് ഒരു പ്രധാന നിരീക്ഷണമാണ് . ലളിതമായ 1D സിസ്റ്റത്തിൽ നിങ്ങൾ അത് ചെയ്തിരുന്നില്ല .', 'ക്രോസ് സെക്ഷൻ ഏരിയ സ്ഥിരമായ സ്ഥലത്ത് .', 'താപം ഗതാഗത ക്രോസ് സെക്ഷണൽ ഏരിയ നിങ്ങൾ കഴിയില്ല എവിടെ സ്ഥിരമാണ് .', 'രണ്ടുപേരും തമ്മിൽ അത്തരമൊരു വ്യത്യാസം ഉണ്ടാക്കുക .', 'അതുകൊണ്ട് , നിങ്ങൾ വ്യത്യസ്തമായ ക്രോസ് സെക്ഷൻ ഏരിയ ഉണ്ടെങ്കിൽ , എന്താണ് ശരിക്കും സംരക്ഷിതവും എന്താണ് .', 'ശരിക്കും സംരക്ഷിക്കപ്പെട്ടിരിക്കുന്നത് ചൂട് കൈമാറ്റ നിരക്കാണ് , വാസ്തവത്തിൽ , നിങ്ങൾ എഴുതുന്നതിന്റെ കാരണം .', 'ഒരു നിരക്ക് ബാലൻസ് അല്ല , ഫ്ലക്സ് ബാലൻസ് .', 'അതുകൊണ്ട് ഈ വ്യത്യാസം മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് .', 'ഒരു കൈമാറ്റ നിരക്ക് ബാലൻസ് എഴുതേണ്ടത് പ്രധാനമാണ് , കാരണം അത് അവസാന അളവാണ് .', 'ഒരു ചെറിയ ഘടകത്തിലും ഒഴുക്ക് സ്ഥിരമായി തുടരേണ്ട ആവശ്യമില്ല .', 'അതുകൊണ്ട് ഈ വ്യത്യാസങ്ങൾ മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് . അടുത്തതായി നാം കാണും .', 'ഈ വസ്തുക്കൾ എങ്ങനെ ഒരു പങ്ക് വഹിക്കും നിങ്ങൾ റാഡിയൽ സിസ്റ്റങ്ങൾ നോക്കുമ്പോൾ എവിടെ ?', 'ഇത് വളരെ പ്രധാനപ്പെട്ടതായി മാറുന്നു .']
2024-03-04 16:46:34,035 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['അതുകൊണ്ട് നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .', 'x', 'അതായത് , വ്യതിയാനങ്ങളുള്ള സിസ്റ്റത്തിലെ താപനില . വിതരണം .', 'ക്രോസ് സെക്ഷൻ ഏരിയ .', 'ഈ ഉദാഹരണത്തിലെ പ്രധാന സന്ദേശം ഇതാണ്ഃ നിങ്ങൾക്ക് ആവശ്യമുള്ളത് , ഇവിടെ സൂക്ഷിച്ചിരിക്കുന്നത് .', 'ഈ സംവിധാനത്തില് സ്ഥിരമായി നിലനിൽക്കുന്നതോ ആയതുകൊണ്ടോ ചൂട് ഉല്പാദനമോ വിതരണമോ ഇല്ലെന്നോ ആയതുകൊണ്ടോ .', 'ചൂട് കൈമാറ്റ നിരക്ക് അല്ല ഫ്ലോക്ക് ഓക്കാണ് .', 'അതുകൊണ്ട് , ഇവിടെ നിങ്ങൾ വേർതിരിക്കണം .', 'ചൂട് കൈമാറ്റ നിരക്ക് ആണ് നമ്മൾ പറഞ്ഞിരിക്കുന്നത് , അത് സ്ഥിരമായി തുടരുന്നു .', 'എന്നിരുന്നാലും , Q prime- ൽ ലഭിക്കുന്ന ഫ്ലക്സ് , അത് - k dT- dx ആണ് , ഇത് ഒരു സ്ഥിരതയല്ല .', 'ഇത് ഒരു പ്രധാന നിരീക്ഷണമാണ് . ലളിതമായ 1D സിസ്റ്റത്തിൽ നിങ്ങൾ അത് ചെയ്തിരുന്നില്ല .', 'ക്രോസ് സെക്ഷൻ ഏരിയ സ്ഥിരമായ സ്ഥലത്ത് .', 'താപം ഗതാഗത ക്രോസ് സെക്ഷണൽ ഏരിയ നിങ്ങൾ കഴിയില്ല എവിടെ സ്ഥിരമാണ് .', 'രണ്ടുപേരും തമ്മിൽ അത്തരമൊരു വ്യത്യാസം ഉണ്ടാക്കുക .', 'അതുകൊണ്ട് , നിങ്ങൾ വ്യത്യസ്തമായ ക്രോസ് സെക്ഷൻ ഏരിയ ഉണ്ടെങ്കിൽ , എന്താണ് ശരിക്കും സംരക്ഷിതവും എന്താണ് .', 'ശരിക്കും സംരക്ഷിക്കപ്പെട്ടിരിക്കുന്നത് ചൂട് കൈമാറ്റ നിരക്കാണ് , വാസ്തവത്തിൽ , നിങ്ങൾ എഴുതുന്നതിന്റെ കാരണം .', 'ഒരു നിരക്ക് ബാലൻസ് അല്ല , ഫ്ലക്സ് ബാലൻസ് .', 'അതുകൊണ്ട് ഈ വ്യത്യാസം മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് .', 'ഒരു കൈമാറ്റ നിരക്ക് ബാലൻസ് എഴുതേണ്ടത് പ്രധാനമാണ് , കാരണം അത് അവസാന അളവാണ് .', 'ഒരു ചെറിയ ഘടകത്തിലും ഒഴുക്ക് സ്ഥിരമായി തുടരേണ്ട ആവശ്യമില്ല .', 'അതുകൊണ്ട് ഈ വ്യത്യാസങ്ങൾ മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് . അടുത്തതായി നാം കാണും .', 'ഈ വസ്തുക്കൾ എങ്ങനെ ഒരു പങ്ക് വഹിക്കും നിങ്ങൾ റാഡിയൽ സിസ്റ്റങ്ങൾ നോക്കുമ്പോൾ എവിടെ ?', 'ഇത് വളരെ പ്രധാനപ്പെട്ടതായി മാറുന്നു .']
2024-03-04 16:46:45,590 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['അതുകൊണ്ട് നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .', 'x', 'അതായത് , വ്യതിയാനങ്ങളുള്ള സിസ്റ്റത്തിലെ താപനില . വിതരണം .', 'ക്രോസ് സെക്ഷൻ ഏരിയ .', 'ഈ ഉദാഹരണത്തിലെ പ്രധാന സന്ദേശം ഇതാണ്ഃ നിങ്ങൾക്ക് ആവശ്യമുള്ളത് , ഇവിടെ സൂക്ഷിച്ചിരിക്കുന്നത് .', 'ഈ സംവിധാനത്തില് സ്ഥിരമായി നിലനിൽക്കുന്നതോ ആയതുകൊണ്ടോ ചൂട് ഉല്പാദനമോ വിതരണമോ ഇല്ലെന്നോ ആയതുകൊണ്ടോ .', 'ചൂട് കൈമാറ്റ നിരക്ക് അല്ല ഫ്ലോക്ക് ഓക്കാണ് .', 'അതുകൊണ്ട് , ഇവിടെ നിങ്ങൾ വേർതിരിക്കണം .', 'ചൂട് കൈമാറ്റ നിരക്ക് ആണ് നമ്മൾ പറഞ്ഞിരിക്കുന്നത് , അത് സ്ഥിരമായി തുടരുന്നു .', 'എന്നിരുന്നാലും , Q prime- ൽ ലഭിക്കുന്ന ഫ്ലക്സ് , അത് - k dT- dx ആണ് , ഇത് ഒരു സ്ഥിരതയല്ല .', 'ഇത് ഒരു പ്രധാന നിരീക്ഷണമാണ് . ലളിതമായ 1D സിസ്റ്റത്തിൽ നിങ്ങൾ അത് ചെയ്തിരുന്നില്ല .', 'ക്രോസ് സെക്ഷൻ ഏരിയ സ്ഥിരമായ സ്ഥലത്ത് .', 'താപം ഗതാഗത ക്രോസ് സെക്ഷണൽ ഏരിയ നിങ്ങൾ കഴിയില്ല എവിടെ സ്ഥിരമാണ് .', 'രണ്ടുപേരും തമ്മിൽ അത്തരമൊരു വ്യത്യാസം ഉണ്ടാക്കുക .', 'അതുകൊണ്ട് , നിങ്ങൾ വ്യത്യസ്തമായ ക്രോസ് സെക്ഷൻ ഏരിയ ഉണ്ടെങ്കിൽ , എന്താണ് ശരിക്കും സംരക്ഷിതവും എന്താണ് .', 'ശരിക്കും സംരക്ഷിക്കപ്പെട്ടിരിക്കുന്നത് ചൂട് കൈമാറ്റ നിരക്കാണ് , വാസ്തവത്തിൽ , നിങ്ങൾ എഴുതുന്നതിന്റെ കാരണം .', 'ഒരു നിരക്ക് ബാലൻസ് അല്ല , ഫ്ലക്സ് ബാലൻസ് .', 'അതുകൊണ്ട് ഈ വ്യത്യാസം മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് .', 'ഒരു കൈമാറ്റ നിരക്ക് ബാലൻസ് എഴുതേണ്ടത് പ്രധാനമാണ് , കാരണം അത് അവസാന അളവാണ് .', 'ഒരു ചെറിയ ഘടകത്തിലും ഒഴുക്ക് സ്ഥിരമായി തുടരേണ്ട ആവശ്യമില്ല .', 'അതുകൊണ്ട് ഈ വ്യത്യാസങ്ങൾ മനസ്സിലാക്കേണ്ടത് വളരെ പ്രധാനമാണ് . അടുത്തതായി നാം കാണും .', 'ഈ വസ്തുക്കൾ എങ്ങനെ ഒരു പങ്ക് വഹിക്കും നിങ്ങൾ റാഡിയൽ സിസ്റ്റങ്ങൾ നോക്കുമ്പോൾ എവിടെ ?', 'ഇത് വളരെ പ്രധാനപ്പെട്ടതായി മാറുന്നു .']
2024-03-04 16:47:39,910 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['അതുകൊണ്ട് നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .', 'x', 'അതായത് , വ്യതിയാനങ്ങളുള്ള സിസ്റ്റത്തിലെ താപനില . വിതരണം .', 'ക്രോസ് സെക്ഷൻ ഏരിയ .', 'ഈ ഉദാഹരണത്തിലെ പ്രധാന സന്ദേശം ഇതാണ്ഃ നിങ്ങൾക്ക് ആവശ്യമുള്ളത് , ഇവിടെ സൂക്ഷിച്ചിരിക്കുന്നത് .', 'ഈ സംവിധാനത്തില് സ്ഥിരമായി നിലനിൽക്കുന്നതോ ആയതുകൊണ്ടോ ചൂട് ഉല്പാദനമോ വിതരണമോ ഇല്ലെന്നോ ആയതുകൊണ്ടോ .', 'ചൂട് കൈമാറ്റ നിരക്ക് അല്ല ഫ്ലോക്ക് ഓക്കാണ് .', 'അതുകൊണ്ട് , ഇവിടെ നിങ്ങൾ വേർതിരിക്കണം .', 'ചൂട് കൈമാറ്റ നിരക്ക് ആണ് നമ്മൾ പറഞ്ഞിരിക്കുന്നത് , അത് സ്ഥിരമായി തുടരുന്നു .', 'എന്നിരുന്നാലും , Q prime- ൽ ലഭിക്കുന്ന ഫ്ലക്സ് , അത് - k dT- dx ആണ് , ഇത് ഒരു സ്ഥിരതയല്ല .']
2024-03-04 16:48:21,208 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['അതുകൊണ്ട് നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .']
2024-03-04 16:48:32,585 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['നമുക്ക് ഇത് നമ്മുടെ പരിഹാരത്തിലേക്ക് ബന്ധിപ്പിക്കാം .', 'T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .']
2024-03-04 16:52:41,679 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: list index out of range. Input text: ['T = T1 + k pi T2 - T1, 1 × x2, x1 ഗുണിച്ചാൽ .']
2024-03-06 11:30:45,551 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-08 17:32:22,569 - ERROR - synthesize - Line 280 - Exception occurred: CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.50 GiB already allocated; 2.09 GiB free; 10.57 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 2.47 GiB (GPU 0; 23.69 GiB total capacity; 10.50 GiB already allocated; 2.09 GiB free; 10.57 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-09 23:23:48,228 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-10 23:31:17,156 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-11 14:06:02,512 - ERROR - synthesize - Line 280 - Exception occurred: list index out of range.|| TRACEBACK : Error in File /speech/abdullah/tts_api/Unified_parser/helpers.py, Line 127 Error IndexError : list index out of range
2024-03-11 14:06:18,775 - ERROR - synthesize - Line 280 - Exception occurred: list index out of range.|| TRACEBACK : Error in File /speech/abdullah/tts_api/Unified_parser/helpers.py, Line 127 Error IndexError : list index out of range
2024-03-11 14:06:36,580 - ERROR - synthesize - Line 280 - Exception occurred: list index out of range.|| TRACEBACK : Error in File /speech/abdullah/tts_api/Unified_parser/helpers.py, Line 127 Error IndexError : list index out of range
2024-03-11 17:26:02,664 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-11 18:24:37,929 - ERROR - extract_text_from_vtt - Line 210 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination. Input text: ['ది థర్స్టీ క్రోరీ. ', 'లుక్ వాటర్. ', 'లాస్ట్ స్విట్టర్. ', 'వేరి లిటిల్ వాటర్ ఇన్ ది పాట్ ది గ్రో. ', 'థాట్ ఆఫ్ ఎ ప్లాన్ ఇట్ కలెక్షన్ సమ్ స్టోన్స్ ఎండ్. ', 'కుండ? ', 'నీరు. ', 'ర్యాంక్ వాటర్. ']
2024-03-12 10:23:18,491 - ERROR - synthesize - Line 280 - Exception occurred: local variable 'firstLet' referenced before assignment.|| TRACEBACK : Error in File /speech/abdullah/tts_api/Unified_parser/helpers.py, Line 123 Error UnboundLocalError : local variable 'firstLet' referenced before assignment
2024-03-12 10:23:21,782 - ERROR - synthesize - Line 280 - Exception occurred: local variable 'firstLet' referenced before assignment.|| TRACEBACK : Error in File /speech/abdullah/tts_api/Unified_parser/helpers.py, Line 123 Error UnboundLocalError : local variable 'firstLet' referenced before assignment
2024-03-14 10:24:03,208 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-14 10:36:44,168 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-14 11:02:45,095 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-14 11:05:32,767 - ERROR - synthesize - Line 280 - Exception occurred: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/cuda/__init__.py, Line 217 Error RuntimeError : Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 803: system has unsupported display driver / cuda driver combination
2024-03-15 09:52:06,013 - ERROR - synthesize - Line 280 - Exception occurred: CUDA out of memory. Tried to allocate 92.00 MiB (GPU 1; 23.69 GiB total capacity; 758.58 MiB already allocated; 62.94 MiB free; 856.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/nn/functional.py, Line 1633 Error RuntimeError : CUDA out of memory. Tried to allocate 92.00 MiB (GPU 1; 23.69 GiB total capacity; 758.58 MiB already allocated; 62.94 MiB free; 856.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-15 11:14:13,432 - ERROR - synthesize - Line 280 - Exception occurred: CUDA out of memory. Tried to allocate 166.00 MiB (GPU 1; 23.69 GiB total capacity; 413.68 MiB already allocated; 124.94 MiB free; 484.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/espnet/nets/pytorch_backend/transformer/attention.py, Line 110 Error RuntimeError : CUDA out of memory. Tried to allocate 166.00 MiB (GPU 1; 23.69 GiB total capacity; 413.68 MiB already allocated; 124.94 MiB free; 484.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2024-03-15 11:15:07,312 - ERROR - synthesize - Line 280 - Exception occurred: CUDA out of memory. Tried to allocate 16.00 MiB (GPU 1; 23.69 GiB total capacity; 382.99 MiB already allocated; 12.94 MiB free; 480.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF.|| TRACEBACK : Error in File /speech/abdullah/miniconda3/envs/tts_hs_hifigan/lib/python3.7/site-packages/torch/nn/functional.py, Line 1633 Error RuntimeError : CUDA out of memory. Tried to allocate 16.00 MiB (GPU 1; 23.69 GiB total capacity; 382.99 MiB already allocated; 12.94 MiB free; 480.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
